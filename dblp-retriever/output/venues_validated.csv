venue,year,identifier,heading,title,authors,page_range,length,electronic_edition,comment,status,is_full_paper
ICSE,2014,conf/icse/icse2014,Perspectives on Software Engineering,"Cowboys, ankle sprains, and keepers of quality: how is video game development different from software development?",Emerson R. Murphy-Hill; Thomas Zimmermann; Nachiappan Nagappan,1-11,11,https://doi.org/10.1145/2568225.2568226,,,TRUE
ICSE,2014,conf/icse/icse2014,Perspectives on Software Engineering,Analyze this! 145 questions for data scientists in software engineering.,Andrew Begel; Thomas Zimmermann,12-23,12,https://doi.org/10.1145/2568225.2568233,issue_last_page,fixed,TRUE
ICSE,2014,conf/icse/icse2014,Perspectives on Software Engineering,The dimensions of software engineering success.,Paul Ralph; Paul Kelly,24-35,12,https://doi.org/10.1145/2568225.2568261,issue_first_page,checked,TRUE
ICSE,2014,conf/icse/icse2014,Perspectives on Software Engineering,How do professionals perceive legacy systems and software modernization?,Ravi Khadka; Belfrit V. Batlajery; Amir Saeidi; Slinger Jansen; Jurriaan Hage,36-47,12,https://doi.org/10.1145/2568225.2568318,,,TRUE
ICSE,2014,conf/icse/icse2014,Testing 1,SimRT: an automated framework to support regression testing for data races.,Tingting Yu; Witawas Srisa-an; Gregg Rothermel,48-59,12,https://doi.org/10.1145/2568225.2568294,,,TRUE
ICSE,2014,conf/icse/icse2014,Testing 1,Performance regression testing target prioritization via performance risk analysis.,Peng Huang; Xiao Ma; Dongcai Shen; Yuanyuan Zhou,60-71,12,https://doi.org/10.1145/2568225.2568232,,,TRUE
ICSE,2014,conf/icse/icse2014,Testing 1,Code coverage for suite evaluation by developers.,Rahul Gopinath; Carlos Jensen; Alex Groce,72-82,11,https://doi.org/10.1145/2568225.2568278,,,TRUE
ICSE,2014,conf/icse/icse2014,Testing 1,Time pressure: a controlled experiment of test case development and requirements review.,Mika Mäntylä; Kai Petersen; Timo O. A. Lehtinen; Casper Lassenius,83-94,12,https://doi.org/10.1145/2568225.2568245,,,TRUE
ICSE,2014,conf/icse/icse2014,Modeling,Verifying component and connector models against crosscutting structural views.,Shahar Maoz; Jan Oliver Ringert; Bernhard Rumpe,95-105,11,https://doi.org/10.1145/2568225.2568237,,,TRUE
ICSE,2014,conf/icse/icse2014,Modeling,TradeMaker: automated dynamic analysis of synthesized tradespaces.,Hamid Bagheri; Chong Tang; Kevin J. Sullivan,106-116,11,https://doi.org/10.1145/2568225.2568291,,,TRUE
ICSE,2014,conf/icse/icse2014,Modeling,Lifting model transformations to product lines.,Rick Salay; Michalis Famelis; Julia Rubin; Alessio Di Sandro; Marsha Chechik,117-128,12,https://doi.org/10.1145/2568225.2568267,,,TRUE
ICSE,2014,conf/icse/icse2014,Modeling,Automated goal operationalisation based on interpolation and SAT solving.,Renzo Degiovanni; Dalal Alrajeh; Nazareno Aguirre; Sebastián Uchitel,129-139,11,https://doi.org/10.1145/2568225.2568323,,,TRUE
ICSE,2014,conf/icse/icse2014,"Configuration, Variability, and Clones",Mining configuration constraints: static analyses and empirical results.,Sarah Nadi; Thorsten Berger; Christian Kästner; Krzysztof Czarnecki,140-151,12,https://doi.org/10.1145/2568225.2568283,,,TRUE
ICSE,2014,conf/icse/icse2014,"Configuration, Variability, and Clones",Which configuration option should I change?,Sai Zhang; Michael D. Ernst,152-163,12,https://doi.org/10.1145/2568225.2568251,,,TRUE
ICSE,2014,conf/icse/icse2014,"Configuration, Variability, and Clones",Detecting differences across multiple instances of code clones.,Yun Lin; Zhenchang Xing; Yinxing Xue; Yang Liu; Xin Peng; Jun Sun; Wenyun Zhao,164-174,11,https://doi.org/10.1145/2568225.2568298,,,TRUE
ICSE,2014,conf/icse/icse2014,"Configuration, Variability, and Clones",Achieving accuracy and scalability simultaneously in detecting application clones on Android markets.,Kai Chen; Peng Liu; Yingjun Zhang,175-186,12,https://doi.org/10.1145/2568225.2568286,,,TRUE
ICSE,2014,conf/icse/icse2014,Social Aspects of Software Engineering,"Two's company, three's a crowd: a case study of crowdsourcing software development.",Klaas-Jan Stol; Brian Fitzgerald,187-198,12,https://doi.org/10.1145/2568225.2568249,,,TRUE
ICSE,2014,conf/icse/icse2014,Social Aspects of Software Engineering,Does latitude hurt while longitude kills? geographical and temporal separation in a large scale software development project.,Patrick Wagstrom; Subhajit Datta,199-210,12,https://doi.org/10.1145/2568225.2568279,,,TRUE
ICSE,2014,conf/icse/icse2014,Social Aspects of Software Engineering,Software engineering at the speed of light: how developers stay current using twitter.,Leif Singer; Fernando Marques Figueira Filho; Margaret-Anne D. Storey,211-221,11,https://doi.org/10.1145/2568225.2568305,,,TRUE
ICSE,2014,conf/icse/icse2014,Social Aspects of Software Engineering,Building it together: synchronous development in OSS.,Qi Xuan; Vladimir Filkov,222-233,12,https://doi.org/10.1145/2568225.2568238,,,TRUE
ICSE,2014,conf/icse/icse2014,Repair,"A critical review of ""automatic patch generation learned from human-written patches"": essay on the problem statement and the evaluation of automatic software repair.",Martin Monperrus,234-242,9,https://doi.org/10.1145/2568225.2568324,,,TRUE
ICSE,2014,conf/icse/icse2014,Repair,Data-guided repair of selection statements.,Divya Gopinath; Sarfraz Khurshid; Diptikalyan Saha; Satish Chandra,243-253,11,https://doi.org/10.1145/2568225.2568303,,,TRUE
ICSE,2014,conf/icse/icse2014,Repair,The strength of random search on automated program repair.,Yuhua Qi; Xiaoguang Mao; Yan Lei; Ziying Dai; Chengsong Wang,254-265,12,https://doi.org/10.1145/2568225.2568254,,,TRUE
ICSE,2014,conf/icse/icse2014,Repair,MintHint: automated synthesis of repair hints.,Shalini Kaleeswaran; Varun Tulsian; Aditya Kanade; Alessandro Orso,266-276,11,https://doi.org/10.1145/2568225.2568258,,,TRUE
ICSE,2014,conf/icse/icse2014,Formal Analysis,Mining behavior models from user-intensive web applications.,Carlo Ghezzi; Mauro Pezzè; Michele Sama; Giordano Tamburrelli,277-287,11,https://doi.org/10.1145/2568225.2568234,,,TRUE
ICSE,2014,conf/icse/icse2014,Formal Analysis,Reviser: efficiently updating IDE-/IFDS-based data-flow analyses in response to incremental program changes.,Steven Arzt; Eric Bodden,288-298,11,https://doi.org/10.1145/2568225.2568243,,,TRUE
ICSE,2014,conf/icse/icse2014,Formal Analysis,Automated design of self-adaptive software with control-theoretical formal guarantees.,Antonio Filieri; Henry Hoffmann; Martina Maggio,299-310,12,https://doi.org/10.1145/2568225.2568272,,,TRUE
ICSE,2014,conf/icse/icse2014,Formal Analysis,Perturbation analysis of stochastic systems with empirical distribution parameters.,Guoxin Su; David S. Rosenblum,311-321,11,https://doi.org/10.1145/2568225.2568256,,,TRUE
ICSE,2014,conf/icse/icse2014,Configuration Management,How do centralized and distributed version control systems impact software changes?,Caius Brindescu; Mihai Codoban; Sergii Shmarkatiuk; Danny Dig,322-333,12,https://doi.org/10.1145/2568225.2568322,,,TRUE
ICSE,2014,conf/icse/icse2014,Configuration Management,"Transition from centralized to decentralized version control systems: a case study on reasons, barriers, and outcomes.",Kivanç Muslu; Christian Bird; Nachiappan Nagappan; Jacek Czerwonka,334-344,11,https://doi.org/10.1145/2568225.2568284,,,TRUE
ICSE,2014,conf/icse/icse2014,Configuration Management,An exploratory study of the pull-based software development model.,Georgios Gousios; Martin Pinzger; Arie van Deursen,345-355,11,https://doi.org/10.1145/2568225.2568260,,,TRUE
ICSE,2014,conf/icse/icse2014,Configuration Management,Influence of social and technical factors for evaluating contribution in GitHub.,Jason Tsay; Laura Dabbish; James D. Herbsleb,356-366,11,https://doi.org/10.1145/2568225.2568315,,,TRUE
ICSE,2014,conf/icse/icse2014,Software Understanding,Understanding JavaScript event-based interactions.,Saba Alimadadi; Sheldon Sequeira; Ali Mesbah; Karthik Pattabiraman,367-377,11,https://doi.org/10.1145/2568225.2568268,,,TRUE
ICSE,2014,conf/icse/icse2014,Software Understanding,Understanding understanding source code with functional magnetic resonance imaging.,Janet Siegmund; Christian Kästner; Sven Apel; Chris Parnin; Anja Bethmann; Thomas Leich; Gunter Saake; André Brechmann,378-389,12,https://doi.org/10.1145/2568225.2568252,,,TRUE
ICSE,2014,conf/icse/icse2014,Software Understanding,Improving automated source code summarization via an eye-tracking study of programmers.,Paige Rodeghero; Collin McMillan; Paul W. McBurney; Nigel Bosch; Sidney K. D'Mello,390-401,12,https://doi.org/10.1145/2568225.2568247,,,TRUE
ICSE,2014,conf/icse/icse2014,Software Understanding,Using psycho-physiological measures to assess task difficulty in software development.,Thomas Fritz; Andrew Begel; Sebastian C. Müller; Serap Yigit-Elliott; Manuela Züger,402-413,12,https://doi.org/10.1145/2568225.2568266,,,TRUE
ICSE,2014,conf/icse/icse2014,Prediction,Dictionary learning based software defect prediction.,Xiao-Yuan Jing; Shi Ying; Zhi-Wu Zhang; Shanshan Wu; Jin Liu,414-423,10,https://doi.org/10.1145/2568225.2568320,,,TRUE
ICSE,2014,conf/icse/icse2014,Prediction,Comparing static bug finders and statistical prediction.,Foyzur Rahman; Sameer Khatri; Earl T. Barr; Premkumar T. Devanbu,424-434,11,https://doi.org/10.1145/2568225.2568269,,,TRUE
ICSE,2014,conf/icse/icse2014,Prediction,Coverage is not strongly correlated with test suite effectiveness.,Laura Inozemtseva; Reid Holmes,435-445,11,https://doi.org/10.1145/2568225.2568271,,,TRUE
ICSE,2014,conf/icse/icse2014,Prediction,How to make best use of cross-company data in software effort estimation?,Leandro L. Minku; Xin Yao,446-456,11,https://doi.org/10.1145/2568225.2568228,,,TRUE
ICSE,2014,conf/icse/icse2014,Concurrency,CARE: cache guided deterministic replay for concurrent Java programs.,Yanyan Jiang; Tianxiao Gu; Chang Xu; Xiaoxing Ma; Jian Lu,457-467,11,https://doi.org/10.1145/2568225.2568236,,,TRUE
ICSE,2014,conf/icse/icse2014,Concurrency,Inferring models of concurrent systems from logs of their behavior with CSight.,Ivan Beschastnikh; Yuriy Brun; Michael D. Ernst; Arvind Krishnamurthy,468-479,12,https://doi.org/10.1145/2568225.2568246,,,TRUE
ICSE,2014,conf/icse/icse2014,Concurrency,Unleashing concurrency for irregular data structures.,Peng Liu; Charles Zhang,480-490,11,https://doi.org/10.1145/2568225.2568277,,,TRUE
ICSE,2014,conf/icse/icse2014,Concurrency,ConLock: a constraint-based approach to dynamic checking on deadlocks in multithreaded programs.,Yan Cai; Shangru Wu; W. K. Chan,491-502,12,https://doi.org/10.1145/2568225.2568312,,,TRUE
ICSE,2014,conf/icse/icse2014,Apps and Energy,SEEDS: a software engineer's energy-optimization decision support framework.,Irene Lizeth Manotas Gutiérrez; Lori L. Pollock; James Clause,503-514,12,https://doi.org/10.1145/2568225.2568297,,,TRUE
ICSE,2014,conf/icse/icse2014,Apps and Energy,APE: an annotation language and middleware for energy-efficient mobile application development.,Nima Nikzad; Octav Chipara; William G. Griswold,515-526,12,https://doi.org/10.1145/2568225.2568288,,,TRUE
ICSE,2014,conf/icse/icse2014,Apps and Energy,Making web applications more energy efficient for OLED smartphones.,Ding Li; Angelica Huyen Tran; William G. J. Halfond,527-538,12,https://doi.org/10.1145/2568225.2568321,,,TRUE
ICSE,2014,conf/icse/icse2014,Testing 2,Micro execution.,Patrice Godefroid,539-549,11,https://doi.org/10.1145/2568225.2568273,,,TRUE
ICSE,2014,conf/icse/icse2014,Testing 2,Unit test virtualization with VMVM.,Jonathan Bell; Gail E. Kaiser,550-561,12,https://doi.org/10.1145/2568225.2568248,,,TRUE
ICSE,2014,conf/icse/icse2014,Testing 2,Interpolated n-grams for model based testing.,Paolo Tonella; Roberto Tiella; Duy Cu Nguyen,562-572,11,https://doi.org/10.1145/2568225.2568242,,,TRUE
ICSE,2014,conf/icse/icse2014,Testing 2,An analysis of the relationship between conditional entropy and failed error propagation in software testing.,Kelly Androutsopoulos; David Clark; Haitao Dan; Robert M. Hierons; Mark Harman,573-583,11,https://doi.org/10.1145/2568225.2568314,,,TRUE
ICSE,2014,conf/icse/icse2014,"Code Contracts, Invariants, and Robustness",Trading robustness for maintainability: an empirical study of evolving c# programs.,Nélio Cacho; Thiago César; Thomas Filipe; Eliezio Soares; Arthur Cassio; Rafael Souza; Israel García; Eiji Adachi Barbosa; Alessandro Garcia,584-595,12,https://doi.org/10.1145/2568225.2568308,,,TRUE
ICSE,2014,conf/icse/icse2014,"Code Contracts, Invariants, and Robustness",Case studies and tools for contract specifications.,Todd W. Schiller; Kellen Donohue; Forrest Coward; Michael D. Ernst,596-607,12,https://doi.org/10.1145/2568225.2568285,,,TRUE
ICSE,2014,conf/icse/icse2014,"Code Contracts, Invariants, and Robustness",Using dynamic analysis to generate disjunctive invariants.,ThanhVu Nguyen; Deepak Kapur; Westley Weimer; Stephanie Forrest,608-619,12,https://doi.org/10.1145/2568225.2568275,,,TRUE
ICSE,2014,conf/icse/icse2014,"Code Contracts, Invariants, and Robustness",Inductive verification of data model invariants for web applications.,Ivan Bocic; Tevfik Bultan,620-631,12,https://doi.org/10.1145/2568225.2568281,,,TRUE
ICSE,2014,conf/icse/icse2014,Search and APIs,How do API documentation and static typing affect API usability?,Stefan Endrikat; Stefan Hanenberg; Romain Robbes; Andreas Stefik,632-642,11,https://doi.org/10.1145/2568225.2568299,,,TRUE
ICSE,2014,conf/icse/icse2014,Search and APIs,Live API documentation.,Siddharth Subramanian; Laura Inozemtseva; Reid Holmes,643-652,10,https://doi.org/10.1145/2568225.2568313,,,TRUE
ICSE,2014,conf/icse/icse2014,Search and APIs,CodeHint: dynamic and interactive synthesis of code snippets.,Joel Galenson; Philip Reames; Rastislav Bodík; Björn Hartmann; Koushik Sen,653-663,11,https://doi.org/10.1145/2568225.2568250,,,TRUE
ICSE,2014,conf/icse/icse2014,Search and APIs,Spotting working code examples.,Iman Keivanloo; Juergen Rilling; Ying Zou,664-675,12,https://doi.org/10.1145/2568225.2568292,,,TRUE
ICSE,2014,conf/icse/icse2014,Adaptive Systems,Self-adaptation through incremental generative model transformations at runtime.,Bihuan Chen; Xin Peng; Yijun Yu; Bashar Nuseibeh; Wenyun Zhao,676-687,12,https://doi.org/10.1145/2568225.2568310,,,TRUE
ICSE,2014,conf/icse/icse2014,Adaptive Systems,"Hope for the best, prepare for the worst: multi-tier control for adaptive systems.",Nicolás D'Ippolito; Víctor A. Braberman; Jeff Kramer; Jeff Magee; Daniel Sykes; Sebastián Uchitel,688-699,12,https://doi.org/10.1145/2568225.2568264,,,TRUE
ICSE,2014,conf/icse/icse2014,Adaptive Systems,Brownout: building more robust cloud applications.,Cristian Klein; Martina Maggio; Karl-Erik Årzén; Francisco Hernández-Rodriguez,700-711,12,https://doi.org/10.1145/2568225.2568227,,,TRUE
ICSE,2014,conf/icse/icse2014,Adaptive Systems,Integrating adaptive user interface capabilities in enterprise applications.,Pierre A. Akiki; Arosha K. Bandara; Yijun Yu,712-723,12,https://doi.org/10.1145/2568225.2568230,,,TRUE
ICSE,2014,conf/icse/icse2014,Build and Package Management,Programmers' build errors: a case study (at google).,Hyunmin Seo; Caitlin Sadowski; Sebastian G. Elbaum; Edward Aftandilian; Robert W. Bowdidge,724-734,11,https://doi.org/10.1145/2568225.2568255,,,TRUE
ICSE,2014,conf/icse/icse2014,Build and Package Management,Understanding and improving software build teams.,Shaun Phillips; Thomas Zimmermann; Christian Bird,735-744,10,https://doi.org/10.1145/2568225.2568274,,,TRUE
ICSE,2014,conf/icse/icse2014,Build and Package Management,Towards efficient optimization in package management systems.,Alexey Ignatiev; Mikolás Janota; João Marques-Silva,745-755,11,https://doi.org/10.1145/2568225.2568306,,,TRUE
ICSE,2014,conf/icse/icse2014,Build and Package Management,Easing software component repository evolution.,Jérôme Vouillon; Mehdi Dogguy; Roberto Di Cosmo,756-766,11,https://doi.org/10.1145/2568225.2568262,,,TRUE
ICSE,2014,conf/icse/icse2014,Mining,AR-miner: mining informative reviews for developers from mobile app marketplace.,Ning Chen; Jialiu Lin; Steven C. H. Hoi; Xiaokui Xiao; Boshen Zhang,767-778,12,https://doi.org/10.1145/2568225.2568263,,,TRUE
ICSE,2014,conf/icse/icse2014,Mining,Mining billions of AST nodes to study actual and potential usage of Java language features.,Robert Dyer; Hridesh Rajan; Hoan Anh Nguyen; Tien N. Nguyen,779-790,12,https://doi.org/10.1145/2568225.2568295,,,TRUE
ICSE,2014,conf/icse/icse2014,Mining,"Mining interprocedural, data-oriented usage patterns in JavaScript web applications.",Hung Viet Nguyen; Hoan Anh Nguyen; Anh Tuan Nguyen; Tien N. Nguyen,791-802,12,https://doi.org/10.1145/2568225.2568302,,,TRUE
ICSE,2014,conf/icse/icse2014,Mining,Mining fine-grained code changes to detect unknown change patterns.,Stas Negara; Mihai Codoban; Danny Dig; Ralph E. Johnson,803-813,11,https://doi.org/10.1145/2568225.2568317,,,TRUE
ICSE,2014,conf/icse/icse2014,Automated Bug Detection and Repair,Detecting memory leaks through introspective dynamic behavior modelling using machine learning.,Sangho Lee; Changhee Jung; Santosh Pande,814-824,11,https://doi.org/10.1145/2568225.2568307,,,TRUE
ICSE,2014,conf/icse/icse2014,Automated Bug Detection and Repair,Automated memory leak detection for production use.,Changhee Jung; Sangho Lee; Easwaran Raman; Santosh Pande,825-836,12,https://doi.org/10.1145/2568225.2568311,,,TRUE
ICSE,2014,conf/icse/icse2014,Automated Bug Detection and Repair,Vejovis: suggesting fixes for JavaScript faults.,Frolin S. Ocariza Jr.; Karthik Pattabiraman; Ali Mesbah,837-847,11,https://doi.org/10.1145/2568225.2568257,,,TRUE
ICSE,2014,conf/icse/icse2014,Automated Bug Detection and Repair,Is spreadsheet ambiguity harmful? detecting and repairing spreadsheet smells due to ambiguous computation.,Wensheng Dou; Shing-Chi Cheung; Jun Wei,848-858,11,https://doi.org/10.1145/2568225.2568316,,,TRUE
ICSE,2014,conf/icse/icse2014,Requirements,"Us and them: a study of privacy requirements across north america, asia, and europe.",Swapneel Sheth; Gail E. Kaiser; Walid Maalej,859-870,12,https://doi.org/10.1145/2568225.2568244,,,TRUE
ICSE,2014,conf/icse/icse2014,Requirements,Distilling privacy requirements for mobile applications.,Keerthi Thomas; Arosha K. Bandara; Blaine A. Price; Bashar Nuseibeh,871-882,12,https://doi.org/10.1145/2568225.2568240,,,TRUE
ICSE,2014,conf/icse/icse2014,Requirements,"Uncertainty, risk, and information value in software requirements and architecture.",Emmanuel Letier; David Stefan; Earl T. Barr,883-894,12,https://doi.org/10.1145/2568225.2568239,,,TRUE
ICSE,2014,conf/icse/icse2014,Requirements,Requirements fixation.,Rahul Mohanani; Paul Ralph; Ben Shreeve,895-906,12,https://doi.org/10.1145/2568225.2568235,,,TRUE
ICSE,2014,conf/icse/icse2014,Testing and Conformance Verification,Exploring variability-aware execution for testing plugin-based web applications.,Hung Viet Nguyen; Christian Kästner; Tien N. Nguyen,907-918,12,https://doi.org/10.1145/2568225.2568300,,,TRUE
ICSE,2014,conf/icse/icse2014,Testing and Conformance Verification,A study of equivalent and stubborn mutation operators using human analysis of equivalence.,Xiangjuan Yao; Mark Harman; Yue Jia,919-930,12,https://doi.org/10.1145/2568225.2568265,,,TRUE
ICSE,2014,conf/icse/icse2014,Testing and Conformance Verification,Cross-checking oracles from intrinsic software redundancy.,Antonio Carzaniga; Alberto Goffi; Alessandra Gorla; Andrea Mattavelli; Mauro Pezzè,931-942,12,https://doi.org/10.1145/2568225.2568287,,,TRUE
ICSE,2014,conf/icse/icse2014,Testing and Conformance Verification,Mind the gap: assessing the conformance of software traceability to relevant guidelines.,Patrick Rempel; Patrick Mäder; Tobias Kuschke; Jane Cleland-Huang,943-954,12,https://doi.org/10.1145/2568225.2568290,,,TRUE
ICSE,2014,conf/icse/icse2014,Modeling and Interfaces,Effects of using examples on structural model comprehension: a controlled experiment.,Dina Zayan; Michal Antkiewicz; Krzysztof Czarnecki,955-966,12,https://doi.org/10.1145/2568225.2568270,,,TRUE
ICSE,2014,conf/icse/icse2014,Modeling and Interfaces,Design rule spaces: a new form of architecture insight.,Lu Xiao; Yuanfang Cai; Rick Kazman,967-977,11,https://doi.org/10.1145/2568225.2568241,,,TRUE
ICSE,2014,conf/icse/icse2014,Modeling and Interfaces,Controlled modeling environment using flexibly-formatted spreadsheets.,Hisashi Miyashita; Hideki Tai; Shunichi Amano,978-988,11,https://doi.org/10.1145/2568225.2568231,,,TRUE
ICSE,2014,conf/icse/icse2014,Modeling and Interfaces,Feature maintenance with emergent interfaces.,Márcio Ribeiro; Paulo Borba; Christian Kästner,989-1000,12,https://doi.org/10.1145/2568225.2568289,,,TRUE
ICSE,2014,conf/icse/icse2014,Apps and Verification,Detecting performance anti-patterns for applications developed using object-relational mapping.,Tse-Hsun Chen; Weiyi Shang; Zhen Ming Jiang; Ahmed E. Hassan; Mohamed N. Nasser; Parminder Flora,1001-1012,12,https://doi.org/10.1145/2568225.2568259,,,TRUE
ICSE,2014,conf/icse/icse2014,Apps and Verification,Characterizing and detecting performance bugs for smartphone applications.,Yepang Liu; Chang Xu; Shing-Chi Cheung,1013-1024,12,https://doi.org/10.1145/2568225.2568229,,,TRUE
ICSE,2014,conf/icse/icse2014,Apps and Verification,Checking app behavior against app descriptions.,Alessandra Gorla; Ilaria Tavecchia; Florian Gross; Andreas Zeller,1025-1035,11,https://doi.org/10.1145/2568225.2568276,,,TRUE
ICSE,2014,conf/icse/icse2014,Apps and Verification,AsDroid: detecting stealthy behaviors in Android applications by user interface and program behavior contradiction.,Jianjun Huang; Xiangyu Zhang; Lin Tan; Peng Wang; Bin Liang,1036-1046,11,https://doi.org/10.1145/2568225.2568301,,,TRUE
ICSE,2014,conf/icse/icse2014,Symbolic Execution,Patch verification via multiversion interprocedural control flow graphs.,Wei Le; Shannon D. Pattison,1047-1058,12,https://doi.org/10.1145/2568225.2568304,,,TRUE
ICSE,2014,conf/icse/icse2014,Symbolic Execution,Property differencing for incremental checking.,Guowei Yang; Sarfraz Khurshid; Suzette Person; Neha Rungta,1059-1070,12,https://doi.org/10.1145/2568225.2568319,,,TRUE
ICSE,2014,conf/icse/icse2014,Symbolic Execution,Symbolic assume-guarantee reasoning through BDD learning.,Fei He; Bow-Yaw Wang; Liangze Yin; Lei Zhu,1071-1082,12,https://doi.org/10.1145/2568225.2568253,,,TRUE
ICSE,2014,conf/icse/icse2014,Symbolic Execution,Enhancing symbolic execution with veritesting.,Thanassis Avgerinos; Alexandre Rebert; Sang Kil Cha; David Brumley,1083-1094,12,https://doi.org/10.1145/2568225.2568293,,,TRUE
ICSE,2014,conf/icse/icse2014,Refactoring and Reverse Engineering,Manual refactoring changes with automated refactoring validation.,Xi Ge; Emerson R. Murphy-Hill,1095-1105,11,https://doi.org/10.1145/2568225.2568280,,,TRUE
ICSE,2014,conf/icse/icse2014,Refactoring and Reverse Engineering,Alternate refactoring paths reveal usability problems.,Mohsen Vakilian; Ralph E. Johnson,1106-1116,11,https://doi.org/10.1145/2568225.2568282,,,TRUE
ICSE,2014,conf/icse/icse2014,Refactoring and Reverse Engineering,A study and toolkit for asynchronous programming in c#.,Semih Okur; David L. Hartveld; Danny Dig; Arie van Deursen,1117-1127,11,https://doi.org/10.1145/2568225.2568309,,,TRUE
ICSE,2014,conf/icse/icse2014,Refactoring and Reverse Engineering,Reuse-oriented reverse engineering of functional components from x86 binaries.,Dohyeong Kim; William N. Sumner; Xiangyu Zhang; Dongyan Xu; Hira Agrawal,1128-1139,12,https://doi.org/10.1145/2568225.2568296,,,TRUE
ICSE,2015,conf/icse/icse2015-1,Keynotes,Software Engineering in Ferrari F1.,Claudio Silenzi,3,1,https://doi.org/10.1109/ICSE.2015.22,,,FALSE
ICSE,2015,conf/icse/icse2015-1,Keynotes,Mining the Metadata - and Its Consequences.,Susan Landau,4-5,2,https://doi.org/10.1109/ICSE.2015.23,issue_last_page,checked,FALSE
ICSE,2015,conf/icse/icse2015-1,Reflections and Studies on Methodologies and Practices I,Views on Internal and External Validity in Empirical Software Engineering.,Janet Siegmund; Norbert Siegmund; Sven Apel,9-19,11,https://doi.org/10.1109/ICSE.2015.24,issue_first_page,checked,TRUE
ICSE,2015,conf/icse/icse2015-1,Reflections and Studies on Methodologies and Practices I,Developing and Evaluating Software Engineering Process Theories.,Paul Ralph,20-31,12,https://doi.org/10.1109/ICSE.2015.25,,,TRUE
ICSE,2015,conf/icse/icse2015-1,Reflections and Studies on Methodologies and Practices I,Automated Data Structure Generation: Refuting Common Wisdom.,Kyle Dewey; Lawton Nichols; Ben Hardekopf,32-43,12,https://doi.org/10.1109/ICSE.2015.26,,,TRUE
ICSE,2015,conf/icse/icse2015-1,Testing I,Automated Modularization of GUI Test Cases.,Rahulkrishna Yandrapally; Giriprasad Sridhara; Saurabh Sinha,44-54,11,https://doi.org/10.1109/ICSE.2015.27,,,TRUE
ICSE,2015,conf/icse/icse2015-1,Testing I,Making System User Interactive Tests Repeatable: When and What Should We Control?,Zebao Gao; Yalan Liang; Myra B. Cohen; Atif M. Memon; Zhen Wang,55-65,11,https://doi.org/10.1109/ICSE.2015.28,,,TRUE
ICSE,2015,conf/icse/icse2015-1,Testing I,ZoomIn: Discovering Failures by Detecting Wrong Assertions.,Fabrizio Pastore; Leonardo Mariani,66-76,11,https://doi.org/10.1109/ICSE.2015.29,,,TRUE
ICSE,2015,conf/icse/icse2015-1,Mobile Applications,Composite Constant Propagation: Application to Android Inter-Component Communication Analysis.,Damien Octeau; Daniel Luchaup; Matthew Dering; Somesh Jha; Patrick D. McDaniel,77-88,12,https://doi.org/10.1109/ICSE.2015.30,,,TRUE
ICSE,2015,conf/icse/icse2015-1,Mobile Applications,Static Control-Flow Analysis of User-Driven Callbacks in Android Applications.,Shengqian Yang; Dacong Yan; Haowei Wu; Yan Wang; Atanas Rountev,89-99,11,https://doi.org/10.1109/ICSE.2015.31,,,TRUE
ICSE,2015,conf/icse/icse2015-1,Mobile Applications,Truth in Advertising: The Hidden Cost of Mobile Ads for Software Developers.,Jiaping Gui; Stuart McIlroy; Meiyappan Nagappan; William G. J. Halfond,100-110,11,https://doi.org/10.1109/ICSE.2015.32,,,TRUE
ICSE,2015,conf/icse/icse2015-1,Evolution and Maintenance,Interactive Code Review for Systematic Changes.,Tianyi Zhang; Myoungkyu Song; Joseph Pinedo; Miryung Kim,111-122,12,https://doi.org/10.1109/ICSE.2015.33,,,TRUE
ICSE,2015,conf/icse/icse2015-1,Evolution and Maintenance,Automated Decomposition of Build Targets.,Mohsen Vakilian; Raluca Sauciuc; J. David Morgenthaler; Vahab S. Mirrokni,123-133,11,https://doi.org/10.1109/ICSE.2015.34,,,TRUE
ICSE,2015,conf/icse/icse2015-1,Evolution and Maintenance,Helping Developers Help Themselves: Automatic Decomposition of Code Review Changesets.,Mike Barnett; Christian Bird; João Brunet; Shuvendu K. Lahiri,134-144,11,https://doi.org/10.1109/ICSE.2015.35,,,TRUE
ICSE,2015,conf/icse/icse2015-1,Analysis I,Data-Delineation in Software Binaries and its Application to Buffer-Overrun Discovery.,Denis Gopan; Evan Driscoll; Ducson Nguyen; Dimitri Naydich; Alexey Loginov; David Melski,145-155,11,https://doi.org/10.1109/ICSE.2015.36,,,TRUE
ICSE,2015,conf/icse/icse2015-1,Analysis I,Measuring Software Redundancy.,Antonio Carzaniga; Andrea Mattavelli; Mauro Pezzè,156-166,11,https://doi.org/10.1109/ICSE.2015.37,,,TRUE
ICSE,2015,conf/icse/icse2015-1,Analysis I,Gray Computing: An Analysis of Computing with Background JavaScript Tasks.,Yao Pan; Jules White; Yu Sun; Jeff Gray,167-177,11,https://doi.org/10.1109/ICSE.2015.38,,,TRUE
ICSE,2015,conf/icse/icse2015-1,Highly Configurable and Adaptive Systems,Presence-Condition Simplification in Highly Configurable Systems.,Alexander von Rhein; Alexander Grebhahn; Sven Apel; Norbert Siegmund; Dirk Beyer; Thorsten Berger,178-188,11,https://doi.org/10.1109/ICSE.2015.39,,,TRUE
ICSE,2015,conf/icse/icse2015-1,Highly Configurable and Adaptive Systems,Symbolic Model Checking of Product-Line Requirements Using SAT-Based Methods.,Shoham Ben-David; Baruch Sterin; Joanne M. Atlee; Sandy Beidu,189-199,11,https://doi.org/10.1109/ICSE.2015.40,,,TRUE
ICSE,2015,conf/icse/icse2015-1,Highly Configurable and Adaptive Systems,Lightweight Adaptive Filtering for Efficient Learning and Updating of Probabilistic Models.,Antonio Filieri; Lars Grunske; Alberto Leva,200-211,12,https://doi.org/10.1109/ICSE.2015.41,,,TRUE
ICSE,2015,conf/icse/icse2015-1,Tools and Environments,Tempura: Temporal Dimension for IDEs.,Yun Young Lee; Darko Marinov; Ralph E. Johnson,212-222,11,https://doi.org/10.1109/ICSE.2015.42,,,TRUE
ICSE,2015,conf/icse/icse2015-1,Tools and Environments,Supporting Selective Undo in a Code Editor.,YoungSeok Yoon; Brad A. Myers,223-233,11,https://doi.org/10.1109/ICSE.2015.43,,,TRUE
ICSE,2015,conf/icse/icse2015-1,Tools and Environments,Cascade: A Universal Programmer-Assisted Type Qualifier Inference Tool.,Mohsen Vakilian; Amarin Phaosawasdi; Michael D. Ernst; Ralph E. Johnson,234-245,12,https://doi.org/10.1109/ICSE.2015.44,,,TRUE
ICSE,2015,conf/icse/icse2015-1,Regression Testing,RECONTEST: Effective Regression Testing of Concurrent Programs.,Valerio Terragni; Shing-Chi Cheung; Charles Zhang,246-256,11,https://doi.org/10.1109/ICSE.2015.45,,,TRUE
ICSE,2015,conf/icse/icse2015-1,Regression Testing,A Synergistic Analysis Method for Explaining Failed Regression Tests.,Qiuping Yi; Zijiang Yang; Jian Liu; Chen Zhao; Chao Wang,257-267,11,https://doi.org/10.1109/ICSE.2015.46,,,TRUE
ICSE,2015,conf/icse/icse2015-1,Regression Testing,An Information Retrieval Approach for Regression Test Prioritization Based on Program Changes.,Ripon K. Saha; Lingming Zhang; Sarfraz Khurshid; Dewayne E. Perry,268-279,12,https://doi.org/10.1109/ICSE.2015.47,,,TRUE
ICSE,2015,conf/icse/icse2015-1,Security and Privacy,IccTA: Detecting Inter-Component Privacy Leaks in Android Apps.,Li Li; Alexandre Bartel; Tegawendé F. Bissyandé; Jacques Klein; Yves Le Traon; Steven Arzt; Siegfried Rasthofer; Eric Bodden; Damien Octeau; Patrick D. McDaniel,280-291,12,https://doi.org/10.1109/ICSE.2015.48,,,TRUE
ICSE,2015,conf/icse/icse2015-1,Security and Privacy,Do Security Patterns Really Help Designers?,Koen Yskout; Riccardo Scandariato; Wouter Joosen,292-302,11,https://doi.org/10.1109/ICSE.2015.49,,,TRUE
ICSE,2015,conf/icse/icse2015-1,Security and Privacy,AppContext: Differentiating Malicious and Benign Mobile App Behaviors Using Context.,Wei Yang; Xusheng Xiao; Benjamin Andow; Sihan Li; Tao Xie; William Enck,303-313,11,https://doi.org/10.1109/ICSE.2015.50,,,TRUE
ICSE,2015,conf/icse/icse2015-1,Analysis II,TypeDevil: Dynamic Type Inconsistency Analysis for JavaScript.,Michael Pradel; Parker Schuh; Koushik Sen,314-324,11,https://doi.org/10.1109/ICSE.2015.51,,,TRUE
ICSE,2015,conf/icse/icse2015-1,Analysis II,Detecting Inconsistencies in JavaScript MVC Applications.,Frolin S. Ocariza Jr.; Karthik Pattabiraman; Ali Mesbah,325-335,11,https://doi.org/10.1109/ICSE.2015.52,,,TRUE
ICSE,2015,conf/icse/icse2015-1,Analysis II,AutoCSP: Automatically Retrofitting CSP to Web Applications.,Mattia Fazzini; Prateek Saxena; Alessandro Orso,336-346,11,https://doi.org/10.1109/ICSE.2015.53,,,TRUE
ICSE,2015,conf/icse/icse2015-1,Reflections and Studies on Methodologies and Practices II,How Much Up-Front? A Grounded theory of Agile Architecture.,Michael Waterman; James Noble; George Allan,347-357,11,https://doi.org/10.1109/ICSE.2015.54,,,TRUE
ICSE,2015,conf/icse/icse2015-1,Reflections and Studies on Methodologies and Practices II,Work Practices and Challenges in Pull-Based Development: The Integrator's Perspective.,Georgios Gousios; Andy Zaidman; Margaret-Anne D. Storey; Arie van Deursen,358-368,11,https://doi.org/10.1109/ICSE.2015.55,,,TRUE
ICSE,2015,conf/icse/icse2015-1,Reflections and Studies on Methodologies and Practices II,Build It Yourself! Homegrown Tools in a Large Software Company.,Edward K. Smith; Christian Bird; Thomas Zimmermann,369-379,11,https://doi.org/10.1109/ICSE.2015.56,,,TRUE
ICSE,2015,conf/icse/icse2015-1,Refactoring,Morpheus: Variability-Aware Refactoring in the Wild.,Jörg Liebig; Andreas Janker; Florian Garbe; Sven Apel; Christian Lengauer,380-391,12,https://doi.org/10.1109/ICSE.2015.57,,,TRUE
ICSE,2015,conf/icse/icse2015-1,Refactoring,Does Automated Refactoring Obviate Systematic Editing?,Na Meng; Lisa Hua; Miryung Kim; Kathryn S. McKinley,392-402,11,https://doi.org/10.1109/ICSE.2015.58,,,TRUE
ICSE,2015,conf/icse/icse2015-1,Refactoring,When and Why Your Code Starts to Smell Bad.,Michele Tufano; Fabio Palomba; Gabriele Bavota; Rocco Oliveto; Massimiliano Di Penta; Andrea De Lucia; Denys Poshyvanyk,403-414,12,https://doi.org/10.1109/ICSE.2015.59,,,TRUE
ICSE,2015,conf/icse/icse2015-1,Mining,Learning to Log: Helping Developers Make Informed Logging Decisions.,Jieming Zhu; Pinjia He; Qiang Fu; Hongyu Zhang; Michael R. Lyu; Dongmei Zhang,415-425,11,https://doi.org/10.1109/ICSE.2015.60,,,TRUE
ICSE,2015,conf/icse/icse2015-1,Mining,Mining Apps for Abnormal Usage of Sensitive Data.,Vitalii Avdiienko; Konstantin Kuznetsov; Alessandra Gorla; Andreas Zeller; Steven Arzt; Siegfried Rasthofer; Eric Bodden,426-436,11,https://doi.org/10.1109/ICSE.2015.61,,,TRUE
ICSE,2015,conf/icse/icse2015-1,Mining,Tracking Static Analysis Violations over Time to Capture Developer Characteristics.,Pavel Avgustinov; Arthur I. Baars; Anders S. Henriksen; R. Greg Lavender; Galen Menzel; Oege de Moor; Max Schäfer; Julian Tibble,437-447,11,https://doi.org/10.1109/ICSE.2015.62,,,TRUE
ICSE,2015,conf/icse/icse2015-1,Patching and Fixing I,DirectFix: Looking for Simple Program Repairs.,Sergey Mechtaev; Jooyong Yi; Abhik Roychoudhury,448-458,11,https://doi.org/10.1109/ICSE.2015.63,,,TRUE
ICSE,2015,conf/icse/icse2015-1,Patching and Fixing I,Safe Memory-Leak Fixing for C Programs.,Qing Gao; Yingfei Xiong; Yaqing Mi; Lu Zhang; Weikun Yang; Zhaoping Zhou; Bing Xie; Hong Mei,459-470,12,https://doi.org/10.1109/ICSE.2015.64,,,TRUE
ICSE,2015,conf/icse/icse2015-1,Patching and Fixing I,relifix: Automated Repair of Software Regressions.,Shin Hwei Tan; Abhik Roychoudhury,471-482,12,https://doi.org/10.1109/ICSE.2015.65,,,TRUE
ICSE,2015,conf/icse/icse2015-1,Testing II,The Art of Testing Less without Sacrificing Quality.,Kim Herzig; Michaela Greiler; Jacek Czerwonka; Brendan Murphy,483-493,11,https://doi.org/10.1109/ICSE.2015.66,,,TRUE
ICSE,2015,conf/icse/icse2015-1,Testing II,"No PAIN, No Gain? The Utility of PArallel Fault INjections.",Stefan Winter; Oliver Schwahn; Roberto Natella; Neeraj Suri; Domenico Cotroneo,494-505,12,https://doi.org/10.1109/ICSE.2015.67,,,TRUE
ICSE,2015,conf/icse/icse2015-1,Testing II,A Flexible and Non-intrusive Approach for Computing Complex Structural Coverage Metrics.,Michael W. Whalen; Suzette Person; Neha Rungta; Matt Staats; Daniela Grijincu,506-516,11,https://doi.org/10.1109/ICSE.2015.68,,,TRUE
ICSE,2015,conf/icse/icse2015-1,Search-Based,Combining Multi-Objective Search and Constraint Solving for Configuring Large Software Product Lines.,Christopher Henard; Mike Papadakis; Mark Harman; Yves Le Traon,517-528,12,https://doi.org/10.1109/ICSE.2015.69,,,TRUE
ICSE,2015,conf/icse/icse2015-1,Search-Based,A Genetic Algorithm for Detecting Significant Floating-Point Inaccuracies.,Daming Zou; Ran Wang; Yingfei Xiong; Lu Zhang; Zhendong Su; Hong Mei,529-539,11,https://doi.org/10.1109/ICSE.2015.70,,,TRUE
ICSE,2015,conf/icse/icse2015-1,Search-Based,Learning Combinatorial Interaction Test Generation Strategies Using Hyperheuristic Search.,Yue Jia; Myra B. Cohen; Mark Harman; Justyna Petke,540-550,11,https://doi.org/10.1109/ICSE.2015.71,,,TRUE
ICSE,2015,conf/icse/icse2015-1,Collaboration and Coordination,Borrowing from the Crowd: A Study of Recombination in Software Design Competitions.,Thomas D. LaToza; Micky Chen; Luxi Jiang; Mengyao Zhao; André van der Hoek,551-562,12,https://doi.org/10.1109/ICSE.2015.72,,,TRUE
ICSE,2015,conf/icse/icse2015-1,Collaboration and Coordination,From Developer Networks to Verified Communities: A Fine-Grained Approach.,Mitchell Joblin; Wolfgang Mauerer; Sven Apel; Janet Siegmund; Dirk Riehle,563-573,11,https://doi.org/10.1109/ICSE.2015.73,,,TRUE
ICSE,2015,conf/icse/icse2015-1,Collaboration and Coordination,Open Source-Style Collaborative Development Practices in Commercial Projects Using GitHub.,Eirini Kalliamvakou; Daniela E. Damian; Kelly Blincoe; Leif Singer; Daniel M. Germán,574-585,12,https://doi.org/10.1109/ICSE.2015.74,,,TRUE
ICSE,2015,conf/icse/icse2015-1,Analysis Infrastructure,Database-Backed Program Analysis for Scalable Error Propagation.,Cathrin Weiss; Cindy Rubio-González; Ben Liblit,586-597,12,https://doi.org/10.1109/ICSE.2015.75,,,TRUE
ICSE,2015,conf/icse/icse2015-1,Analysis Infrastructure,Tricorder: Building a Program Analysis Ecosystem.,Caitlin Sadowski; Jeffrey van Gogh; Ciera Jaspan; Emma Söderberg; Collin Winter,598-608,11,https://doi.org/10.1109/ICSE.2015.76,,,TRUE
ICSE,2015,conf/icse/icse2015-1,Analysis Infrastructure,Alloy*: A General-Purpose Higher-Order Relational Constraint Solver.,Aleksandar Milicevic; Joseph P. Near; Eunsuk Kang; Daniel Jackson,609-619,11,https://doi.org/10.1109/ICSE.2015.77,,,TRUE
ICSE,2015,conf/icse/icse2015-1,Symbolic Execution,DASE: Document-Assisted Symbolic Execution for Improving Automated Software Testing.,Edmund Wong; Lei Zhang; Song Wang; Taiyue Liu; Lin Tan,620-631,12,https://doi.org/10.1109/ICSE.2015.78,,,TRUE
ICSE,2015,conf/icse/icse2015-1,Symbolic Execution,Compositional Symbolic Execution with Memoized Replay.,Rui Qiu; Guowei Yang; Corina S. Pasareanu; Sarfraz Khurshid,632-642,11,https://doi.org/10.1109/ICSE.2015.79,,,TRUE
ICSE,2015,conf/icse/icse2015-1,Symbolic Execution,Regular Property Guided Dynamic Symbolic Execution.,Yufeng Zhang; Zhenbang Chen; Ji Wang; Wei Dong; Zhiming Liu,643-653,11,https://doi.org/10.1109/ICSE.2015.80,,,TRUE
ICSE,2015,conf/icse/icse2015-1,Symbolic Execution,Combining Symbolic Execution and Model Checking for Data Flow Testing.,Ting Su; Zhoulai Fu; Geguang Pu; Jifeng He; Zhendong Su,654-665,12,https://doi.org/10.1109/ICSE.2015.81,,,TRUE
ICSE,2015,conf/icse/icse2015-1,Organizational and Human Factors,Are Students Representatives of Professionals in Software Engineering Experiments?,Iflaah Salman; Ayse Tosun Misirli; Natalia Juristo Juzgado,666-676,11,https://doi.org/10.1109/ICSE.2015.82,,,TRUE
ICSE,2015,conf/icse/icse2015-1,Organizational and Human Factors,Why Good Developers Write Bad Code: An Observational Case Study of the Impacts of Organizational Factors on Software Quality.,Mathieu Lavallée; Pierre N. Robillard,677-687,11,https://doi.org/10.1109/ICSE.2015.83,,,TRUE
ICSE,2015,conf/icse/icse2015-1,Organizational and Human Factors,Stuck and Frustrated or in Flow and Happy: Sensing Developers' Emotions and Progress.,Sebastian C. Müller; Thomas Fritz,688-699,12,https://doi.org/10.1109/ICSE.2015.334,,,TRUE
ICSE,2015,conf/icse/icse2015-1,Organizational and Human Factors,What Makes a Great Software Engineer?,Paul Luo Li; Andrew J. Ko; Jiamin Zhu,700-710,11,https://doi.org/10.1109/ICSE.2015.335,,,TRUE
ICSE,2015,conf/icse/icse2015-1,Specification and Verification,Efficient Scalable Verification of LTL Specifications.,Luciano Baresi; Mohammad Mehdi Pourhashem Kallehbasti; Matteo Rossi,711-721,11,https://doi.org/10.1109/ICSE.2015.84,,,TRUE
ICSE,2015,conf/icse/icse2015-1,Specification and Verification,Empirical Study Towards a Leading Indicator for Cost of Formal Software Verification.,Daniel Matichuk; Toby C. Murray; June Andronick; D. Ross Jeffery; Gerwin Klein; Mark Staples,722-732,11,https://doi.org/10.1109/ICSE.2015.85,,,TRUE
ICSE,2015,conf/icse/icse2015-1,Specification and Verification,Specifying Event-Based Systems with a Counting Fluent Temporal Logic.,Germán Regis; Renzo Degiovanni; Nicolás D'Ippolito; Nazareno Aguirre,733-743,11,https://doi.org/10.1109/ICSE.2015.86,,,TRUE
ICSE,2015,conf/icse/icse2015-1,Specification and Verification,Coexecutability for Efficient Verification of Data Model Updates.,Ivan Bocic; Tevfik Bultan,744-754,11,https://doi.org/10.1109/ICSE.2015.87,,,TRUE
ICSE,2015,conf/icse/icse2015-1,Programming,Assert Use in GitHub Projects.,Casey Casalnuovo; Premkumar T. Devanbu; Abilio Oliveira; Vladimir Filkov; Baishakhi Ray,755-766,12,https://doi.org/10.1109/ICSE.2015.88,,,TRUE
ICSE,2015,conf/icse/icse2015-1,Programming,A Programming Model for Sustainable Software.,Haitao Steve Zhu; Chaoren Lin; Yu David Liu,767-777,11,https://doi.org/10.1109/ICSE.2015.89,,,TRUE
ICSE,2015,conf/icse/icse2015-1,Programming,A Comparative Study of Programming Languages in Rosetta Code.,Sebastian Nanz; Carlo A. Furia,778-788,11,https://doi.org/10.1109/ICSE.2015.90,,,TRUE
ICSE,2015,conf/icse/icse2015-1,Prediction Models,Revisiting the Impact of Classification Techniques on the Performance of Defect Prediction Models.,Baljinder Ghotra; Shane McIntosh; Ahmed E. Hassan,789-800,12,https://doi.org/10.1109/ICSE.2015.91,,,TRUE
ICSE,2015,conf/icse/icse2015-1,Prediction Models,LACE2: Better Privacy-Preserving Data Sharing for Cross Project Defect Prediction.,Fayola Peters; Tim Menzies; Lucas Layman,801-811,11,https://doi.org/10.1109/ICSE.2015.92,,,TRUE
ICSE,2015,conf/icse/icse2015-1,Prediction Models,The Impact of Mislabelling on the Performance and Interpretation of Defect Prediction Models.,Chakkrit Tantithamthavorn; Shane McIntosh; Ahmed E. Hassan; Akinori Ihara; Ken-ichi Matsumoto,812-823,12,https://doi.org/10.1109/ICSE.2015.93,,,TRUE
ICSE,2015,conf/icse/icse2015-1,Analysis III,ReCBuLC: Reproducing Concurrency Bugs Using Local Clocks.,Xiang Yuan; Chenggang Wu; Zhenjiang Wang; Jianjun Li; Pen-Chung Yew; Jeff Huang; Xiaobing Feng; Yanyan Lan; Yunji Chen; Yong Guan,824-834,11,https://doi.org/10.1109/ICSE.2015.94,,,TRUE
ICSE,2015,conf/icse/icse2015-1,Analysis III,Dynamic Generation of Likely Invariants for Multithreaded Programs.,Markus Kusano; Arijit Chattopadhyay; Chao Wang,835-846,12,https://doi.org/10.1109/ICSE.2015.95,,,TRUE
ICSE,2015,conf/icse/icse2015-1,Analysis III,GPredict: Generic Predictive Concurrency Analysis.,Jeff Huang; Qingzhou Luo; Grigore Rosu,847-857,11,https://doi.org/10.1109/ICSE.2015.96,,,TRUE
ICSE,2015,conf/icse/icse2015-1,Working with APIs,Graph-Based Statistical Language Model for Code.,Anh Tuan Nguyen; Tien N. Nguyen,858-868,11,https://doi.org/10.1109/ICSE.2015.336,,,TRUE
ICSE,2015,conf/icse/icse2015-1,Working with APIs,Discovering Information Explaining API Types Using Text Classification.,Gayane Petrosyan; Martin P. Robillard; Renato De Mori,869-879,11,https://doi.org/10.1109/ICSE.2015.97,,,TRUE
ICSE,2015,conf/icse/icse2015-1,Working with APIs,How Can I Use This Method?,Laura Moreno; Gabriele Bavota; Massimiliano Di Penta; Rocco Oliveto; Andrian Marcus,880-890,11,https://doi.org/10.1109/ICSE.2015.98,,,TRUE
ICSE,2015,conf/icse/icse2015-1,Patching and Fixing II,Hercules: Reproducing Crashes in Real-World Application Binaries.,Van-Thuan Pham; Wei Boon Ng; Konstantin Rubinov; Abhik Roychoudhury,891-901,11,https://doi.org/10.1109/ICSE.2015.99,,,TRUE
ICSE,2015,conf/icse/icse2015-1,Patching and Fixing II,CARAMEL: Detecting and Fixing Performance Problems That Have Non-Intrusive Fixes.,Adrian Nistor; Po-Chun Chang; Cosmin Radoi; Shan Lu,902-912,11,https://doi.org/10.1109/ICSE.2015.100,,,TRUE
ICSE,2015,conf/icse/icse2015-1,Patching and Fixing II,An Empirical Study on Real Bug Fixes.,Hao Zhong; Zhendong Su,913-923,11,https://doi.org/10.1109/ICSE.2015.101,,,TRUE
ICSE,2015,conf/icse/icse2015-1,Testing III,Does the Failing Test Execute a Single or Multiple Faults? An Approach to Classifying Failing Tests.,Zhongxing Yu; Chenggang Bai; Kai-Yuan Cai,924-935,12,https://doi.org/10.1109/ICSE.2015.102,,,TRUE
ICSE,2015,conf/icse/icse2015-1,Testing III,"Trivial Compiler Equivalence: A Large Scale Empirical Study of a Simple, Fast and Effective Equivalent Mutant Detection Technique.",Mike Papadakis; Yue Jia; Mark Harman; Yves Le Traon,936-946,11,https://doi.org/10.1109/ICSE.2015.103,,,TRUE
ICSE,2015,conf/icse/icse2015-1,Testing III,Dynamic Data Flow Testing of Object Oriented Systems.,Giovanni Denaro; Alessandro Margara; Mauro Pezzè; Mattia Vivanti,947-958,12,https://doi.org/10.1109/ICSE.2015.104,,,TRUE
ICSE,2016,conf/icse/icse2016,Android,PRADA: prioritizing android devices for apps by mining large-scale usage data.,Xuan Lu; Xuanzhe Liu; Huoran Li; Tao Xie; Qiaozhu Mei; Dan Hao; Gang Huang; Feng Feng,3-13,11,https://doi.org/10.1145/2884781.2884828,,,TRUE
ICSE,2016,conf/icse/icse2016,Android,Release planning of mobile apps based on user reviews.,Lorenzo Villarroel; Gabriele Bavota; Barbara Russo; Rocco Oliveto; Massimiliano Di Penta,14-24,11,https://doi.org/10.1145/2884781.2884818,,,TRUE
ICSE,2016,conf/icse/icse2016,Android,Toward a framework for detecting privacy policy violations in android application code.,Rocky Slavin; Xiaoyin Wang; Mitra Bokaei Hosseini; James Hester; Ram Krishnan; Jaspreet Bhatia; Travis D. Breaux; Jianwei Niu,25-36,12,https://doi.org/10.1145/2884781.2884855,,,TRUE
ICSE,2016,conf/icse/icse2016,Android,Mining sandboxes.,Konrad Jamrozik; Philipp von Styp-Rekowsky; Andreas Zeller,37-48,12,https://doi.org/10.1145/2884781.2884782,,,TRUE
ICSE,2016,conf/icse/icse2016,Performance,Generating performance distributions via probabilistic symbolic execution.,Bihuan Chen; Yang Liu; Wei Le,49-60,12,https://doi.org/10.1145/2884781.2884794,,,TRUE
ICSE,2016,conf/icse/icse2016,Performance,Performance issues and optimizations in JavaScript: an empirical study.,Marija Selakovic; Michael Pradel,61-72,12,https://doi.org/10.1145/2884781.2884829,,,TRUE
ICSE,2016,conf/icse/icse2016,Performance,Reliability of Run-Time Quality-of-Service evaluation using parametric model checking.,Guoxin Su; David S. Rosenblum; Giordano Tamburrelli,73-84,12,https://doi.org/10.1145/2884781.2884814,,,TRUE
ICSE,2016,conf/icse/icse2016,Performance,Optimizing selection of competing services with probabilistic hierarchical refinement.,Tian Huat Tan; Manman Chen; Jun Sun; Yang Liu; Étienne André; Yinxing Xue; Jin Song Dong,85-95,11,https://doi.org/10.1145/2884781.2884861,,,TRUE
ICSE,2016,conf/icse/icse2016,Empirical,The emerging role of data scientists on software development teams.,Miryung Kim; Thomas Zimmermann; Robert DeLine; Andrew Begel,96-107,12,https://doi.org/10.1145/2884781.2884783,,,TRUE
ICSE,2016,conf/icse/icse2016,Empirical,Belief & evidence in empirical software engineering.,Premkumar T. Devanbu; Thomas Zimmermann; Christian Bird,108-119,12,https://doi.org/10.1145/2884781.2884812,,,TRUE
ICSE,2016,conf/icse/icse2016,Empirical,Grounded theory in software engineering research: a critical review and guidelines.,Klaas-Jan Stol; Paul Ralph; Brian Fitzgerald,120-131,12,https://doi.org/10.1145/2884781.2884833,,,TRUE
ICSE,2016,conf/icse/icse2016,Symbolic execution,"On the techniques we create, the tools we build, and their misalignments: a study of KLEE.",Eric F. Rizzi; Sebastian G. Elbaum; Matthew B. Dwyer,132-143,12,https://doi.org/10.1145/2884781.2884835,,,TRUE
ICSE,2016,conf/icse/icse2016,Symbolic execution,Guiding dynamic symbolic execution toward unverified program executions.,Maria Christakis; Peter Müller; Valentin Wüstholz,144-155,12,https://doi.org/10.1145/2884781.2884843,,,TRUE
ICSE,2016,conf/icse/icse2016,Symbolic execution,Synthesizing framework models for symbolic execution.,Jinseong Jeon; Xiaokang Qiu; Jonathan Fetter-Degges; Jeffrey S. Foster; Armando Solar-Lezama,156-167,12,https://doi.org/10.1145/2884781.2884856,,,TRUE
ICSE,2016,conf/icse/icse2016,Symbolic execution,Type-aware concolic testing of JavaScript programs.,Monika Dhok; Murali Krishna Ramanathan; Nishant Sinha,168-179,12,https://doi.org/10.1145/2884781.2884859,,,TRUE
ICSE,2016,conf/icse/icse2016,Compilers and emerging trends,An empirical comparison of compiler testing techniques.,Junjie Chen; Wenxiang Hu; Dan Hao; Yingfei Xiong; Hongyu Zhang; Lu Zhang; Bing Xie,180-190,11,https://doi.org/10.1145/2884781.2884878,,,TRUE
ICSE,2016,conf/icse/icse2016,Compilers and emerging trends,Termination-checking for LLVM peephole optimizations.,David Menendez; Santosh Nagarakatte,191-202,12,https://doi.org/10.1145/2884781.2884809,,,TRUE
ICSE,2016,conf/icse/icse2016,Compilers and emerging trends,Finding and analyzing compiler warning defects.,Chengnian Sun; Vu Le; Zhendong Su,203-213,11,https://doi.org/10.1145/2884781.2884879,,,TRUE
ICSE,2016,conf/icse/icse2016,Compilers and emerging trends,iDice: problem identification for emerging issues.,Qingwei Lin; Jian-Guang Lou; Hongyu Zhang; Dongmei Zhang,214-224,11,https://doi.org/10.1145/2884781.2884795,,,TRUE
ICSE,2016,conf/icse/icse2016,Energy and videos,Energy profiles of Java collections classes.,Samir Hasan; Zachary King; Munawar Hafiz; Mohammed Sayagh; Bram Adams; Abram Hindle,225-236,12,https://doi.org/10.1145/2884781.2884869,,,TRUE
ICSE,2016,conf/icse/icse2016,Energy and videos,An empirical study of practitioners' perspectives on green software engineering.,Irene Manotas; Christian Bird; Rui Zhang; David C. Shepherd; Ciera Jaspan; Caitlin Sadowski; Lori L. Pollock; James Clause,237-248,12,https://doi.org/10.1145/2884781.2884810,,,TRUE
ICSE,2016,conf/icse/icse2016,Energy and videos,Automated energy optimization of HTTP requests for mobile applications.,Ding Li; Yingjun Lyu; Jiaping Gui; William G. J. Halfond,249-260,12,https://doi.org/10.1145/2884781.2884867,,,TRUE
ICSE,2016,conf/icse/icse2016,Energy and videos,Too long; didn't watch!: extracting relevant fragments from software development video tutorials.,Luca Ponzanelli; Gabriele Bavota; Andrea Mocci; Massimiliano Di Penta; Rocco Oliveto; Mir Anamul Hasan; Barbara Russo; Sonia Haiduc; Michele Lanza,261-272,12,https://doi.org/10.1145/2884781.2884824,,,TRUE
ICSE,2016,conf/icse/icse2016,Open source,Overcoming open source project entry barriers with a portal for newcomers.,Igor Steinmacher; Tayana Uchôa Conte; Christoph Treude; Marco Aurélio Gerosa,273-284,12,https://doi.org/10.1145/2884781.2884806,,,TRUE
ICSE,2016,conf/icse/icse2016,Open source,Work practices and challenges in pull-based development: the contributor's perspective.,Georgios Gousios; Margaret-Anne D. Storey; Alberto Bacchelli,285-296,12,https://doi.org/10.1145/2884781.2884826,,,TRUE
ICSE,2016,conf/icse/icse2016,Defect prediction,Automatically learning semantic features for defect prediction.,Song Wang; Taiyue Liu; Lin Tan,297-308,12,https://doi.org/10.1145/2884781.2884804,,,TRUE
ICSE,2016,conf/icse/icse2016,Defect prediction,Cross-project defect prediction using a connectivity-based unsupervised classifier.,Feng Zhang; Quan Zheng; Ying Zou; Ahmed E. Hassan,309-320,12,https://doi.org/10.1145/2884781.2884839,,,TRUE
ICSE,2016,conf/icse/icse2016,Defect prediction,Automated parameter optimization of classification techniques for defect prediction models.,Chakkrit Tantithamthavorn; Shane McIntosh; Ahmed E. Hassan; Kenichi Matsumoto,321-332,12,https://doi.org/10.1145/2884781.2884857,,,TRUE
ICSE,2016,conf/icse/icse2016,Defect prediction,AntMiner: mining more bugs by reducing noise interference.,Bin Liang; Pan Bian; Yan Zhang; Wenchang Shi; Wei You; Yan Cai,333-344,12,https://doi.org/10.1145/2884781.2884870,,,TRUE
ICSE,2016,conf/icse/icse2016,Synthesis,Program synthesis using natural language.,Aditya Desai; Sumit Gulwani; Vineet Hingorani; Nidhi Jain; Amey Karkare; Mark Marron; Sailesh R; Subhajit Roy,345-356,12,https://doi.org/10.1145/2884781.2884786,,,TRUE
ICSE,2016,conf/icse/icse2016,Synthesis,SWIM: synthesizing what i mean: code search and idiomatic snippet synthesis.,Mukund Raghothaman; Yi Wei; Youssef Hamadi,357-367,11,https://doi.org/10.1145/2884781.2884808,,,TRUE
ICSE,2016,conf/icse/icse2016,Synthesis,Cross-supervised synthesis of web-crawlers.,Adi Omari; Sharon Shoham; Eran Yahav,368-379,12,https://doi.org/10.1145/2884781.2884842,,,TRUE
ICSE,2016,conf/icse/icse2016,Synthesis,Automatic model generation from documentation for Java API functions.,Juan Zhai; Jianjun Huang; Shiqing Ma; Xiangyu Zhang; Lin Tan; Jianhua Zhao; Feng Qin,380-391,12,https://doi.org/10.1145/2884781.2884881,,,TRUE
ICSE,2016,conf/icse/icse2016,API,Augmenting API documentation with insights from stack overflow.,Christoph Treude; Martin P. Robillard,392-403,12,https://doi.org/10.1145/2884781.2884800,,,TRUE
ICSE,2016,conf/icse/icse2016,API,From word embeddings to document similarities for improved information retrieval in software engineering.,Xin Ye; Hui Shen; Xiao Ma; Razvan C. Bunescu; Chang Liu,404-415,12,https://doi.org/10.1145/2884781.2884862,,,TRUE
ICSE,2016,conf/icse/icse2016,API,Learning API usages from bytecode: a statistical approach.,Tam The Nguyen; Hung Viet Pham; Phong Minh Vu; Tung Thanh Nguyen,416-427,12,https://doi.org/10.1145/2884781.2884873,,,TRUE
ICSE,2016,conf/icse/icse2016,Code smells,"On the ""naturalness"" of buggy code.",Baishakhi Ray; Vincent Hellendoorn; Saheel Godhane; Zhaopeng Tu; Alberto Bacchelli; Premkumar T. Devanbu,428-439,12,https://doi.org/10.1145/2884781.2884848,,,TRUE
ICSE,2016,conf/icse/icse2016,Code smells,Code anomalies flock together: exploring code anomaly agglomerations for locating design problems.,Willian Nalepa Oizumi; Alessandro F. Garcia; Leonardo da Silva Sousa; Bruno Barbieri Pontes Cafeo; Yixue Zhao,440-451,12,https://doi.org/10.1145/2884781.2884868,,,TRUE
ICSE,2016,conf/icse/icse2016,Code smells,Using (bio)metrics to predict code quality online.,Sebastian C. Müller; Thomas Fritz,452-463,12,https://doi.org/10.1145/2884781.2884803,,,TRUE
ICSE,2016,conf/icse/icse2016,Code smells,CUSTODES: automatic spreadsheet cell clustering and smell detection using strong and weak features.,Shing-Chi Cheung; Wanjun Chen; Yepang Liu; Chang Xu,464-475,12,https://doi.org/10.1145/2884781.2884796,,,TRUE
ICSE,2016,conf/icse/icse2016,Architecture,"Disseminating architectural knowledge on open-source projects: a case study of the book ""architecture of open-source applications"".",Martin P. Robillard; Nenad Medvidovic,476-487,12,https://doi.org/10.1145/2884781.2884792,,,TRUE
ICSE,2016,conf/icse/icse2016,Architecture,Identifying and quantifying architectural debt.,Lu Xiao; Yuanfang Cai; Rick Kazman; Ran Mo; Qiong Feng,488-498,11,https://doi.org/10.1145/2884781.2884822,,,TRUE
ICSE,2016,conf/icse/icse2016,Architecture,Decoupling level: a new metric for architectural maintenance complexity.,Ran Mo; Yuanfang Cai; Rick Kazman; Lu Xiao; Qiong Feng,499-510,12,https://doi.org/10.1145/2884781.2884825,,,TRUE
ICSE,2016,conf/icse/icse2016,Testing 1,On the limits of mutation reduction strategies.,Rahul Gopinath; Mohammad Amin Alipour; Iftekhar Ahmed; Carlos Jensen; Alex Groce,511-522,12,https://doi.org/10.1145/2884781.2884787,,,TRUE
ICSE,2016,conf/icse/icse2016,Testing 1,Comparing white-box and black-box test prioritization.,Christopher Henard; Mike Papadakis; Mark Harman; Yue Jia; Yves Le Traon,523-534,12,https://doi.org/10.1145/2884781.2884791,,,TRUE
ICSE,2016,conf/icse/icse2016,Testing 1,How does regression test prioritization perform in real-world software evolution?,Yafeng Lu; Yiling Lou; Shiyang Cheng; Lingming Zhang; Dan Hao; Yangfan Zhou; Lu Zhang,535-546,12,https://doi.org/10.1145/2884781.2884874,,,TRUE
ICSE,2016,conf/icse/icse2016,Testing 1,The impact of test case summaries on bug fixing performance: an empirical investigation.,Sebastiano Panichella; Annibale Panichella; Moritz Beller; Andy Zaidman; Harald C. Gall,547-558,12,https://doi.org/10.1145/2884781.2884847,,,TRUE
ICSE,2016,conf/icse/icse2016,Testing 2,Reducing combinatorics in GUI testing of android applications.,Nariman Mirzaei; Joshua Garcia; Hamid Bagheri; Alireza Sadeghi; Sam Malek,559-570,12,https://doi.org/10.1145/2884781.2884853,,,TRUE
ICSE,2016,conf/icse/icse2016,Testing 2,MobiPlay: a remote execution based record-and-replay tool for mobile applications.,Zhengrui Qin; Yutao Tang; Edmund Novak; Qun Li,571-582,12,https://doi.org/10.1145/2884781.2884854,,,TRUE
ICSE,2016,conf/icse/icse2016,Testing 2,VDTest: an automated framework to support testing for virtual devices.,Tingting Yu; Xiao Qu; Myra B. Cohen,583-594,12,https://doi.org/10.1145/2884781.2884866,,,TRUE
ICSE,2016,conf/icse/icse2016,Testing 2,Automated test suite generation for time-continuous simulink models.,Reza Matinnejad; Shiva Nejati; Lionel C. Briand; Thomas Bruckmann,595-606,12,https://doi.org/10.1145/2884781.2884797,,,TRUE
ICSE,2016,conf/icse/icse2016,Effort estimation and search,Missing data imputation based on low-rank recovery and semi-supervised regression for software effort estimation.,Xiao-Yuan Jing; Fumin Qi; Fei Wu; Baowen Xu,607-618,12,https://doi.org/10.1145/2884781.2884827,,,TRUE
ICSE,2016,conf/icse/icse2016,Effort estimation and search,Multi-objective software effort estimation.,Federica Sarro; Alessio Petrozziello; Mark Harman,619-630,12,https://doi.org/10.1145/2884781.2884830,,,TRUE
ICSE,2016,conf/icse/icse2016,Effort estimation and search,A practical guide to select quality indicators for assessing pareto-based search algorithms in search-based software engineering.,Shuai Wang; Shaukat Ali; Tao Yue; Yan Li; Marius Liaaen,631-642,12,https://doi.org/10.1145/2884781.2884880,,,TRUE
ICSE,2016,conf/icse/icse2016,Product lines,A comparison of 10 sampling algorithms for configurable systems.,Flávio Medeiros; Christian Kästner; Márcio Ribeiro; Rohit Gheyi; Sven Apel,643-654,12,https://doi.org/10.1145/2884781.2884793,,,TRUE
ICSE,2016,conf/icse/icse2016,Product lines,Featured model-based mutation analysis.,Xavier Devroey; Gilles Perrouin; Mike Papadakis; Axel Legay; Pierre-Yves Schobbens; Patrick Heymans,655-666,12,https://doi.org/10.1145/2884781.2884821,,,TRUE
ICSE,2016,conf/icse/icse2016,Product lines,Feature-model interfaces: the highway to compositional analyses of highly-configurable systems.,Reimar Schröter; Sebastian Krieter; Thomas Thüm; Fabian Benduhn; Gunter Saake,667-678,12,https://doi.org/10.1145/2884781.2884823,,,TRUE
ICSE,2016,conf/icse/icse2016,Product lines,How does the degree of variability affect bug finding?,Jean Melo; Claus Brabrand; Andrzej Wasowski,679-690,12,https://doi.org/10.1145/2884781.2884831,,,TRUE
ICSE,2016,conf/icse/icse2016,Repair and model synthesis,Angelix: scalable multiline program patch synthesis via symbolic analysis.,Sergey Mechtaev; Jooyong Yi; Abhik Roychoudhury,691-701,11,https://doi.org/10.1145/2884781.2884807,,,TRUE
ICSE,2016,conf/icse/icse2016,Repair and model synthesis,An analysis of the search spaces for generate and validate patch generation systems.,Fan Long; Martin C. Rinard,702-713,12,https://doi.org/10.1145/2884781.2884872,,,TRUE
ICSE,2016,conf/icse/icse2016,Repair and model synthesis,PAC learning-based verification and model synthesis.,Yu-Fang Chen; Chiao Hsieh; Ondrej Lengál; Tsung-Ju Lii; Ming-Hsien Tsai; Bow-Yaw Wang; Farn Wang,714-724,11,https://doi.org/10.1145/2884781.2884860,,,TRUE
ICSE,2016,conf/icse/icse2016,Repair and model synthesis,StubDroid: automatic inference of precise data-flow summaries for the android framework.,Steven Arzt; Eric Bodden,725-735,11,https://doi.org/10.1145/2884781.2884816,,,TRUE
ICSE,2016,conf/icse/icse2016,Languages,Exploring language support for immutability.,Michael J. Coblenz; Joshua Sunshine; Jonathan Aldrich; Brad A. Myers; Sam Weber; Forrest Shull,736-747,12,https://doi.org/10.1145/2884781.2884798,,,TRUE
ICSE,2016,conf/icse/icse2016,Languages,The evolution of C programming practices: a study of the Unix operating system 1973-2015.,Diomidis Spinellis; Panos Louridas; Maria Kechagia,748-759,12,https://doi.org/10.1145/2884781.2884799,,,TRUE
ICSE,2016,conf/icse/icse2016,Languages,An empirical study on the impact of C++ lambdas and programmer experience.,Phillip Merlin Uesbeck; Andreas Stefik; Stefan Hanenberg; Jan Pedersen; Patrick Daleiden,760-771,12,https://doi.org/10.1145/2884781.2884849,,,TRUE
ICSE,2016,conf/icse/icse2016,Languages,Understanding and fixing multiple language interoperability issues: the C/Fortran case.,Nawrin Sultana; Justin Middleton; Jeffrey Overbey; Munawar Hafiz,772-783,12,https://doi.org/10.1145/2884781.2884858,,,TRUE
ICSE,2016,conf/icse/icse2016,Debugging,BigDebug: debugging primitives for interactive big data processing in spark.,Muhammad Ali Gulzar; Matteo Interlandi; Seunghyun Yoo; Sai Deep Tetali; Tyson Condie; Todd D. Millstein; Miryung Kim,784-795,12,https://doi.org/10.1145/2884781.2884813,,,TRUE
ICSE,2016,conf/icse/icse2016,Debugging,Debugging for reactive programming.,Guido Salvaneschi; Mira Mezini,796-807,12,https://doi.org/10.1145/2884781.2884815,,,TRUE
ICSE,2016,conf/icse/icse2016,Debugging,Revisit of automatic debugging via human focus-tracking analysis.,Xiaoyuan Xie; Zicong Liu; Shuo Song; Zhenyu Chen; Jifeng Xuan; Baowen Xu,808-819,12,https://doi.org/10.1145/2884781.2884834,,,TRUE
ICSE,2016,conf/icse/icse2016,Debugging,RETracer: triaging crashes by reverse execution from partial memory dumps.,Weidong Cui; Marcus Peinado; Sang Kil Cha; Yanick Fratantonio; Vasileios P. Kemerlis,820-831,12,https://doi.org/10.1145/2884781.2884844,,,TRUE
ICSE,2016,conf/icse/icse2016,Requirements,"Are ""non-functional"" requirements really non-functional?: an investigation of non-functional requirements in practice.",Jonas Eckhardt; Andreas Vogelsang; Daniel Méndez Fernández,832-842,11,https://doi.org/10.1145/2884781.2884788,,,TRUE
ICSE,2016,conf/icse/icse2016,Requirements,Probing for requirements knowledge to stimulate architectural thinking.,Preethu Rose Anish; Balaji Balasubramaniam; Abhishek Sainani; Jane Cleland-Huang; Maya Daneva; Roel J. Wieringa; Smita Ghaisas,843-854,12,https://doi.org/10.1145/2884781.2884801,,,TRUE
ICSE,2016,conf/icse/icse2016,Requirements,Risk-driven revision of requirements models.,Dalal Alrajeh; Axel van Lamsweerde; Jeff Kramer; Alessandra Russo; Sebastián Uchitel,855-865,11,https://doi.org/10.1145/2884781.2884838,,,TRUE
ICSE,2016,conf/icse/icse2016,Requirements,"Discovering ""unknown known"" security requirements.",Awais Rashid; Syed Asad Ali Naqvi; Rajiv Ramdhany; Matthew John Edwards; Ruzanna Chitchyan; Muhammad Ali Babar,866-876,11,https://doi.org/10.1145/2884781.2884785,,,TRUE
ICSE,2016,conf/icse/icse2016,Dynamic analysis,Behavioral log analysis with statistical guarantees.,Nimrod Busany; Shahar Maoz,877-887,11,https://doi.org/10.1145/2884781.2884805,,,TRUE
ICSE,2016,conf/icse/icse2016,Dynamic analysis,Efficient large-scale trace checking using mapreduce.,Marcello M. Bersani; Domenico Bianculli; Carlo Ghezzi; Srdan Krstic; Pierluigi San Pietro,888-898,11,https://doi.org/10.1145/2884781.2884832,,,TRUE
ICSE,2016,conf/icse/icse2016,Dynamic analysis,Feedback-directed instrumentation for deployed JavaScript applications.,Magnus Madsen; Frank Tip; Esben Andreasen; Koushik Sen; Anders Møller,899-910,12,https://doi.org/10.1145/2884781.2884846,,,TRUE
ICSE,2016,conf/icse/icse2016,Dynamic analysis,DoubleTake: fast and precise error detection via evidence-based dynamic analysis.,Tongping Liu; Charlie Curtsinger; Emery D. Berger,911-922,12,https://doi.org/10.1145/2884781.2884784,,,TRUE
ICSE,2016,conf/icse/icse2016,Security,Automated partitioning of android applications for trusted execution environments.,Konstantin Rubinov; Lucia Rosculete; Tulika Mitra; Abhik Roychoudhury,923-934,12,https://doi.org/10.1145/2884781.2884817,,,TRUE
ICSE,2016,conf/icse/icse2016,Security,Jumping through hoops: why do Java developers struggle with cryptography APIs?,Sarah Nadi; Stefan Krüger; Mira Mezini; Eric Bodden,935-946,12,https://doi.org/10.1145/2884781.2884790,,,TRUE
ICSE,2016,conf/icse/icse2016,Security,Finding security bugs in web applications using a catalog of access control patterns.,Joseph P. Near; Daniel Jackson,947-958,12,https://doi.org/10.1145/2884781.2884836,,,TRUE
ICSE,2016,conf/icse/icse2016,Security,"Reference hijacking: patching, protecting and analyzing on unmodified and non-rooted android devices.",Wei You; Bin Liang; Wenchang Shi; Shuyang Zhu; Peng Wang; Sikefu Xie; Xiangyu Zhang,959-970,12,https://doi.org/10.1145/2884781.2884863,,,TRUE
ICSE,2016,conf/icse/icse2016,Collaborative,Building a theory of job rotation in software engineering from an instrumental case study.,Ronnie E. S. Santos; Fabio Q. B. da Silva; Cleyton V. C. de Magalhães; Cleviton V. F. Monteiro,971-981,11,https://doi.org/10.1145/2884781.2884837,,,TRUE
ICSE,2016,conf/icse/icse2016,Collaborative,The challenges of staying together while moving fast: an exploratory study.,Julia Rubin; Martin Rinard,982-993,12,https://doi.org/10.1145/2884781.2884871,,,TRUE
ICSE,2016,conf/icse/icse2016,Collaborative,The sky is not the limit: multitasking across GitHub projects.,Bogdan Vasilescu; Kelly Blincoe; Qi Xuan; Casey Casalnuovo; Daniela E. Damian; Premkumar T. Devanbu; Vladimir Filkov,994-1005,12,https://doi.org/10.1145/2884781.2884875,,,TRUE
ICSE,2016,conf/icse/icse2016,Collaborative,Quantifying and mitigating turnover-induced knowledge loss: case studies of chrome and a project at avaya.,Peter C. Rigby; Yue Cai Zhu; Samuel M. Donadelli; Audris Mockus,1006-1016,11,https://doi.org/10.1145/2884781.2884851,,,TRUE
ICSE,2016,conf/icse/icse2016,Software quality,Quality experience: a grounded theory of successful agile projects without dedicated testers.,Lutz Prechelt; Holger Schmeisky; Franz Zieris,1017-1027,11,https://doi.org/10.1145/2884781.2884789,,,TRUE
ICSE,2016,conf/icse/icse2016,Software quality,Code review quality: how developers see it.,Oleksii Kononenko; Olga Baysal; Michael W. Godfrey,1028-1038,11,https://doi.org/10.1145/2884781.2884840,,,TRUE
ICSE,2016,conf/icse/icse2016,Software quality,Revisiting code ownership and its relationship with software quality in the scope of modern code review.,Patanamon Thongtanunam; Shane McIntosh; Ahmed E. Hassan; Hajimu Iida,1039-1050,12,https://doi.org/10.1145/2884781.2884852,,,TRUE
ICSE,2016,conf/icse/icse2016,Program analysis,IntEQ: recognizing benign integer overflows via equivalence checking across multiple precisions.,Hao Sun; Xiangyu Zhang; Yunhui Zheng; Qingkai Zeng,1051-1062,12,https://doi.org/10.1145/2884781.2884820,,,TRUE
ICSE,2016,conf/icse/icse2016,Program analysis,Nomen est omen: exploring and exploiting similarities between argument and parameter names.,Hui Liu; Qiurong Liu; Cristian-Alexandru Staicu; Michael Pradel; Yue Luo,1063-1073,11,https://doi.org/10.1145/2884781.2884841,,,TRUE
ICSE,2016,conf/icse/icse2016,Program analysis,Floating-point precision tuning using blame analysis.,Cindy Rubio-González; Cuong Nguyen; Benjamin Mehne; Koushik Sen; James Demmel; William Kahan; Costin Iancu; Wim Lavrijsen; David H. Bailey; David Hough,1074-1085,12,https://doi.org/10.1145/2884781.2884850,,,TRUE
ICSE,2016,conf/icse/icse2016,Program analysis,Crowdsourcing program preconditions via a classification game.,Daniel Fava; Dan Shapiro; Joseph C. Osborn; Martin Schäf; E. James Whitehead Jr.,1086-1096,11,https://doi.org/10.1145/2884781.2884865,,,TRUE
ICSE,2016,conf/icse/icse2016,Concurrency,Scalable thread sharing analysis.,Jeff Huang,1097-1108,12,https://doi.org/10.1145/2884781.2884811,,,TRUE
ICSE,2016,conf/icse/icse2016,Concurrency,Fixing deadlocks via lock pre-acquisitions.,Yan Cai; Lingwei Cao,1109-1120,12,https://doi.org/10.1145/2884781.2884819,,,TRUE
ICSE,2016,conf/icse/icse2016,Concurrency,Coverage-driven test code generation for concurrent classes.,Valerio Terragni; Shing-Chi Cheung,1121-1132,12,https://doi.org/10.1145/2884781.2884876,,,TRUE
ICSE,2016,conf/icse/icse2016,Concurrency,Locking discipline inference and checking.,Michael D. Ernst; Alberto Lovato; Damiano Macedonio; Fausto Spoto; Javier Thaine,1133-1144,12,https://doi.org/10.1145/2884781.2884882,,,TRUE
ICSE,2016,conf/icse/icse2016,Maintenance,Improving refactoring speed by 10X.,Jongwook Kim; Don S. Batory; Danny Dig; Maider Azanza,1145-1156,12,https://doi.org/10.1145/2884781.2884802,,,TRUE
ICSE,2016,conf/icse/icse2016,Maintenance,SourcererCC: scaling code clone detection to big-code.,Hitesh Sajnani; Vaibhav Saini; Jeffrey Svajlenko; Chanchal K. Roy; Cristina V. Lopes,1157-1168,12,https://doi.org/10.1145/2884781.2884877,,,TRUE
ICSE,2016,conf/icse/icse2016,Maintenance,Understanding asynchronous interactions in full-stack JavaScript.,Saba Alimadadi; Ali Mesbah; Karthik Pattabiraman,1169-1180,12,https://doi.org/10.1145/2884781.2884864,,,TRUE
ICSE,2016,conf/icse/icse2016,Maintenance,Shadow of a doubt: testing for divergences between software versions.,Hristina Palikareva; Tomasz Kuchta; Cristian Cadar,1181-1192,12,https://doi.org/10.1145/2884781.2884845,,,TRUE
ICSE,2017,conf/icse/icse2017,"Research track:
Traceability",Semantically enhanced software traceability using deep learning techniques.,Jin Guo; Jinghui Cheng; Jane Cleland-Huang,3-14,12,https://doi.org/10.1109/ICSE.2017.9,,,TRUE
ICSE,2017,conf/icse/icse2017,"Research track:
Traceability",Can latent topics in source code predict missing architectural tactics?,Raghuram Gopalakrishnan; Palak Sharma; Mehdi Mirakhorli; Matthias Galster,15-26,12,https://doi.org/10.1109/ICSE.2017.10,,,TRUE
ICSE,2017,conf/icse/icse2017,"Research track:
Documentation",Analyzing APIs documentation and code to detect directive defects.,Yu Zhou; Ruihang Gu; Taolue Chen; Zhiqiu Huang; Sebastiano Panichella; Harald C. Gall,27-37,11,https://doi.org/10.1109/ICSE.2017.11,,,TRUE
ICSE,2017,conf/icse/icse2017,"Research track:
Documentation",An unsupervised approach for discovering relevant tutorial fragments for APIs.,He Jiang; Jingxuan Zhang; Zhilei Ren; Tao Zhang,38-48,11,https://doi.org/10.1109/ICSE.2017.12,,,TRUE
ICSE,2017,conf/icse/icse2017,"Research track:
Documentation",Detecting user story information in developer-client conversations to generate extractive summaries.,Paige Rodeghero; Siyuan Jiang; Ameer Armaly; Collin McMillan,49-59,11,https://doi.org/10.1109/ICSE.2017.13,,,TRUE
ICSE,2017,conf/icse/icse2017,"Research track:
Refactoring",Clone refactoring with lambda expressions.,Nikolaos Tsantalis; Davood Mazinanian; Shahriar Rostami,60-70,11,https://doi.org/10.1109/ICSE.2017.14,,,TRUE
ICSE,2017,conf/icse/icse2017,"Research track:
Refactoring",Characterizing and detecting anti-patterns in the logging code.,Boyuan Chen; Zhen Ming (Jack) Jiang,71-81,11,https://doi.org/10.1109/ICSE.2017.15,,,TRUE
ICSE,2017,conf/icse/icse2017,"Research track:
Refactoring",Automated refactoring of legacy Java software to default methods.,Raffi Khatchadourian; Hidehiko Masuhara,82-93,12,https://doi.org/10.1109/ICSE.2017.16,,,TRUE
ICSE,2017,conf/icse/icse2017,"Research track:
Recommendation systems",Supporting software developers with a holistic recommender system.,Luca Ponzanelli; Simone Scalabrino; Gabriele Bavota; Andrea Mocci; Rocco Oliveto; Massimiliano Di Penta; Michele Lanza,94-105,12,https://doi.org/10.1109/ICSE.2017.17,,,TRUE
ICSE,2017,conf/icse/icse2017,"Research track:
Recommendation systems",Recommending and localizing change requests for mobile apps based on user reviews.,Fabio Palomba; Pasquale Salza; Adelina Ciurumelea; Sebastiano Panichella; Harald C. Gall; Filomena Ferrucci; Andrea De Lucia,106-117,12,https://doi.org/10.1109/ICSE.2017.18,,,TRUE
ICSE,2017,conf/icse/icse2017,"Research track:
Recommendation systems",Machine learning-based detection of open source license exceptions.,Christopher Vendome; Mario Linares Vásquez; Gabriele Bavota; Massimiliano Di Penta; Daniel M. Germán; Denys Poshyvanyk,118-129,12,https://doi.org/10.1109/ICSE.2017.19,,,TRUE
ICSE,2017,conf/icse/icse2017,"Research track:
Software process",Software development waste.,Todd Sedano; Paul Ralph; Cécile Péraire,130-140,11,https://doi.org/10.1109/ICSE.2017.20,,,TRUE
ICSE,2017,conf/icse/icse2017,"Research track:
Software process",Becoming agile: a grounded theory of agile transitions in practice.,Rashina Hoda; James Noble,141-151,11,https://doi.org/10.1109/ICSE.2017.21,,,TRUE
ICSE,2017,conf/icse/icse2017,"Research track:
Software process",From diversity by numbers to diversity as process: supporting inclusiveness in software development teams with brainstorming.,Anna Filippova; Erik H. Trainer; James D. Herbsleb,152-163,12,https://doi.org/10.1109/ICSE.2017.22,,,TRUE
ICSE,2017,conf/icse/icse2017,"Research track:
Studies of software developers",Classifying developers into core and peripheral: an empirical study on count and network metrics.,Mitchell Joblin; Sven Apel; Claus Hunsen; Wolfgang Mauerer,164-174,11,https://doi.org/10.1109/ICSE.2017.23,,,TRUE
ICSE,2017,conf/icse/icse2017,"Research track:
Studies of software developers",Decoding the representation of code in the brain: an fMRI study of code review and expertise.,Benjamin Floyd; Tyler Santander; Westley Weimer,175-186,12,https://doi.org/10.1109/ICSE.2017.24,,,TRUE
ICSE,2017,conf/icse/icse2017,"Research track:
Studies of software developers","Understanding the impressions, motivations, and barriers of one time code contributors to FLOSS projects: a survey.",Amanda Lee; Jeffrey C. Carver; Amiangshu Bosu,187-197,11,https://doi.org/10.1109/ICSE.2017.25,,,TRUE
ICSE,2017,conf/icse/icse2017,"Research track:
Search-based software engineering",Search-driven string constraint solving for vulnerability detection.,Julian Thomé; Lwin Khin Shar; Domenico Bianculli; Lionel C. Briand,198-208,11,https://doi.org/10.1109/ICSE.2017.26,,,TRUE
ICSE,2017,conf/icse/icse2017,"Research track:
Search-based software engineering",A guided genetic algorithm for automated crash reproduction.,Mozhan Soltani; Annibale Panichella; Arie van Deursen,209-220,12,https://doi.org/10.1109/ICSE.2017.27,,,TRUE
ICSE,2017,conf/icse/icse2017,"Research track:
Search-based software engineering",Stochastic optimization of program obfuscation.,Han Liu; Chengnian Sun; Zhendong Su; Yu Jiang; Ming Gu; Jiaguang Sun,221-231,11,https://doi.org/10.1109/ICSE.2017.28,,,TRUE
ICSE,2017,conf/icse/icse2017,"Research track:
Web applications",ZenIDS: introspective intrusion detection for PHP applications.,Byron Hawkins; Brian Demsky,232-243,12,https://doi.org/10.1109/ICSE.2017.29,,,TRUE
ICSE,2017,conf/icse/icse2017,"Research track:
Web applications",Statically checking web API requests in JavaScript.,Erik Wittern; Annie T. T. Ying; Yunhui Zheng; Julian Dolby; Jim Alain Laredo,244-254,11,https://doi.org/10.1109/ICSE.2017.30,,,TRUE
ICSE,2017,conf/icse/icse2017,"Research track:
Web applications",On cross-stack configuration errors.,Mohammed Sayagh; Noureddine Kerzazi; Bram Adams,255-265,11,https://doi.org/10.1109/ICSE.2017.31,,,TRUE
ICSE,2017,conf/icse/icse2017,"Research track:
Concurrency",Efficient detection of thread safety violations via coverage-guided generation of concurrent tests.,Ankit Choudhary; Shan Lu; Michael Pradel,266-277,12,https://doi.org/10.1109/ICSE.2017.32,,,TRUE
ICSE,2017,conf/icse/icse2017,"Research track:
Concurrency",RClassify: classifying race conditions in web applications via deterministic replay.,Lu Zhang; Chao Wang,278-288,11,https://doi.org/10.1109/ICSE.2017.33,,,TRUE
ICSE,2017,conf/icse/icse2017,"Research track:
Concurrency",Repairing event race errors by controlling nondeterminism.,Christoffer Quist Adamsen; Anders Møller; Rezwana Karim; Manu Sridharan; Frank Tip; Koushik Sen,289-299,11,https://doi.org/10.1109/ICSE.2017.34,,,TRUE
ICSE,2017,conf/icse/icse2017,"Research track:
Mobile application security",Making malory behave maliciously: targeted fuzzing of android execution environments.,Siegfried Rasthofer; Steven Arzt; Stefan Triller; Michael Pradel,300-311,12,https://doi.org/10.1109/ICSE.2017.35,,,TRUE
ICSE,2017,conf/icse/icse2017,"Research track:
Mobile application security",A ,Youn Kyu Lee; Jae Young Bang; Gholamreza Safi; Arman Shahbazian; Yixue Zhao; Nenad Medvidovic,312-323,12,https://doi.org/10.1109/ICSE.2017.36,,,TRUE
ICSE,2017,conf/icse/icse2017,"Research track:
Mobile application security","An efficient, robust, and scalable approach for analyzing interacting android apps.",Yutaka Tsutano; Shakthi Bachala; Witawas Srisa-an; Gregg Rothermel; Jackson Dinh,324-334,11,https://doi.org/10.1109/ICSE.2017.37,,,TRUE
ICSE,2017,conf/icse/icse2017,"Research track:
Mobile application development",LibD: scalable and precise third-party library detection in android markets.,Menghao Li; Wei Wang; Pei Wang; Shuai Wang; Dinghao Wu; Jian Liu; Rui Xue; Wei Huo,335-346,12,https://doi.org/10.1109/ICSE.2017.38,,,TRUE
ICSE,2017,conf/icse/icse2017,"Research track:
Mobile application development",Analysis and testing of notifications in Android wear applications.,Hailong Zhang; Atanas Rountev,347-357,11,https://doi.org/10.1109/ICSE.2017.39,,,TRUE
ICSE,2017,conf/icse/icse2017,"Research track:
Mobile application development",Adaptive unpacking of Android apps.,Lei Xue; Xiapu Luo; Le Yu; Shuai Wang; Dinghao Wu,358-369,12,https://doi.org/10.1109/ICSE.2017.40,,,TRUE
ICSE,2017,conf/icse/icse2017,"Research track:
Debugging",Performance diagnosis for inefficient loops.,Linhai Song; Shan Lu,370-380,11,https://doi.org/10.1109/ICSE.2017.41,,,TRUE
ICSE,2017,conf/icse/icse2017,"Research track:
Debugging",How do developers fix cross-project correlated bugs?: a case study on the GitHub scientific python ecosystem.,Wanwangying Ma; Lin Chen; Xiangyu Zhang; Yuming Zhou; Baowen Xu,381-392,12,https://doi.org/10.1109/ICSE.2017.42,,,TRUE
ICSE,2017,conf/icse/icse2017,"Research track:
Debugging",Feedback-based debugging.,Yun Lin; Jun Sun; Yinxing Xue; Yang Liu; Jin Song Dong,393-403,11,https://doi.org/10.1109/ICSE.2017.43,,,TRUE
ICSE,2017,conf/icse/icse2017,"Research track:
Program synthesis and repair",Learning syntactic program transformations from examples.,Reudismam Rolim; Gustavo Soares; Loris D'Antoni; Oleksandr Polozov; Sumit Gulwani; Rohit Gheyi; Ryo Suzuki; Björn Hartmann,404-415,12,https://doi.org/10.1109/ICSE.2017.44,,,TRUE
ICSE,2017,conf/icse/icse2017,"Research track:
Program synthesis and repair",Precise condition synthesis for program repair.,Yingfei Xiong; Jie Wang; Runfa Yan; Jiachen Zhang; Shi Han; Gang Huang; Lu Zhang,416-426,11,https://doi.org/10.1109/ICSE.2017.45,,,TRUE
ICSE,2017,conf/icse/icse2017,"Research track:
Program synthesis and repair",Heuristically matching solution spaces of arithmetic formulas to efficiently reuse solutions.,Andrea Aquino; Giovanni Denaro; Mauro Pezzè,427-437,11,https://doi.org/10.1109/ICSE.2017.46,,,TRUE
ICSE,2017,conf/icse/icse2017,"Research track:
Mining software repositories",Exploring API embedding for API usages and applications.,Trong Duc Nguyen; Anh Tuan Nguyen; Hung Dang Phan; Tien N. Nguyen,438-449,12,https://doi.org/10.1109/ICSE.2017.47,,,TRUE
ICSE,2017,conf/icse/icse2017,"Research track:
Mining software repositories",Unsupervised software-specific morphological forms inference from informal discussions.,Chunyang Chen; Zhenchang Xing; Ximing Wang,450-461,12,https://doi.org/10.1109/ICSE.2017.48,,,TRUE
ICSE,2017,conf/icse/icse2017,"Research track:
Program analysis I",SPAIN: security patch analysis for binaries towards understanding the pain and pills.,Zhengzi Xu; Bihuan Chen; Mahinthan Chandramohan; Yang Liu; Fu Song,462-472,11,https://doi.org/10.1109/ICSE.2017.49,,,TRUE
ICSE,2017,conf/icse/icse2017,"Research track:
Program analysis I",Travioli: a dynamic analysis for detecting data-structure traversals.,Rohan Padhye; Koushik Sen,473-483,11,https://doi.org/10.1109/ICSE.2017.50,,,TRUE
ICSE,2017,conf/icse/icse2017,"Research track:
Program analysis I",ProEva: runtime proactive performance evaluation based on continuous-time markov chains.,Guoxin Su; Taolue Chen; Yuan Feng; David S. Rosenblum,484-495,12,https://doi.org/10.1109/ICSE.2017.51,,,TRUE
ICSE,2017,conf/icse/icse2017,"Research track:
Program analysis II",Glacier: transitive class immutability for Java.,Michael J. Coblenz; Whitney Nelson; Jonathan Aldrich; Brad A. Myers; Joshua Sunshine,496-506,11,https://doi.org/10.1109/ICSE.2017.52,,,TRUE
ICSE,2017,conf/icse/icse2017,"Research track:
Program analysis II",Challenges for static analysis of Java reflection: literature review and empirical study.,Davy Landman; Alexander Serebrenik; Jurgen J. Vinju,507-518,12,https://doi.org/10.1109/ICSE.2017.53,,,TRUE
ICSE,2017,conf/icse/icse2017,"Research track:
Program analysis II",Machine-learning-guided selectively unsound static analysis.,Kihong Heo; Hakjoo Oh; Kwangkeun Yi,519-529,11,https://doi.org/10.1109/ICSE.2017.54,,,TRUE
ICSE,2017,conf/icse/icse2017,"Research track:
Security, safety, and privacy",How good is a security policy against real breaches?: a HIPAA case study.,Özgür Kafali; Jasmine Jones; Megan Petruso; Laurie Williams; Munindar P. Singh,530-540,11,https://doi.org/10.1109/ICSE.2017.55,,,TRUE
ICSE,2017,conf/icse/icse2017,"Research track:
Security, safety, and privacy",Adaptive coverage and operational profile-based testing for reliability improvement.,Antonia Bertolino; Breno Miranda; Roberto Pietrantuono; Stefano Russo,541-551,11,https://doi.org/10.1109/ICSE.2017.56,,,TRUE
ICSE,2017,conf/icse/icse2017,"Research track:
Development tools and frameworks",RADAR: a lightweight tool for requirements and architecture decision analysis.,Saheed A. Busari; Emmanuel Letier,552-562,11,https://doi.org/10.1109/ICSE.2017.57,,,TRUE
ICSE,2017,conf/icse/icse2017,"Research track:
Development tools and frameworks",PEoPL: projectional editing of product lines.,Benjamin Behringer; Jochen Palz; Thorsten Berger,563-574,12,https://doi.org/10.1109/ICSE.2017.58,,,TRUE
ICSE,2017,conf/icse/icse2017,"Research track:
Development tools and frameworks",Do developers read compiler error messages?,Titus Barik; Justin Smith; Kevin Lubick; Elisabeth Holmes; Jing Feng; Emerson R. Murphy-Hill; Chris Parnin,575-585,11,https://doi.org/10.1109/ICSE.2017.59,,,TRUE
ICSE,2017,conf/icse/icse2017,"Research track:
Development tools and frameworks",A general framework for dynamic stub injection.,Maria Christakis; Patrick Emmisberger; Patrice Godefroid; Peter Müller,586-596,11,https://doi.org/10.1109/ICSE.2017.60,,,TRUE
ICSE,2017,conf/icse/icse2017,"Research track:
Testing and debugging","An empirical study on mutation, statement and branch coverage fault revelation that avoids the unreliable clean program assumption.",Thierry Titcheu Chekam; Mike Papadakis; Yves Le Traon; Mark Harman,597-608,12,https://doi.org/10.1109/ICSE.2017.61,,,TRUE
ICSE,2017,conf/icse/icse2017,"Research track:
Testing and debugging",Evaluating and improving fault localization.,Spencer Pearson; José Campos; René Just; Gordon Fraser; Rui Abreu; Michael D. Ernst; Deric Pang; Benjamin Keller,609-620,12,https://doi.org/10.1109/ICSE.2017.62,,,TRUE
ICSE,2017,conf/icse/icse2017,"Research track:
Testing I",Syntactic and semantic differencing for combinatorial models of test designs.,Rachel Tzoref-Brill; Shahar Maoz,621-631,11,https://doi.org/10.1109/ICSE.2017.63,,,TRUE
ICSE,2017,conf/icse/icse2017,"Research track:
Testing I",Balancing soundness and efficiency for practical testing of configurable systems.,Sabrina Souto; Marcelo d'Amorim; Rohit Gheyi,632-642,11,https://doi.org/10.1109/ICSE.2017.64,,,TRUE
ICSE,2017,conf/icse/icse2017,"Research track:
Testing I",Automatic text input generation for mobile testing.,Peng Liu; Xiangyu Zhang; Marco Pistoia; Yunhui Zheng; Manoel Marques; Lingfei Zeng,643-653,11,https://doi.org/10.1109/ICSE.2017.65,,,TRUE
ICSE,2017,conf/icse/icse2017,"Research track:
Testing I",A test-suite diagnosability metric for spectrum-based fault localization approaches.,Alexandre Perez; Rui Abreu; Arie van Deursen,654-664,11,https://doi.org/10.1109/ICSE.2017.66,,,TRUE
ICSE,2017,conf/icse/icse2017,"Research track:
Testing II",Automated transplantation and differential testing for clones.,Tianyi Zhang; Miryung Kim,665-676,12,https://doi.org/10.1109/ICSE.2017.67,,,TRUE
ICSE,2017,conf/icse/icse2017,"Research track:
Testing II",Code defenders: crowdsourcing effective tests and subtle mutants with a mutation testing game.,José Miguel Rojas; Thomas D. White; Benjamin S. Clegg; Gordon Fraser,677-688,12,https://doi.org/10.1109/ICSE.2017.68,,,TRUE
ICSE,2017,conf/icse/icse2017,"Research track:
Testing II",Optimizing test placement for module-level regression testing.,August Shi; Suresh Thummalapenta; Shuvendu K. Lahiri; Nikolaj Bjørner; Jacek Czerwonka,689-699,11,https://doi.org/10.1109/ICSE.2017.69,,,TRUE
ICSE,2017,conf/icse/icse2017,"Research track:
Testing II",Learning to prioritize test programs for compiler testing.,Junjie Chen; Yanwei Bai; Dan Hao; Yingfei Xiong; Hongyu Zhang; Bing Xie,700-711,12,https://doi.org/10.1109/ICSE.2017.70,,,TRUE
ICSE,2017,conf/icse/icse2017,"Research track:
Defect prediction",What causes my test alarm?: automatic cause analysis for test alarms in system and integration testing.,He Jiang; Xiaochen Li; Zijiang Yang; Jifeng Xuan,712-723,12,https://doi.org/10.1109/ICSE.2017.71,,,TRUE
ICSE,2017,conf/icse/icse2017,"Research track:
Formal methods",Symbolic model extraction for web application verification.,Ivan Bocic; Tevfik Bultan,724-734,11,https://doi.org/10.1109/ICSE.2017.72,,,TRUE
ICSE,2017,conf/icse/icse2017,"Research track:
Formal methods",UML diagram refinement (focusing on class- and use case diagrams).,David Faitelson; Shmuel S. Tyszberowicz,735-745,11,https://doi.org/10.1109/ICSE.2017.73,,,TRUE
ICSE,2017,conf/icse/icse2017,"Research track:
Software evolution",Fuzzy fine-grained code-history analysis.,Francisco Servant; James A. Jones,746-757,12,https://doi.org/10.1109/ICSE.2017.74,,,TRUE
ICSE,2017,conf/icse/icse2017,"Research track:
Software evolution",To type or not to type: quantifying detectable bugs in JavaScript.,Zheng Gao; Christian Bird; Earl T. Barr,758-769,12,https://doi.org/10.1109/ICSE.2017.75,,,TRUE
ICSE,2017,conf/icse/icse2017,"Research track:
Software evolution",The evolution of continuous experimentation in software product development: from data to a data-driven organization at scale.,Aleksander Fabijan; Pavel Dmitriev; Helena Holmström Olsson; Jan Bosch,770-780,11,https://doi.org/10.1109/ICSE.2017.76,,,TRUE
ICSE,2018,conf/icse/icse2018,Software repair I,Context-aware patch generation for better automated program repair.,Ming Wen; Junjie Chen; Rongxin Wu; Dan Hao; Shing-Chi Cheung,1-11,11,https://doi.org/10.1145/3180155.3180233,,,TRUE
ICSE,2018,conf/icse/icse2018,Software repair I,Towards practical program repair with on-demand candidate generation.,Jinru Hua; Mengshi Zhang; Kaiyuan Wang; Sarfraz Khurshid,12-23,12,https://doi.org/10.1145/3180155.3180245,,,TRUE
ICSE,2018,conf/icse/icse2018,Software repair I,A correlation study between automated program repair and test-suite metrics.,Jooyong Yi; Shin Hwei Tan; Sergey Mechtaev; Marcel Böhme; Abhik Roychoudhury,24,1,https://doi.org/10.1145/3180155.3182517,,,FALSE
ICSE,2018,conf/icse/icse2018,Software repair I,Do automated program repair techniques repair hard and important bugs?,Manish Motwani; Sandhya Sankaranarayanan; René Just; Yuriy Brun,25,1,https://doi.org/10.1145/3180155.3182533,,,FALSE
ICSE,2018,conf/icse/icse2018,Apps and app stores I,Software protection on the go: a large-scale empirical study on mobile app obfuscation.,Pei Wang; Qinkun Bao; Li Wang; Shuai Wang; Zhaofeng Chen; Tao Wei; Dinghao Wu,26-36,11,https://doi.org/10.1145/3180155.3180169,,,TRUE
ICSE,2018,conf/icse/icse2018,Apps and app stores I,GUILeak: tracing privacy policy claims on user input data for Android applications.,Xiaoyin Wang; Xue Qin; Mitra Bokaei Hosseini; Rocky Slavin; Travis D. Breaux; Jianwei Niu,37-47,11,https://doi.org/10.1145/3180155.3180196,,,TRUE
ICSE,2018,conf/icse/icse2018,Apps and app stores I,Online app review analysis for identifying emerging issues.,Cuiyun Gao; Jichuan Zeng; Michael R. Lyu; Irwin King,48-58,11,https://doi.org/10.1145/3180155.3180218,,,TRUE
ICSE,2018,conf/icse/icse2018,Apps and app stores I,EARMO: an energy-aware refactoring approach for mobile apps.,Rodrigo Morales; Rubén Saborido; Foutse Khomh; Francisco Chicano; Giuliano Antoniol,59,1,https://doi.org/10.1145/3180155.3182524,,,FALSE
ICSE,2018,conf/icse/icse2018,Software evolution and maintenance I,Neuro-symbolic program corrector for introductory programming assignments.,Sahil Bhatia; Pushmeet Kohli; Rishabh Singh,60-70,11,https://doi.org/10.1145/3180155.3180219,,,TRUE
ICSE,2018,conf/icse/icse2018,Software evolution and maintenance I,Automated localization for unreproducible builds.,Zhilei Ren; He Jiang; Jifeng Xuan; Zijiang Yang,71-81,11,https://doi.org/10.1145/3180155.3180224,,,TRUE
ICSE,2018,conf/icse/icse2018,Software evolution and maintenance I,Enlightened debugging.,Xiangyu Li; Shaowei Zhu; Marcelo d'Amorim; Alessandro Orso,82-92,11,https://doi.org/10.1145/3180155.3180242,,,TRUE
ICSE,2018,conf/icse/icse2018,Software evolution and maintenance I,Experiences and challenges in building a data intensive system for data migration.,Marco Scavuzzo; Elisabetta Di Nitto; Danilo Ardagna,93,1,https://doi.org/10.1145/3180155.3182534,,,FALSE
ICSE,2018,conf/icse/icse2018,Human and social aspects of computing I,Sentiment analysis for software engineering: how far can we go?,Bin Lin; Fiorella Zampetti; Gabriele Bavota; Massimiliano Di Penta; Michele Lanza; Rocco Oliveto,94-104,11,https://doi.org/10.1145/3180155.3180195,,,TRUE
ICSE,2018,conf/icse/icse2018,Human and social aspects of computing I,Identifying features in forks.,Shurui Zhou; Stefan Stanciulescu; Olaf Leßenich; Yingfei Xiong; Andrzej Wasowski; Christian Kästner,105-116,12,https://doi.org/10.1145/3180155.3180205,,,TRUE
ICSE,2018,conf/icse/icse2018,Human and social aspects of computing I,Roles and impacts of hands-on software architects in five industrial case studies.,Inayat Rehman; Mehdi Mirakhorli; Meiyappan Nagappan; Azat Aralbay Uulu; Matthew Thornton,117-127,11,https://doi.org/10.1145/3180155.3180234,,,TRUE
ICSE,2018,conf/icse/icse2018,Human and social aspects of computing I,Sentiment polarity detection for software development.,Fabio Calefato; Filippo Lanubile; Federico Maiorano; Nicole Novielli,128,1,https://doi.org/10.1145/3180155.3182519,,,FALSE
ICSE,2018,conf/icse/icse2018,Software repair II,Semantic program repair using a reference implementation.,Sergey Mechtaev; Manh-Dung Nguyen; Yannic Noller; Lars Grunske; Abhik Roychoudhury,129-139,11,https://doi.org/10.1145/3180155.3180247,,,TRUE
ICSE,2018,conf/icse/icse2018,Software repair II,Automated repair of mobile friendly problems in web pages.,Sonal Mahajan; Negarsadat Abolhassani; Phil McMinn; William G. J. Halfond,140-150,11,https://doi.org/10.1145/3180155.3180262,,,TRUE
ICSE,2018,conf/icse/icse2018,Software repair II,Static automated program repair for heap properties.,Rijnard van Tonder; Claire Le Goues,151-162,12,https://doi.org/10.1145/3180155.3180250,,,TRUE
ICSE,2018,conf/icse/icse2018,Software repair II,Overfitting in semantics-based automated program repair.,Xuan-Bach D. Le; Ferdian Thung; David Lo; Claire Le Goues,163,1,https://doi.org/10.1145/3180155.3182536,,,FALSE
ICSE,2018,conf/icse/icse2018,Apps and app stores II,Studying the dialogue between users and developers of free apps in the google play store.,Safwat Hassan; Chakkrit Tantithamthavorn; Cor-Paul Bezemer; Ahmed E. Hassan,164,1,https://doi.org/10.1145/3180155.3182523,,,FALSE
ICSE,2018,conf/icse/icse2018,Apps and app stores II,Automated reporting of GUI design violations for mobile apps.,Kevin Moran; Boyang Li; Carlos Bernal-Cárdenas; Dan Jelf; Denys Poshyvanyk,165-175,11,https://doi.org/10.1145/3180155.3180246,,,TRUE
ICSE,2018,conf/icse/icse2018,Apps and app stores II,Leveraging program analysis to reduce user-perceived latency in mobile applications.,Yixue Zhao; Marcelo Schmitt Laser; Yingjun Lyu; Nenad Medvidovic,176-186,11,https://doi.org/10.1145/3180155.3180249,,,TRUE
ICSE,2018,conf/icse/icse2018,Apps and app stores II,Repairing crashes in Android apps.,Shin Hwei Tan; Zhen Dong; Xiang Gao; Abhik Roychoudhury,187-198,12,https://doi.org/10.1145/3180155.3180243,,,TRUE
ICSE,2018,conf/icse/icse2018,Regression testing,Hybrid regression test selection.,Lingming Zhang,199-209,11,https://doi.org/10.1145/3180155.3180198,,,TRUE
ICSE,2018,conf/icse/icse2018,Regression testing,Fine-grained test minimization.,Arash Vahabzadeh; Andrea Stocco; Ali Mesbah,210-221,12,https://doi.org/10.1145/3180155.3180203,,,TRUE
ICSE,2018,conf/icse/icse2018,Regression testing,FAST approaches to scalable similarity-based test case prioritization.,Breno Miranda; Emilio Cruciani; Roberto Verdecchia; Antonia Bertolino,222-232,11,https://doi.org/10.1145/3180155.3180210,,,TRUE
ICSE,2018,conf/icse/icse2018,Regression testing,Towards refactoring-aware regression test selection.,Kaiyuan Wang; Chenguang Zhu; Ahmet Çelik; Jongwook Kim; Don S. Batory; Milos Gligoric,233-244,12,https://doi.org/10.1145/3180155.3180254,,,TRUE
ICSE,2018,conf/icse/icse2018,Open-source systems,Inheritance usage patterns in open-source systems.,Jamie Stevenson; Murray I. Wood,245-255,11,https://doi.org/10.1145/3180155.3180168,,,TRUE
ICSE,2018,conf/icse/icse2018,Open-source systems,Almost there: a study on quasi-contributors in open source software projects.,Igor Steinmacher; Gustavo Pinto; Igor Scaliante Wiese; Marco Aurélio Gerosa,256-266,11,https://doi.org/10.1145/3180155.3180208,,,TRUE
ICSE,2018,conf/icse/icse2018,Open-source systems,Analyzing a decade of Linux system calls.,Mojtaba Bagherzadeh; Nafiseh Kahani; Cor-Paul Bezemer; Ahmed E. Hassan; Juergen Dingel; James R. Cordy,267,1,https://doi.org/10.1145/3180155.3182518,,,FALSE
ICSE,2018,conf/icse/icse2018,Open-source systems,To distribute or not to distribute?: why licensing bugs matter.,Christopher Vendome; Daniel M. Germán; Massimiliano Di Penta; Gabriele Bavota; Mario Linares Vásquez; Denys Poshyvanyk,268-279,12,https://doi.org/10.1145/3180155.3180221,,,TRUE
ICSE,2018,conf/icse/icse2018,Test generation,Augusto: exploiting popular functionalities for the generation of semantic GUI tests with Oracles.,Leonardo Mariani; Mauro Pezzè; Daniele Zuddas,280-290,11,https://doi.org/10.1145/3180155.3180162,,,TRUE
ICSE,2018,conf/icse/icse2018,Test generation,Towards optimal concolic testing.,Xinyu Wang; Jun Sun; Zhenbang Chen; Peixin Zhang; Jingyi Wang; Yun Lin,291-302,12,https://doi.org/10.1145/3180155.3180177,,,TRUE
ICSE,2018,conf/icse/icse2018,Test generation,DeepTest: automated testing of deep-neural-network-driven autonomous cars.,Yuchi Tian; Kexin Pei; Suman Jana; Baishakhi Ray,303-314,12,https://doi.org/10.1145/3180155.3180220,,,TRUE
ICSE,2018,conf/icse/icse2018,Test generation,Precise concolic unit testing of C programs using extended units and symbolic alarm filtering.,Yunho Kim; Yunja Choi; Moonzoo Kim,315-326,12,https://doi.org/10.1145/3180155.3180253,,,TRUE
ICSE,2018,conf/icse/icse2018,Program reduction techniques,Spatio-temporal context reduction: a pointer-analysis-based static approach for detecting use-after-free vulnerabilities.,Hua Yan; Yulei Sui; Shiping Chen; Jingling Xue,327-337,11,https://doi.org/10.1145/3180155.3180178,,,TRUE
ICSE,2018,conf/icse/icse2018,Program reduction techniques,Program splicing.,Yanxin Lu; Swarat Chaudhuri; Chris Jermaine; David Melski,338-349,12,https://doi.org/10.1145/3180155.3180190,,,TRUE
ICSE,2018,conf/icse/icse2018,Program reduction techniques,Chopped symbolic execution.,David Trabish; Andrea Mattavelli; Noam Rinetzky; Cristian Cadar,350-360,11,https://doi.org/10.1145/3180155.3180251,,,TRUE
ICSE,2018,conf/icse/icse2018,Program reduction techniques,Perses: syntax-guided program reduction.,Chengnian Sun; Yuanbo Li; Qirun Zhang; Tianxiao Gu; Zhendong Su,361-371,11,https://doi.org/10.1145/3180155.3180236,,,TRUE
ICSE,2018,conf/icse/icse2018,"Security, privacy and trust I",Secure coding practices in Java: challenges and vulnerabilities.,Na Meng; Stefan Nagy; Danfeng (Daphne) Yao; Wenjie Zhuang; Gustavo Arango Argoty,372-383,12,https://doi.org/10.1145/3180155.3180201,,,TRUE
ICSE,2018,conf/icse/icse2018,"Security, privacy and trust I",EnMobile: entity-based characterization and analysis of mobile malware.,Wei Yang; Mukul R. Prasad; Tao Xie,384-394,11,https://doi.org/10.1145/3180155.3180223,,,TRUE
ICSE,2018,conf/icse/icse2018,"Security, privacy and trust I",Model comprehension for security risk assessment: an empirical comparison of tabular vs. graphical representations.,Katsiaryna Labunets; Fabio Massacci; Federica Paci; Sabrina Marczak; Flávio Moreira de Oliveira,395,1,https://doi.org/10.1145/3180155.3182511,,,FALSE
ICSE,2018,conf/icse/icse2018,"Security, privacy and trust I",Privacy by designers: software developers' privacy mindset.,Irit Hadar; Tomer Hasson; Oshrat Ayalon; Eran Toch; Michael Birnhack; Sofia Sherman; Arod Balissa,396,1,https://doi.org/10.1145/3180155.3182531,,,FALSE
ICSE,2018,conf/icse/icse2018,Empirical software engineering,Does the propagation of artifact changes across tasks reflect work dependencies?,Christoph Mayr-Dorn; Alexander Egyed,397-407,11,https://doi.org/10.1145/3180155.3180185,,,TRUE
ICSE,2018,conf/icse/icse2018,Empirical software engineering,Large-scale analysis of framework-specific exceptions in Android apps.,Lingling Fan; Ting Su; Sen Chen; Guozhu Meng; Yang Liu; Lihua Xu; Geguang Pu; Zhendong Su,408-419,12,https://doi.org/10.1145/3180155.3180222,,,TRUE
ICSE,2018,conf/icse/icse2018,Empirical software engineering,Effect sizes and their variance for AB/BA crossover design studies.,Lech Madeyski; Barbara A. Kitchenham,420,1,https://doi.org/10.1145/3180155.3182556,,,FALSE
ICSE,2018,conf/icse/icse2018,Empirical software engineering,A large-scale empirical study on the effects of code obfuscations on Android apps and anti-malware products.,Mahmoud Hammad; Joshua Garcia; Sam Malek,421-431,11,https://doi.org/10.1145/3180155.3180228,,,TRUE
ICSE,2018,conf/icse/icse2018,Empirical software engineering,An empirical study on the interplay between semantic coupling and co-change of software classes.,Nemitari Ajienka; Andrea Capiluppi; Steve Counsell,432,1,https://doi.org/10.1145/3180155.3190833,,,FALSE
ICSE,2018,conf/icse/icse2018,Test improvement,DeFlaker: automatically detecting flaky tests.,Jonathan Bell; Owolabi Legunsen; Michael Hilton; Lamyaa Eloussi; Tifany Yung; Darko Marinov,433-444,12,https://doi.org/10.1145/3180155.3180164,,,TRUE
ICSE,2018,conf/icse/icse2018,Test improvement,DetReduce: minimizing Android GUI test suites for regression testing.,Wontae Choi; Koushik Sen; George C. Necula; Wenyu Wang,445-455,11,https://doi.org/10.1145/3180155.3180173,,,TRUE
ICSE,2018,conf/icse/icse2018,Test improvement,Time to clean your test objectives.,Michaël Marcozzi; Sébastien Bardin; Nikolai Kosmatov; Mike Papadakis; Virgile Prevosto; Loïc Correnson,456-467,12,https://doi.org/10.1145/3180155.3180191,,,TRUE
ICSE,2018,conf/icse/icse2018,Test improvement,Prioritizing browser environments for web application test execution.,Jung-Hyun Kwon; In-Young Ko; Gregg Rothermel,468-479,12,https://doi.org/10.1145/3180155.3180244,,,TRUE
ICSE,2018,conf/icse/icse2018,Empirical studies of code,An empirical study of early access games on the steam platform.,Dayi Lin; Cor-Paul Bezemer; Ahmed E. Hassan,480,1,https://doi.org/10.1145/3180155.3182512,,,FALSE
ICSE,2018,conf/icse/icse2018,Empirical studies of code,Correctness attraction: a study of stability of software behavior under runtime perturbation.,Benjamin Danglot; Philippe Preux; Benoit Baudry; Martin Monperrus,481,1,https://doi.org/10.1145/3180155.3182548,,,FALSE
ICSE,2018,conf/icse/icse2018,Empirical studies of code,On the diffuseness and the impact on maintainability of code smells: a large scale empirical investigation.,Fabio Palomba; Gabriele Bavota; Massimiliano Di Penta; Fausto Fasano; Rocco Oliveto; Andrea De Lucia,482,1,https://doi.org/10.1145/3180155.3182532,,,FALSE
ICSE,2018,conf/icse/icse2018,Empirical studies of code,Accurate and efficient refactoring detection in commit history.,Nikolaos Tsantalis; Matin Mansouri; Laleh Mousavi Eshkevari; Davood Mazinanian; Danny Dig,483-494,12,https://doi.org/10.1145/3180155.3180206,,,TRUE
ICSE,2018,conf/icse/icse2018,"Security, privacy and trust II",ENTRUST: engineering trustworthy self-adaptive software with dynamic assurance cases.,Radu Calinescu; Danny Weyns; Simos Gerasimou; M. Usman Iftikhar; Ibrahim Habli; Tim Kelly,495,1,https://doi.org/10.1145/3180155.3182540,,,FALSE
ICSE,2018,conf/icse/icse2018,"Security, privacy and trust II","The good, the bad and the ugly: a study of security decisions in a cyber-physical systems game.",Sylvain Frey; Awais Rashid; Pauline Anthonysamy; Maria Pinto-Albuquerque; Syed Asad Naqvi,496,1,https://doi.org/10.1145/3180155.3182549,,,FALSE
ICSE,2018,conf/icse/icse2018,"Security, privacy and trust II","Lightweight, obfuscation-resilient detection and family identification of Android malware.",Joshua Garcia; Mahmoud Hammad; Sam Malek,497,1,https://doi.org/10.1145/3180155.3182551,,,FALSE
ICSE,2018,conf/icse/icse2018,"Security, privacy and trust II",Are vulnerabilities discovered and resolved like other defects?,Patrick J. Morrison; Rahul Pandita; Xusheng Xiao; Ram Chillarege; Laurie Williams,498,1,https://doi.org/10.1145/3180155.3182553,,,FALSE
ICSE,2018,conf/icse/icse2018,Communities and ecosystems,How modern news aggregators help development communities shape and share knowledge.,Maurício Finavaro Aniche; Christoph Treude; Igor Steinmacher; Igor Wiese; Gustavo Pinto; Margaret-Anne D. Storey; Marco Aurélio Gerosa,499-510,12,https://doi.org/10.1145/3180155.3180180,,,TRUE
ICSE,2018,conf/icse/icse2018,Communities and ecosystems,Adding sparkle to social coding: an empirical study of repository badges in the ,Asher Trockman; Shurui Zhou; Christian Kästner; Bogdan Vasilescu,511-522,12,https://doi.org/10.1145/3180155.3180209,,,TRUE
ICSE,2018,conf/icse/icse2018,Communities and ecosystems,"""Was my contribution fairly reviewed?"": a framework to study the perception of fairness in modern code reviews.",Daniel M. Germán; Gregorio Robles; Germán Poo-Caamaño; Xin Yang; Hajimu Iida; Katsuro Inoue,523-534,12,https://doi.org/10.1145/3180155.3180217,,,TRUE
ICSE,2018,conf/icse/icse2018,Communities and ecosystems,Collaborative model-driven software engineering: a classification framework and a research map.,Davide Di Ruscio; Mirco Franzago; Henry Muccini; Ivano Malavolta,535,1,https://doi.org/10.1145/3180155.3182543,,,FALSE
ICSE,2018,conf/icse/icse2018,Testing I,ChangeLocator: locate crash-inducing changes based on crash reports.,Rongxin Wu; Ming Wen; Shing-Chi Cheung; Hongyu Zhang,536,1,https://doi.org/10.1145/3180155.3182516,,,FALSE
ICSE,2018,conf/icse/icse2018,Testing I,Are mutation scores correlated with real fault detection?: a large scale empirical study on the relationship between mutants and real faults.,Mike Papadakis; Donghwan Shin; Shin Yoo; Doo-Hwan Bae,537-548,12,https://doi.org/10.1145/3180155.3180183,,,TRUE
ICSE,2018,conf/icse/icse2018,Testing I,Efficient sampling of SAT solutions for testing.,Rafael Dutra; Kevin Laeufer; Jonathan Bachrach; Koushik Sen,549-559,11,https://doi.org/10.1145/3180155.3180248,,,TRUE
ICSE,2018,conf/icse/icse2018,Testing I,Are fix-inducing changes a moving target?: a longitudinal case study of just-in-time defect prediction.,Shane McIntosh; Yasutaka Kamei,560,1,https://doi.org/10.1145/3180155.3182514,,,FALSE
ICSE,2018,conf/icse/icse2018,Studying software engineers I,Understanding developers' needs on deprecation as a language feature.,Anand Ashok Sawant; Maurício Finavaro Aniche; Arie van Deursen; Alberto Bacchelli,561-571,11,https://doi.org/10.1145/3180155.3180170,,,TRUE
ICSE,2018,conf/icse/icse2018,Studying software engineers I,On the dichotomy of debugging behavior among programmers.,Moritz Beller; Niels Spruit; Diomidis Spinellis; Andy Zaidman,572-583,12,https://doi.org/10.1145/3180155.3180175,,,TRUE
ICSE,2018,conf/icse/icse2018,Studying software engineers I,Measuring program comprehension: a large-scale field study with professionals.,Xin Xia; Lingfeng Bao; David Lo; Zhenchang Xing; Ahmed E. Hassan; Shanping Li,584,1,https://doi.org/10.1145/3180155.3182538,,,FALSE
ICSE,2018,conf/icse/icse2018,Studying software engineers I,Data scientists in software teams: state of the art and challenges.,Miryung Kim; Thomas Zimmermann; Robert DeLine; Andrew Begel,585,1,https://doi.org/10.1145/3180155.3182515,,,FALSE
ICSE,2018,conf/icse/icse2018,Program analysis I,Dataflow tunneling: mining inter-request data dependencies for request-based applications.,Xiao Yu; Guoliang Jin,586-597,12,https://doi.org/10.1145/3180155.3180171,,,TRUE
ICSE,2018,conf/icse/icse2018,Program analysis I,Launch-mode-aware context-sensitive activity transition analysis.,Yifei Zhang; Yulei Sui; Jingling Xue,598-608,11,https://doi.org/10.1145/3180155.3180188,,,TRUE
ICSE,2018,conf/icse/icse2018,Program analysis I,UFO: predictive concurrency use-after-free detection.,Jeff Huang,609-619,11,https://doi.org/10.1145/3180155.3180225,,,TRUE
ICSE,2018,conf/icse/icse2018,Program analysis I,Collective program analysis.,Ganesha Upadhyaya; Hridesh Rajan,620-631,12,https://doi.org/10.1145/3180155.3180252,,,TRUE
ICSE,2018,conf/icse/icse2018,Human and social aspects of computing II,Statistical learning of API fully qualified names in code snippets of online forums.,Hung Phan; Hoan Anh Nguyen; Ngoc M. Tran; Linh H. Truong; Anh Tuan Nguyen; Tien N. Nguyen,632-642,11,https://doi.org/10.1145/3180155.3180230,,,TRUE
ICSE,2018,conf/icse/icse2018,Human and social aspects of computing II,When not to comment: questions and tradeoffs with API documentation for C++ projects.,Andrew Head; Caitlin Sadowski; Emerson R. Murphy-Hill; Andrea Knight,643-653,11,https://doi.org/10.1145/3180155.3180176,,,TRUE
ICSE,2018,conf/icse/icse2018,Human and social aspects of computing II,Deuce: a lightweight user interface for structured editing.,Brian Hempel; Justin Lubin; Grace Lu; Ravi Chugh,654-664,11,https://doi.org/10.1145/3180155.3180165,,,TRUE
ICSE,2018,conf/icse/icse2018,Human and social aspects of computing II,From UI design image to GUI skeleton: a neural machine translator to bootstrap mobile GUI implementation.,Chunyang Chen; Ting Su; Guozhu Meng; Zhenchang Xing; Yang Liu,665-676,12,https://doi.org/10.1145/3180155.3180240,,,TRUE
ICSE,2018,conf/icse/icse2018,Testing II,When testing meets code review: why and how developers review tests.,Davide Spadini; Maurício Finavaro Aniche; Margaret-Anne D. Storey; Magiel Bruntink; Alberto Bacchelli,677-687,11,https://doi.org/10.1145/3180155.3180192,,,TRUE
ICSE,2018,conf/icse/icse2018,Testing II,Redefining prioritization: continuous prioritization for continuous integration.,Jingjing Liang; Sebastian G. Elbaum; Gregg Rothermel,688-698,11,https://doi.org/10.1145/3180155.3180213,,,TRUE
ICSE,2018,conf/icse/icse2018,Testing II,MAHAKIL: diversity based oversampling approach to alleviate the class imbalance issue in software defect prediction.,Kwabena Ebo Bennin; Jacky Keung; Passakorn Phannachitta; Akito Monden; Solomon Mensah,699,1,https://doi.org/10.1145/3180155.3182520,,,FALSE
ICSE,2018,conf/icse/icse2018,Testing II,On the use of hidden Markov model to predict the time to fix bugs.,Mayy Habayeb; Syed Shariyar Murtaza; Andriy V. Miranskyy; Ayse Basar Bener,700,1,https://doi.org/10.1145/3180155.3182522,,,FALSE
ICSE,2018,conf/icse/icse2018,Studying software engineers II,What makes a great manager of software engineers?,Eirini Kalliamvakou; Christian Bird; Thomas Zimmermann; Andrew Begel; Robert DeLine; Daniel M. Germán,701,1,https://doi.org/10.1145/3180155.3182525,,,FALSE
ICSE,2018,conf/icse/icse2018,Studying software engineers II,Older adults and hackathons: a qualitative study.,Wieslaw Kopec; Bartlomiej Balcerzak; Radoslaw Nielek; Grzegorz Kowalik; Adam Wierzbicki; Fabio Casati,702-703,2,https://doi.org/10.1145/3180155.3182547,,,FALSE
ICSE,2018,conf/icse/icse2018,Studying software engineers II,Does syntax highlighting help programming novices?,Christoph Hannebauer; Marc Hesenius; Volker Gruhn,704,1,https://doi.org/10.1145/3180155.3182554,,,FALSE
ICSE,2018,conf/icse/icse2018,Studying software engineers II,Do programmers work at night or during the weekend?,Maëlick Claes; Mika V. Mäntylä; Miikka Kuutila; Bram Adams,705-715,11,https://doi.org/10.1145/3180155.3180193,,,TRUE
ICSE,2018,conf/icse/icse2018,Program analysis II,Multi-granular conflict and dependency analysis in software engineering based on graph transformation.,Leen Lambers; Daniel Strüber; Gabriele Taentzer; Kristopher Born; Jevgenij Huebert,716-727,12,https://doi.org/10.1145/3180155.3180258,,,TRUE
ICSE,2018,conf/icse/icse2018,Program analysis II,Self-hiding behavior in Android apps: detection and characterization.,Zhiyong Shan; Iulian Neamtiu; Raina Samuel,728-739,12,https://doi.org/10.1145/3180155.3180214,,,TRUE
ICSE,2018,conf/icse/icse2018,Program analysis II,The scent of a smell: an extensive comparison between textual and structural smells.,Fabio Palomba; Annibale Panichella; Andy Zaidman; Rocco Oliveto; Andrea De Lucia,740,1,https://doi.org/10.1145/3180155.3182530,,,FALSE
ICSE,2018,conf/icse/icse2018,Program analysis II,ConflictJS: finding and understanding conflicts between JavaScript libraries.,Jibesh Patra; Pooja N. Dixit; Michael Pradel,741-751,11,https://doi.org/10.1145/3180155.3180184,,,TRUE
ICSE,2018,conf/icse/icse2018,Software comprehension,Debugging data flows in reactive programs.,Herman Banken; Erik Meijer; Georgios Gousios,752-763,12,https://doi.org/10.1145/3180155.3180156,,,TRUE
ICSE,2018,conf/icse/icse2018,Software comprehension,Do you remember this source code?,Jacob Krüger; Jens Wiemann; Wolfram Fenske; Gunter Saake; Thomas Leich,764-775,12,https://doi.org/10.1145/3180155.3180215,,,TRUE
ICSE,2018,conf/icse/icse2018,Software comprehension,Inferring hierarchical motifs from execution traces.,Saba Alimadadi; Ali Mesbah; Karthik Pattabiraman,776-787,12,https://doi.org/10.1145/3180155.3180216,,,TRUE
ICSE,2018,conf/icse/icse2018,Software comprehension,A comparison of program comprehension strategies by blind and sighted programmers.,Ameer Armaly; Paige Rodeghero; Collin McMillan,788,1,https://doi.org/10.1145/3180155.3182544,,,FALSE
ICSE,2018,conf/icse/icse2018,Performance and maintenance,Identifying patch correctness in test-based program repair.,Yingfei Xiong; Xinyuan Liu; Muhan Zeng; Lu Zhang; Gang Huang,789-799,11,https://doi.org/10.1145/3180155.3180182,,,TRUE
ICSE,2018,conf/icse/icse2018,Performance and maintenance,How ,Junwen Yang; Pranav Subramaniam; Shan Lu; Cong Yan; Alvin Cheung,800-810,11,https://doi.org/10.1145/3180155.3180194,,,TRUE
ICSE,2018,conf/icse/icse2018,Performance and maintenance,Speedoo: prioritizing performance optimization opportunities.,Zhifei Chen; Bihuan Chen; Lu Xiao; Xiao Wang; Lin Chen; Yang Liu; Baowen Xu,811-821,11,https://doi.org/10.1145/3180155.3180229,,,TRUE
ICSE,2018,conf/icse/icse2018,Performance and maintenance,Empirical study on the discrepancy between performance testing results from virtual and physical environments.,Muhammad Moiz Arif; Weiyi Shang; Emad Shihab,822,1,https://doi.org/10.1145/3180155.3182527,,,FALSE
ICSE,2018,conf/icse/icse2018,Requirements and recommender systems,The evolution of requirements practices in software startups.,Catarina Gralha; Daniela E. Damian; Anthony I. Wasserman; Miguel Goulão; João Araújo,823-833,11,https://doi.org/10.1145/3180155.3180158,,,TRUE
ICSE,2018,conf/icse/icse2018,Requirements and recommender systems,Traceability in the wild: automatically augmenting incomplete trace links.,Michael Rath; Jacob Rendall; Jin L. C. Guo; Jane Cleland-Huang; Patrick Mäder,834-845,12,https://doi.org/10.1145/3180155.3180207,,,TRUE
ICSE,2018,conf/icse/icse2018,Requirements and recommender systems,A temporal permission analysis and enforcement framework for Android.,Alireza Sadeghi; Reyhaneh Jabbarvand; Negar Ghorbani; Hamid Bagheri; Sam Malek,846-857,12,https://doi.org/10.1145/3180155.3180172,,,TRUE
ICSE,2018,conf/icse/icse2018,Requirements and recommender systems,Global-aware recommendations for repairing violations in exception handling.,Eiji Adachi Barbosa; Alessandro Garcia,858,1,https://doi.org/10.1145/3180155.3182539,,,FALSE
ICSE,2018,conf/icse/icse2018,Testing III,RFC-directed differential testing of certificate validation in SSL/TLS implementations.,Chu Chen; Cong Tian; Zhenhua Duan; Liang Zhao,859-870,12,https://doi.org/10.1145/3180155.3180226,,,TRUE
ICSE,2018,conf/icse/icse2018,Testing III,Symbolic verification of regular properties.,Hengbiao Yu; Zhenbang Chen; Ji Wang; Zhendong Su; Wei Dong,871-881,11,https://doi.org/10.1145/3180155.3180227,,,TRUE
ICSE,2018,conf/icse/icse2018,Testing III,Metamorphic testing of RESTful web APIs.,Sergio Segura; José Antonio Parejo; Javier Troya; Antonio Ruiz Cortés,882,1,https://doi.org/10.1145/3180155.3182528,,,FALSE
ICSE,2018,conf/icse/icse2018,Testing III,Integrating technical debt management and software quality management processes: a framework and field tests.,Narayan Ramasubbu; Chris F. Kemerer,883,1,https://doi.org/10.1145/3180155.3182529,,,FALSE
ICSE,2018,conf/icse/icse2018,Mining software repositories,Understanding the factors for fast answers in technical Q&A websites: an empirical study of four stack exchange websites.,Shaowei Wang; Tse-Hsun Chen; Ahmed E. Hassan,884,1,https://doi.org/10.1145/3180155.3182521,,,FALSE
ICSE,2018,conf/icse/icse2018,Mining software repositories,Towards reusing hints from past fixes: an exploratory study on thousands of real samples.,Hao Zhong; Na Meng,885,1,https://doi.org/10.1145/3180155.3182550,,,FALSE
ICSE,2018,conf/icse/icse2018,Mining software repositories,Are code examples on an online Q&A forum reliable?: a study of API misuse on stack overflow.,Tianyi Zhang; Ganesha Upadhyaya; Anastasia Reinhardt; Hridesh Rajan; Miryung Kim,886-896,11,https://doi.org/10.1145/3180155.3180260,,,TRUE
ICSE,2018,conf/icse/icse2018,Mining software repositories,Inference of development activities from interaction with uninstrumented applications.,Lingfeng Bao; Zhenchang Xing; Xin Xia; David Lo; Ahmed E. Hassan,897,1,https://doi.org/10.1145/3180155.3182537,,,FALSE
ICSE,2018,conf/icse/icse2018,Models and modeling I,Propagating configuration decisions with modal implication graphs.,Sebastian Krieter; Thomas Thüm; Sandro Schulze; Reimar Schröter; Gunter Saake,898-909,12,https://doi.org/10.1145/3180155.3180159,,,TRUE
ICSE,2018,conf/icse/icse2018,Models and modeling I,A combinatorial approach for exposing off-nominal behaviors.,Kaushik Madala; Hyunsook Do; Daniel Aceituna,910-920,11,https://doi.org/10.1145/3180155.3180204,,,TRUE
ICSE,2018,conf/icse/icse2018,Models and modeling I,Identifying design problems in the source code: a grounded theory.,Leonardo da Silva Sousa; Anderson Oliveira; Willian Nalepa Oizumi; Simone D. J. Barbosa; Alessandro Garcia; Jaejoon Lee; Marcos Kalinowski; Rafael Maiani de Mello; Baldoino Fonseca; Roberto Felicio Oliveira; Carlos Lucena; Rodrigo B. de Paes,921-931,11,https://doi.org/10.1145/3180155.3180239,,,TRUE
ICSE,2018,conf/icse/icse2018,Models and modeling I,Predicting future developer behavior in the IDE using topic models.,Kostadin Damevski; Hui Chen; David C. Shepherd; Nicholas A. Kraft; Lori L. Pollock,932,1,https://doi.org/10.1145/3180155.3182541,,,FALSE
ICSE,2018,conf/icse/icse2018,"Code search, synthesis, performance",Deep code search.,Xiaodong Gu; Hongyu Zhang; Sunghun Kim,933-944,12,https://doi.org/10.1145/3180155.3180167,,,TRUE
ICSE,2018,conf/icse/icse2018,"Code search, synthesis, performance",Augmenting and structuring user queries to support efficient free-form code search.,Raphael Sirres; Tegawendé F. Bissyandé; Dongsun Kim; David Lo; Jacques Klein; Kisub Kim; Yves Le Traon,945,1,https://doi.org/10.1145/3180155.3182513,,,FALSE
ICSE,2018,conf/icse/icse2018,"Code search, synthesis, performance",FaCoY: a code-to-code search engine.,Kisub Kim; Dongsun Kim; Tegawendé F. Bissyandé; Eunjong Choi; Li Li; Jacques Klein; Yves Le Traon,946-957,12,https://doi.org/10.1145/3180155.3180187,,,TRUE
ICSE,2018,conf/icse/icse2018,"Code search, synthesis, performance",Generalized data structure synthesis.,Calvin Loncaric; Michael D. Ernst; Emina Torlak,958-968,11,https://doi.org/10.1145/3180155.3180211,,,TRUE
ICSE,2018,conf/icse/icse2018,Software tools and environments,A graph solver for the automated generation of consistent domain-specific models.,Oszkár Semeráth; András Szabolcs Nagy; Dániel Varró,969-980,12,https://doi.org/10.1145/3180155.3180186,,,TRUE
ICSE,2018,conf/icse/icse2018,Software tools and environments,Automatically finding bugs in a commercial cyber-physical system development tool chain with SLforge.,Shafiul Azam Chowdhury; Soumik Mohian; Sidharth Mehra; Siddhant Gawsane; Taylor T. Johnson; Christoph Csallner,981-992,12,https://doi.org/10.1145/3180155.3180231,,,TRUE
ICSE,2018,conf/icse/icse2018,Software tools and environments,Context-aware conversational developer assistants.,Nick C. Bradley; Thomas Fritz; Reid Holmes,993-1003,11,https://doi.org/10.1145/3180155.3180238,,,TRUE
ICSE,2018,conf/icse/icse2018,Software tools and environments,"Open source barriers to entry, revisited: a sociotechnical perspective.",Christopher J. Mendez; Hema Susmita Padala; Zoe Steine-Hanson; Claudia Hilderbrand; Amber Horvath; Charles Hill; Logan Simpson; Nupoor Patil; Anita Sarma; Margaret M. Burnett,1004-1015,12,https://doi.org/10.1145/3180155.3180241,,,TRUE
ICSE,2018,conf/icse/icse2018,Search-based software engineering I,Testing vision-based control systems using learnable evolutionary algorithms.,Raja Ben Abdessalem; Shiva Nejati; Lionel C. Briand; Thomas Stifter,1016-1026,11,https://doi.org/10.1145/3180155.3180160,,,TRUE
ICSE,2018,conf/icse/icse2018,Search-based software engineering I,To preserve or not to preserve invalid solutions in search-based software engineering: a case study in software product lines.,Jianmei Guo; Kai Shi,1027-1038,12,https://doi.org/10.1145/3180155.3180163,,,TRUE
ICSE,2018,conf/icse/icse2018,Search-based software engineering I,Nemo: multi-criteria test-suite minimization with integer nonlinear programming.,Jun-Wei Lin; Reyhaneh Jabbarvand; Joshua Garcia; Sam Malek,1039-1049,11,https://doi.org/10.1145/3180155.3180174,,,TRUE
ICSE,2018,conf/icse/icse2018,Search-based software engineering I,"Is ""better data"" better than ""better data miners""?: on the benefits of tuning SMOTE for defect prediction.",Amritanshu Agrawal; Tim Menzies,1050-1061,12,https://doi.org/10.1145/3180155.3180197,,,TRUE
ICSE,2018,conf/icse/icse2018,Testing IV,Analyzing the effects of test driven development in GitHub.,Neil C. Borle; Meysam Feghhi; Eleni Stroulia; Russell Greiner; Abram Hindle,1062,1,https://doi.org/10.1145/3180155.3182535,,,FALSE
ICSE,2018,conf/icse/icse2018,Testing IV,A comparative study to benchmark cross-project defect prediction approaches.,Steffen Herbold; Alexander Trautsch; Jens Grabowski,1063,1,https://doi.org/10.1145/3180155.3182542,,,FALSE
ICSE,2018,conf/icse/icse2018,Testing IV,MSeer: an advanced technique for locating multiple bugs in parallel.,Ruizhi Gao; W. Eric Wong,1064,1,https://doi.org/10.1145/3180155.3182552,,,FALSE
ICSE,2018,conf/icse/icse2018,Testing IV,Journal first presentation of an experience report on applying software testing academic results in industry: we need usable automated test generation.,Andre Arcuri,1065,1,https://doi.org/10.1145/3180155.3182555,,,FALSE
ICSE,2018,conf/icse/icse2018,Software evolution and maintenance II,CCAligner: a token based large-gap clone detector.,Pengcheng Wang; Jeffrey Svajlenko; Yanzhao Wu; Yun Xu; Chanchal K. Roy,1066-1077,12,https://doi.org/10.1145/3180155.3180179,,,TRUE
ICSE,2018,conf/icse/icse2018,Software evolution and maintenance II,HireBuild: an automatic approach to history-driven repair of build scripts.,Foyzul Hassan; Xiaoyin Wang,1078-1089,12,https://doi.org/10.1145/3180155.3180181,,,TRUE
ICSE,2018,conf/icse/icse2018,Software evolution and maintenance II,The road to live programming: insights from the practice.,Juraj Kubelka; Romain Robbes; Alexandre Bergel,1090-1101,12,https://doi.org/10.1145/3180155.3180200,,,TRUE
ICSE,2018,conf/icse/icse2018,Software evolution and maintenance II,Assessing the threat of untracked changes in software evolution.,André C. Hora; Danilo Silva; Marco Tulio Valente; Romain Robbes,1102-1113,12,https://doi.org/10.1145/3180155.3180212,,,TRUE
ICSE,2018,conf/icse/icse2018,Models and modeling II,Programming not only by example.,Hila Peleg; Sharon Shoham; Eran Yahav,1114-1124,11,https://doi.org/10.1145/3180155.3180189,,,TRUE
ICSE,2018,conf/icse/icse2018,Models and modeling II,Goal-conflict likelihood assessment based on model counting.,Renzo Degiovanni; Pablo F. Castro; Marcelo Arroyo; Marcelo Ruiz; Nazareno Aguirre; Marcelo F. Frias,1125-1135,11,https://doi.org/10.1145/3180155.3180261,,,TRUE
ICSE,2018,conf/icse/icse2018,Models and modeling II," typing for model-driven engineering: concepts, analysis, and applications.",Juan de Lara; Esther Guerra,1136,1,https://doi.org/10.1145/3180155.3182545,,,FALSE
ICSE,2018,conf/icse/icse2018,Models and modeling II,A static verification framework for message passing in Go using behavioural types.,Julien Lange; Nicholas Ng; Bernardo Toninho; Nobuko Yoshida,1137-1148,12,https://doi.org/10.1145/3180155.3180157,,,TRUE
ICSE,2018,conf/icse/icse2018,Inference and invariants,Inferring and asserting distributed system invariants.,Stewart Grant; Hendrik Cech; Ivan Beschastnikh,1149-1159,11,https://doi.org/10.1145/3180155.3180199,,,TRUE
ICSE,2018,conf/icse/icse2018,Inference and invariants,DroidStar: callback typestates for Android classes.,Arjun Radhakrishna; Nicholas V. Lewchenko; Shawn Meier; Sergio Mover; Krishna Chaitanya Sripada; Damien Zufferey; Bor-Yuh Evan Chang; Pavol Cerný,1160-1170,11,https://doi.org/10.1145/3180155.3180232,,,TRUE
ICSE,2018,conf/icse/icse2018,Inference and invariants,Debugging with intelligence via probabilistic inference.,Zhaogui Xu; Shiqing Ma; Xiangyu Zhang; Shuofei Zhu; Baowen Xu,1171-1181,11,https://doi.org/10.1145/3180155.3180237,,,TRUE
ICSE,2018,conf/icse/icse2018,Inference and invariants,Reducer-based construction of conditional verifiers.,Dirk Beyer; Marie-Christine Jakobs; Thomas Lemberger; Heike Wehrheim,1182-1193,12,https://doi.org/10.1145/3180155.3180259,,,TRUE
ICSE,2018,conf/icse/icse2018,Surveys and reviews,Challenges and pitfalls on surveying evidence in the software engineering technical literature: an exploratory study with novices.,Talita Vieira Ribeiro; Jobson L. Massollar; Guilherme Horta Travassos,1194,1,https://doi.org/10.1145/3180155.3182557,,,FALSE
ICSE,2018,conf/icse/icse2018,Surveys and reviews,Statistical errors in software engineering experiments: a preliminary literature review.,Rolando P. Reyes; Oscar Dieste; Efraín R. Fonseca C.; Natalia Juristo,1195-1206,12,https://doi.org/10.1145/3180155.3180161,,,TRUE
ICSE,2018,conf/icse/icse2018,Surveys and reviews,Synthesizing qualitative research in software engineering: a critical review.,Xin Huang; He Zhang; Xin Zhou; Muhammad Ali Babar; Song Yang,1207-1218,12,https://doi.org/10.1145/3180155.3180235,,,TRUE
ICSE,2018,conf/icse/icse2018,Search-based software engineering II,Automatic software repair: a survey.,Luca Gazzola; Daniela Micucci; Leonardo Mariani,1219,1,https://doi.org/10.1145/3180155.3182526,issue_last_page,checked,FALSE
ICSE,2018,conf/icse/icse2018,Search-based software engineering II,Search-based test data generation for SQL queries.,Jeroen Castelein; Maurício Finavaro Aniche; Mozhan Soltani; Annibale Panichella; Arie van Deursen,1220-1230,10,https://doi.org/10.1145/3180155.3180202,issue_first_page,fixed,TRUE
ICSE,2018,conf/icse/icse2018,Search-based software engineering II,Multi-objective integer programming approaches for solving optimal feature selection problem: a new perspective on multi-objective optimization problems in SBSE.,Yinxing Xue; Yan-Fu Li,1231-1242,12,https://doi.org/10.1145/3180155.3180257,,,TRUE
ICSE,2018,conf/icse/icse2018,Search-based software engineering II,Automated refactoring of OCL constraints with search.,Hong Lu; Shuai Wang; Tao Yue; Shaukat Ali; Jan F. Nygård,1243,1,https://doi.org/10.1145/3180155.3182546,,,FALSE
ICSE,2018,conf/icse/icse2018,Search-based software engineering II,Automatically generating search heuristics for concolic testing.,Sooyoung Cha; Seongjoon Hong; Junhee Lee; Hakjoo Oh,1244-1254,11,https://doi.org/10.1145/3180155.3180166,,,TRUE
TSE,2014,journals/tse/tse40,"Volume 40, Number 1, January 2014",Signing Off: The State of the Journal.,Bashar Nuseibeh,1-3,3,https://doi.org/10.1109/TSE.2014.2298171,,,FALSE
TSE,2014,journals/tse/tse40,"Volume 40, Number 1, January 2014",How Effectively Does Metamorphic Testing Alleviate the Oracle Problem?,Huai Liu; Fei-Ching Kuo; Dave Towey; Tsong Yueh Chen,4-22,19,https://doi.org/10.1109/TSE.2013.46,,,TRUE
TSE,2014,journals/tse/tse40,"Volume 40, Number 1, January 2014",Overcoming the Equivalent Mutant Problem: A Systematic Literature Review and a Comparative Experiment of Second Order Mutation.,Lech Madeyski; Wojciech Orzeszyna; Richard Torkar; Mariusz Jozala,23-42,20,https://doi.org/10.1109/TSE.2013.44,,,TRUE
TSE,2014,journals/tse/tse40,"Volume 40, Number 1, January 2014",Reducing Masking Effects in CombinatorialInteraction Testing: A Feedback DrivenAdaptive Approach.,Cemal Yilmaz; Emine Dumlu; Myra B. Cohen; Adam A. Porter,43-66,24,https://doi.org/10.1109/TSE.2013.53,,,TRUE
TSE,2014,journals/tse/tse40,"Volume 40, Number 1, January 2014",Variability Mining: Consistent Semi-automatic Detection of Product-Line Features.,Christian Kästner; Alexander Dreiling; Klaus Ostermann,67-82,16,https://doi.org/10.1109/TSE.2013.45,,,TRUE
TSE,2014,journals/tse/tse40,"Volume 40, Number 1, January 2014",Improved Evolutionary Algorithm Design for the Project Scheduling Problem Based on Runtime Analysis.,Leandro L. Minku; Dirk Sudholt; Xin Yao,83-102,20,https://doi.org/10.1109/TSE.2013.52,issue_last_page,checked,TRUE
TSE,2014,journals/tse/tse40,"Volume 40, Number 2, February 2014",Detecting Memory Leaks Statically with Full-Sparse Value-Flow Analysis.,Yulei Sui; Ding Ye; Jingling Xue,107-122,16,https://doi.org/10.1109/TSE.2014.2302311,issue_first_page,checked,TRUE
TSE,2014,journals/tse/tse40,"Volume 40, Number 2, February 2014",GossipKit: A Unified ComponentFramework for Gossip.,François Taïani; Shen Lin; Gordon S. Blair,123-136,14,https://doi.org/10.1109/TSE.2013.50,,,TRUE
TSE,2014,journals/tse/tse40,"Volume 40, Number 2, February 2014",Learning Assumptions for CompositionalVerification of Timed Systems.,Shang-Wei Lin; Étienne André; Yang Liu; Jun Sun; Jin Song Dong,137-153,17,https://doi.org/10.1109/TSE.2013.57,,,TRUE
TSE,2014,journals/tse/tse40,"Volume 40, Number 2, February 2014",Modeling Human-in-the-Loop Security Analysis and Decision-Making Processes.,Michael A. Schumann; Doron Drusinsky; James Bret Michael; Duminda Wijesekera,154-166,13,https://doi.org/10.1109/TSE.2014.2302433,,,TRUE
TSE,2014,journals/tse/tse40,"Volume 40, Number 2, February 2014",Multi-Objective Quality-Driven Service Selection - A Fully Polynomial Time Approximation Scheme.,Immanuel Trummer; Boi Faltings; Walter Binder,167-191,25,https://doi.org/10.1109/TSE.2013.61,,,TRUE
TSE,2014,journals/tse/tse40,"Volume 40, Number 2, February 2014",Quality-Aware Service Selection for Service-Based Systems Based on Iterative Multi-Attribute Combinatorial Auction.,Qiang He; Jun Yan; Hai Jin; Yun Yang,192-215,24,https://doi.org/10.1109/TSE.2013.2297911,,,TRUE
TSE,2014,journals/tse/tse40,"Volume 40, Number 3, March 2014",An Observe-Model-Exercise* Paradigm to Test Event-Driven Systems with Undetermined Input Spaces.,Bao N. Nguyen; Atif M. Memon,216-234,19,https://doi.org/10.1109/TSE.2014.2300857,,,TRUE
TSE,2014,journals/tse/tse40,"Volume 40, Number 3, March 2014",Governing Software Process Improvementsin Globally Distributed Product Development.,Narayan Ramasubbu,235-250,16,https://doi.org/10.1109/TSE.2013.58,,,TRUE
TSE,2014,journals/tse/tse40,"Volume 40, Number 3, March 2014",iTree: Efficiently Discovering High-Coverage Configurations Using Interaction Trees.,Charles Song; Adam A. Porter; Jeffrey S. Foster,251-265,15,https://doi.org/10.1109/TSE.2013.55,,,TRUE
TSE,2014,journals/tse/tse40,"Volume 40, Number 3, March 2014",Magiclock: Scalable Detection ofPotential Deadlocks in Large-ScaleMultithreaded Programs.,Yan Cai; W. K. Chan,266-281,16,https://doi.org/10.1109/TSE.2014.2301725,,,TRUE
TSE,2014,journals/tse/tse40,"Volume 40, Number 3, March 2014",Variability in Software Systems - A Systematic Literature Review.,Matthias Galster; Danny Weyns; Dan Tofan; Bartosz Michalik; Paris Avgeriou,282-306,25,https://doi.org/10.1109/TSE.2013.56,,,TRUE
TSE,2014,journals/tse/tse40,"Volume 40, Number 3, March 2014",You Are the Only Possible Oracle: Effective Test Selection for End Users of Interactive Machine Learning Systems.,Alex Groce; Todd Kulesza; Chaoqiang Zhang; Shalini Shamasunder; Margaret M. Burnett; Weng-Keen Wong; Simone Stumpf; Shubhomoy Das; Amber Shinsel; Forrest Bice; Kevin McIntosh,307-323,17,https://doi.org/10.1109/TSE.2013.59,,,TRUE
TSE,2014,journals/tse/tse40,"Volume 40, Number 4, April 2014",A Model-Driven Methodology for Developing Secure Data-Management Applications.,David A. Basin; Manuel Clavel; Marina Egea; Miguel Angel García de Dios; Carolina Dania,324-337,14,https://doi.org/10.1109/TSE.2013.2297116,,,TRUE
TSE,2014,journals/tse/tse40,"Volume 40, Number 4, April 2014",Analyzing Critical Decision-Based Processes.,Christophe Damas; Bernard Lambeau; Axel van Lamsweerde,338-365,28,https://doi.org/10.1109/TSE.2014.2312954,,,TRUE
TSE,2014,journals/tse/tse40,"Volume 40, Number 4, April 2014",Automatic Summarization of Bug Reports.,Sarah Rastkar; Gail C. Murphy; Gabriel Murray,366-380,15,https://doi.org/10.1109/TSE.2013.2297712,,,TRUE
TSE,2014,journals/tse/tse40,"Volume 40, Number 4, April 2014",Effects of Developer Experience on Learningand Applying Unit Test-Driven Development.,Roberto Latorre,381-395,15,https://doi.org/10.1109/TSE.2013.2295827,,,TRUE
TSE,2014,journals/tse/tse40,"Volume 40, Number 4, April 2014",On the Asymptotic Behavior of Adaptive Testing Strategy for Software Reliability Assessment.,Junpeng Lv; Bei-Bei Yin; Kai-Yuan Cai,396-412,17,https://doi.org/10.1109/TSE.2014.2310194,,,TRUE
TSE,2014,journals/tse/tse40,"Volume 40, Number 4, April 2014",Synthesizing Multithreaded Code from Real-Time Object-Oriented Models via Schedulability-Aware Thread Derivation.,Saehwa Kim,413-426,14,https://doi.org/10.1109/TSE.2013.47,,,TRUE
TSE,2014,journals/tse/tse40,"Volume 40, Number 5, May 2014",Automated Fixing of Programs with Contracts.,Yu Pei; Carlo A. Furia; Martin Nordio; Yi Wei; Bertrand Meyer; Andreas Zeller,427-449,23,https://doi.org/10.1109/TSE.2014.2312918,,,TRUE
TSE,2014,journals/tse/tse40,"Volume 40, Number 5, May 2014",Conservation of Information: Software'sHidden Clockwork?,Les Hatton,450-460,11,https://doi.org/10.1109/TSE.2014.2316158,,,TRUE
TSE,2014,journals/tse/tse40,"Volume 40, Number 5, May 2014",Formulating Cost-Effective Monitoring Strategies for Service-Based Systems.,Qiang He; Jun Han; Yun Yang; Hai Jin; Jean-Guy Schneider; Steven Versteeg,461-482,22,https://doi.org/10.1109/TSE.2013.48,,,TRUE
TSE,2014,journals/tse/tse40,"Volume 40, Number 5, May 2014",Modular Software Model Checking for Distributed Systems.,Watcharin Leungwattanakit; Cyrille Artho; Masami Hagiya; Yoshinori Tanabe; Mitsuharu Yamamoto; Koichi Takahashi,483-501,19,https://doi.org/10.1109/TSE.2013.49,,,TRUE
TSE,2014,journals/tse/tse40,"Volume 40, Number 5, May 2014",REPENT: Analyzing the Nature of Identifier Renamings.,Venera Arnaoudova; Laleh Mousavi Eshkevari; Massimiliano Di Penta; Rocco Oliveto; Giuliano Antoniol; Yann-Gaël Guéhéneuc,502-532,31,https://doi.org/10.1109/TSE.2014.2312942,,,TRUE
TSE,2014,journals/tse/tse40,"Volume 40, Number 6, June 2014",Bayesian Networks For Evidence-Based Decision-Making in Software Engineering.,Ayse Tosun Misirli; Ayse Basar Bener,533-554,22,https://doi.org/10.1109/TSE.2014.2321179,,,TRUE
TSE,2014,journals/tse/tse40,"Volume 40, Number 6, June 2014",Dealing with Traceability in the MDDof Model Transformations.,Juan Manuel Vara; Verónica Andrea Bollati; Álvaro Jiménez; Esperanza Marcos,555-583,29,https://doi.org/10.1109/TSE.2014.2316132,,,TRUE
TSE,2014,journals/tse/tse40,"Volume 40, Number 6, June 2014",GEA: A Goal-Driven Approach toDiscovering Early Aspects.,Jonathan Lee; Kuo-Hsun Hsu,584-602,19,https://doi.org/10.1109/TSE.2014.2322368,,,TRUE
TSE,2014,journals/tse/tse40,"Volume 40, Number 6, June 2014",Researcher Bias: The Use of Machine Learning in Software Defect Prediction.,Martin J. Shepperd; David Bowes; Tracy Hall,603-616,14,https://doi.org/10.1109/TSE.2014.2322358,,,TRUE
TSE,2014,journals/tse/tse40,"Volume 40, Number 6, June 2014",Static Analysis for Extracting Permission Checks of a Large Scale Framework: The Challenges and Solutions for Analyzing Android.,Alexandre Bartel; Jacques Klein; Martin Monperrus; Yves Le Traon,617-632,16,https://doi.org/10.1109/TSE.2014.2322867,,,TRUE
TSE,2014,journals/tse/tse40,"Volume 40, Number 7, July 2014",An Empirical Study of RefactoringChallenges and Benefits at Microsoft.,Miryung Kim; Thomas Zimmermann; Nachiappan Nagappan,633-649,17,https://doi.org/10.1109/TSE.2014.2318734,,,TRUE
TSE,2014,journals/tse/tse40,"Volume 40, Number 7, July 2014",Bypassing the Combinatorial Explosion: Using Similarity to Generate and Prioritize T-Wise Test Configurations for Software Product Lines.,Christopher Henard; Mike Papadakis; Gilles Perrouin; Jacques Klein; Patrick Heymans; Yves Le Traon,650-670,21,https://doi.org/10.1109/TSE.2014.2327020,,,TRUE
TSE,2014,journals/tse/tse40,"Volume 40, Number 7, July 2014",Methodbook: Recommending Move Method Refactorings via Relational Topic Models.,Gabriele Bavota; Rocco Oliveto; Malcom Gethers; Denys Poshyvanyk; Andrea De Lucia,671-694,24,https://doi.org/10.1109/TSE.2013.60,,,TRUE
TSE,2014,journals/tse/tse40,"Volume 40, Number 7, July 2014",SymbexNet: Testing Network Protocol Implementations with Symbolic Execution and Rule-Based Specifications.,JaeSeung Song; Cristian Cadar; Peter R. Pietzuch,695-709,15,https://doi.org/10.1109/TSE.2014.2323977,,,TRUE
TSE,2014,journals/tse/tse40,"Volume 40, Number 7, July 2014",Symbolic Crosschecking of Data-Parallel Floating-Point Code.,Peter Collingbourne; Cristian Cadar; Paul H. J. Kelly,710-737,28,https://doi.org/10.1109/TSE.2013.2297120,,,TRUE
TSE,2014,journals/tse/tse40,"Volume 40, Number 8, August 2014",An Empirical Analysis of Business Process Execution Language Usage.,Matej Hertis; Matjaz B. Juric,738-757,20,https://doi.org/10.1109/TSE.2014.2322618,,,TRUE
TSE,2014,journals/tse/tse40,"Volume 40, Number 8, August 2014",Managing Technical Debt in EnterpriseSoftware Packages.,Narayan Ramasubbu; Chris F. Kemerer,758-772,15,https://doi.org/10.1109/TSE.2014.2327027,,,TRUE
TSE,2014,journals/tse/tse40,"Volume 40, Number 8, August 2014",Predicting Consistency-Maintenance Requirement of Code Clonesat Copy-and-Paste Time.,Xiaoyin Wang; Yingnong Dang; Lu Zhang; Dongmei Zhang; Erica Lan; Hong Mei,773-794,22,https://doi.org/10.1109/TSE.2014.2323972,,,TRUE
TSE,2014,journals/tse/tse40,"Volume 40, Number 8, August 2014",Specification and Verification of NormativeTexts Using C-O Diagrams.,Gregorio Díaz; María-Emilia Cambronero; Enrique Martínez; Gerardo Schneider,795-817,23,https://doi.org/10.1109/TSE.2013.54,,,TRUE
TSE,2014,journals/tse/tse40,"Volume 40, Number 8, August 2014",Supporting Process Model Validation through Natural Language Generation.,Henrik Leopold; Jan Mendling; Artem Polyvyanyy,818-840,23,https://doi.org/10.1109/TSE.2014.2327044,,,TRUE
TSE,2014,journals/tse/tse40,"Volume 40, Number 9, September 2014",A Cooperative Parallel Search-Based Software Engineering Approach for Code-Smells Detection.,Wael Kessentini; Marouane Kessentini; Houari A. Sahraoui; Slim Bechikh; Ali Ouni,841-861,21,https://doi.org/10.1109/TSE.2014.2331057,,,TRUE
TSE,2014,journals/tse/tse40,"Volume 40, Number 9, September 2014","A General Testability Theory: Classes, Properties, Complexity, and Testing Reductions.",Ismael Rodríguez; Luis Llana; Pablo Rabanal,862-894,33,https://doi.org/10.1109/TSE.2014.2331690,,,TRUE
TSE,2014,journals/tse/tse40,"Volume 40, Number 9, September 2014",A Scalable Approach to Exact Model and Commonality Counting for Extended Feature Models.,David Fernández-Amorós; Ruben Heradio; José Antonio Cerrada; Carlos Cerrada,895-910,16,https://doi.org/10.1109/TSE.2014.2331073,,,TRUE
TSE,2014,journals/tse/tse40,"Volume 40, Number 9, September 2014",GreenDroid: Automated Diagnosis of Energy Inefficiency for Smartphone Applications.,Yepang Liu; Chang Xu; Shing-Chi Cheung; Jian Lu,911-940,30,https://doi.org/10.1109/TSE.2014.2323982,,,TRUE
TSE,2014,journals/tse/tse40,"Volume 40, Number 10, October 2014",NLP-KAOS for Systems Goal Elicitation: Smart Metering System Case Study.,Erik Casagrande; Selamawit Woldeamlak; Wei Lee Woon; Hatem H. Zeineldin; Davor Svetinovic,941-956,16,https://doi.org/10.1109/TSE.2014.2339811,,,TRUE
TSE,2014,journals/tse/tse40,"Volume 40, Number 10, October 2014","On the Accuracy, Efficiency, and Reusability of Automated Test Oracles for Android Devices.",Ying-Dar Lin; José F. Rojas; Edward T.-H. Chu; Yuan-Cheng Lai,957-970,14,https://doi.org/10.1109/TSE.2014.2331982,,,TRUE
TSE,2014,journals/tse/tse40,"Volume 40, Number 10, October 2014",On the Effectiveness of Contracts as Test Oracles in the Detection and Diagnosis of Functional Faults in Concurrent Object-Oriented Software.,Wladimir Araujo; Lionel C. Briand; Yvan Labiche,971-992,22,https://doi.org/10.1109/TSE.2014.2339829,,,TRUE
TSE,2014,journals/tse/tse40,"Volume 40, Number 10, October 2014",Predicting Vulnerable Software Components via Text Mining.,Riccardo Scandariato; James Walden; Aram Hovsepyan; Wouter Joosen,993-1006,14,https://doi.org/10.1109/TSE.2014.2340398,,,TRUE
TSE,2014,journals/tse/tse40,"Volume 40, Number 10, October 2014",Requirements Elicitation and Specification Using the Agent Paradigm: The Case Study of an Aircraft Turnaround Simulator.,Tim Miller; Bin Lu; Leon Sterling; Ghassan Beydoun; Kuldar Taveter,1007-1024,18,https://doi.org/10.1109/TSE.2014.2339827,,,TRUE
TSE,2014,journals/tse/tse40,"Volume 40, Number 10, October 2014",Supporting the Combined Selection of Model-Based Testing Techniques.,Arilo Claudio Dias-Neto; Guilherme Horta Travassos,1025-1041,17,https://doi.org/10.1109/TSE.2014.2312915,,,TRUE
TSE,2014,journals/tse/tse40,"Volume 40, Number 11, November 2014",A Component Model for Model Transformations.,Jesús Sánchez Cuadrado; Esther Guerra; Juan de Lara,1042-1060,19,https://doi.org/10.1109/TSE.2014.2339852,,,TRUE
TSE,2014,journals/tse/tse40,"Volume 40, Number 11, November 2014",Keeping the Development Environment Up to Date - A Study of the Situated Practices of Appropriating the Eclipse IDE.,Sebastian Draxler; Gunnar Stevens; Alexander Boden,1061-1074,14,https://doi.org/10.1109/TSE.2014.2354047,,,TRUE
TSE,2014,journals/tse/tse40,"Volume 40, Number 11, November 2014",Rate-Based Queueing Simulation Model of Open Source Software Debugging Activities.,Chu-Ti Lin; Yan-Fu Li,1075-1099,25,https://doi.org/10.1109/TSE.2014.2354032,,,TRUE
TSE,2014,journals/tse/tse40,"Volume 40, Number 11, November 2014",Test Code Quality and Its Relation to Issue Handling Performance.,Dimitrios Athanasiou; Ariadi Nugroho; Joost Visser; Andy Zaidman,1100-1125,26,https://doi.org/10.1109/TSE.2014.2342227,,,TRUE
TSE,2014,journals/tse/tse40,"Volume 40, Number 11, November 2014",Using Traceability Links to Recommend Adaptive Changes for Documentation Evolution.,Barthélémy Dagenais; Martin P. Robillard,1126-1146,21,https://doi.org/10.1109/TSE.2014.2347969,,,TRUE
TSE,2014,journals/tse/tse40,"Volume 40, Number 12, December 2014",An Empirical Methodology to Evaluate Vulnerability Discovery Models.,Fabio Massacci; Viet Hung Nguyen,1147-1162,16,https://doi.org/10.1109/TSE.2014.2354037,,,TRUE
TSE,2014,journals/tse/tse40,"Volume 40, Number 12, December 2014",Construction and Validation of an Instrument for Measuring Programming Skill.,Gunnar R. Bergersen; Dag I. K. Sjøberg; Tore Dybå,1163-1184,22,https://doi.org/10.1109/TSE.2014.2348997,,,TRUE
TSE,2014,journals/tse/tse40,"Volume 40, Number 12, December 2014",Input-Sensitive Profiling.,Emilio Coppa; Camil Demetrescu; Irene Finocchi,1185-1205,21,https://doi.org/10.1109/TSE.2014.2339825,,,TRUE
TSE,2014,journals/tse/tse40,"Volume 40, Number 12, December 2014",Making CEGAR More Efficient in Software Model Checking.,Cong Tian; Zhenhua Duan; Zhao Duan,1206-1223,18,https://doi.org/10.1109/TSE.2014.2357442,,,TRUE
TSE,2014,journals/tse/tse40,"Volume 40, Number 12, December 2014",Model-Transformation Design Patterns.,Kevin Lano; Shekoufeh Kolahdouz Rahimi,1224-1259,36,https://doi.org/10.1109/TSE.2014.2354344,,,TRUE
TSE,2015,journals/tse/tse41,"Volume 41, Number 1, January 2015",State of the Journal Editorial.,Matthew B. Dwyer,1-2,2,https://doi.org/10.1109/TSE.2014.2380479,,,FALSE
TSE,2015,journals/tse/tse41,"Volume 41, Number 1, January 2015",A Systematic Study on Explicit-State Non-Zenoness Checking for Timed Automata.,Ting Wang; Jun Sun; Xinyu Wang; Yang Liu; Yuanjie Si; Jin Song Dong; Xiaohu Yang; Xiaohong Li,3-18,16,https://doi.org/10.1109/TSE.2014.2359893,,,TRUE
TSE,2015,journals/tse/tse41,"Volume 41, Number 1, January 2015",Customizing the Representation Capabilities of Process Models: Understanding the Effects of Perceived Modeling Impediments.,Binny M. Samuel; Linwood Watkins; Andrew Ehle; Vijay Khatri,19-39,21,https://doi.org/10.1109/TSE.2014.2354043,,,TRUE
TSE,2015,journals/tse/tse41,"Volume 41, Number 1, January 2015",Investigating Country Differences in Mobile App User Behavior and Challenges for Software Engineering.,Soo Ling Lim; Peter J. Bentley; Natalie Kanakam; Fuyuki Ishikawa; Shinichi Honiden,40-64,25,https://doi.org/10.1109/TSE.2014.2360674,,,TRUE
TSE,2015,journals/tse/tse41,"Volume 41, Number 1, January 2015",The Design Space of Bug Fixes and How Developers Navigate It.,Emerson R. Murphy-Hill; Thomas Zimmermann; Christian Bird; Nachiappan Nagappan,65-81,17,https://doi.org/10.1109/TSE.2014.2357438,,,TRUE
TSE,2015,journals/tse/tse41,"Volume 41, Number 1, January 2015",Who Will Stay in the FLOSS Community? Modeling Participant's Initial Behavior.,Minghui Zhou; Audris Mockus,82-99,18,https://doi.org/10.1109/TSE.2014.2349496,issue_last_page,checked,TRUE
TSE,2015,journals/tse/tse41,"Volume 41, Number 2, February 2015",Exploiting Model Morphology for Event-Based Testing.,Fevzi Belli; Mutlu Beyazit,113-134,22,https://doi.org/10.1109/TSE.2014.2360690,issue_first_page,checked,TRUE
TSE,2015,journals/tse/tse41,"Volume 41, Number 2, February 2015",How Software Designers Interact with Sketches at the Whiteboard.,Nicolas Mangano; Thomas D. LaToza; Marian Petre; André van der Hoek,135-156,22,https://doi.org/10.1109/TSE.2014.2362924,,,TRUE
TSE,2015,journals/tse/tse41,"Volume 41, Number 2, February 2015",Quantitative Evaluation of Model-Driven Performance Analysis and Simulation of Component-Based Architectures.,Fabian Brosig; Philipp Meier; Steffen Becker; Anne Koziolek; Heiko Koziolek; Samuel Kounev,157-175,19,https://doi.org/10.1109/TSE.2014.2362755,,,TRUE
TSE,2015,journals/tse/tse41,"Volume 41, Number 2, February 2015",Replicating and Re-Evaluating the Theory of Relative Defect-Proneness.,Mark D. Syer; Meiyappan Nagappan; Bram Adams; Ahmed E. Hassan,176-197,22,https://doi.org/10.1109/TSE.2014.2361131,,,TRUE
TSE,2015,journals/tse/tse41,"Volume 41, Number 2, February 2015",STAR: Stack Trace Based Automatic Crash Reproduction via Symbolic Execution.,Ning Chen; Sunghun Kim,198-220,23,https://doi.org/10.1109/TSE.2014.2363469,,,TRUE
TSE,2015,journals/tse/tse41,"Volume 41, Number 3, March 2015",Automated Synthesis of Mediators to Support Component Interoperability.,Amel Bennaceur; Valérie Issarny,221-240,20,https://doi.org/10.1109/TSE.2014.2364844,,,TRUE
TSE,2015,journals/tse/tse41,"Volume 41, Number 3, March 2015","Embedding, Evolution, and Validation of Model-Driven Spreadsheets.",Jácome Cunha; João Paulo Fernandes; Jorge Mendes; João Saraiva,241-263,23,https://doi.org/10.1109/TSE.2014.2361141,,,TRUE
TSE,2015,journals/tse/tse41,"Volume 41, Number 3, March 2015",Estimating Computational Requirements in Multi-Threaded Applications.,Juan F. Pérez; Giuliano Casale; Sergio Pacheco-Sanchez,264-278,15,https://doi.org/10.1109/TSE.2014.2363472,,,TRUE
TSE,2015,journals/tse/tse41,"Volume 41, Number 3, March 2015",Generating Complete Controllable Test Suites for Distributed Testing.,Robert M. Hierons,279-293,15,https://doi.org/10.1109/TSE.2014.2364035,,,TRUE
TSE,2015,journals/tse/tse41,"Volume 41, Number 3, March 2015",Instance Generator and Problem Representation to Improve Object Oriented Code Coverage.,Abdelilah Sakti; Gilles Pesant; Yann-Gaël Guéhéneuc,294-313,20,https://doi.org/10.1109/TSE.2014.2363479,,,TRUE
TSE,2015,journals/tse/tse41,"Volume 41, Number 3, March 2015",The Impact of View Histories on Edit Recommendations.,Seonah Lee; Sungwon Kang; Sunghun Kim; Matthew Staats,314-330,17,https://doi.org/10.1109/TSE.2014.2362138,,,TRUE
TSE,2015,journals/tse/tse41,"Volume 41, Number 4, April 2015",Are Slice-Based Cohesion Metrics Actually Useful in Effort-Aware Post-Release Fault-Proneness Prediction? An Empirical Study.,Yibiao Yang; Yuming Zhou; Hongmin Lu; Lin Chen; Zhenyu Chen; Baowen Xu; Hareton K. N. Leung; Zhenyu Zhang,331-357,27,https://doi.org/10.1109/TSE.2014.2370048,,,TRUE
TSE,2015,journals/tse/tse41,"Volume 41, Number 4, April 2015",Improving Multi-Objective Test Case Selection by Injecting Diversity in Genetic Algorithms.,Annibale Panichella; Rocco Oliveto; Massimiliano Di Penta; Andrea De Lucia,358-383,26,https://doi.org/10.1109/TSE.2014.2364175,,,TRUE
TSE,2015,journals/tse/tse41,"Volume 41, Number 4, April 2015",The Impact of API Change- and Fault-Proneness on the User Ratings of Android Apps.,Gabriele Bavota; Mario Linares Vásquez; Carlos Eduardo Bernal-Cárdenas; Massimiliano Di Penta; Rocco Oliveto; Denys Poshyvanyk,384-407,24,https://doi.org/10.1109/TSE.2014.2367027,,,TRUE
TSE,2015,journals/tse/tse41,"Volume 41, Number 4, April 2015","Using Declarative Specification to Improve the Understanding, Extensibility, and Comparison of Model-Inference Algorithms.",Ivan Beschastnikh; Yuriy Brun; Jenny Abrahamson; Michael D. Ernst; Arvind Krishnamurthy,408-428,21,https://doi.org/10.1109/TSE.2014.2369047,,,TRUE
TSE,2015,journals/tse/tse41,"Volume 41, Number 5, May 2015",Guided Mutation Testing for JavaScript Web Applications.,Shabnam Mirshokraie; Ali Mesbah; Karthik Pattabiraman,429-444,16,https://doi.org/10.1109/TSE.2014.2371458,,,TRUE
TSE,2015,journals/tse/tse41,"Volume 41, Number 5, May 2015",Integer Parameter Synthesis for Real-Time Systems.,Aleksandra Jovanovic; Didier Lime; Olivier H. Roux,445-461,17,https://doi.org/10.1109/TSE.2014.2357445,,,TRUE
TSE,2015,journals/tse/tse41,"Volume 41, Number 5, May 2015",Mining Version Histories for Detecting Code Smells.,Fabio Palomba; Gabriele Bavota; Massimiliano Di Penta; Rocco Oliveto; Denys Poshyvanyk; Andrea De Lucia,462-489,28,https://doi.org/10.1109/TSE.2014.2372760,,,TRUE
TSE,2015,journals/tse/tse41,"Volume 41, Number 5, May 2015",Static Fault Localization in Model Transformations.,Loli Burgueño; Javier Troya; Manuel Wimmer; Antonio Vallecillo,490-506,17,https://doi.org/10.1109/TSE.2014.2375201,,,TRUE
TSE,2015,journals/tse/tse41,"Volume 41, Number 5, May 2015",The Oracle Problem in Software Testing: A Survey.,Earl T. Barr; Mark Harman; Phil McMinn; Muzammil Shahbaz; Shin Yoo,507-525,19,https://doi.org/10.1109/TSE.2014.2372785,,,TRUE
TSE,2015,journals/tse/tse41,"Volume 41, Number 6, June 2015",Automatic Detection and Resolution of Lexical Ambiguity in Process Models.,Fabian Pittke; Henrik Leopold; Jan Mendling,526-544,19,https://doi.org/10.1109/TSE.2015.2396895,,,TRUE
TSE,2015,journals/tse/tse41,"Volume 41, Number 6, June 2015",Evaluating Legal Implementation Readiness Decision-Making.,Aaron K. Massey; Paul N. Otto; Annie I. Antón,545-564,20,https://doi.org/10.1109/TSE.2014.2383374,,,TRUE
TSE,2015,journals/tse/tse41,"Volume 41, Number 6, June 2015",Extracting Development Tasks to Navigate Software Documentation.,Christoph Treude; Martin P. Robillard; Barthélémy Dagenais,565-581,17,https://doi.org/10.1109/TSE.2014.2387172,,,TRUE
TSE,2015,journals/tse/tse41,"Volume 41, Number 6, June 2015",Forecasting Java Software Evolution Trends Employing Network Models.,Theodore Chaikalis; Alexander Chatzigeorgiou,582-602,21,https://doi.org/10.1109/TSE.2014.2381249,,,TRUE
TSE,2015,journals/tse/tse41,"Volume 41, Number 6, June 2015",Range Fixes: Interactive Error Resolution for Software Configuration.,Yingfei Xiong; Hansheng Zhang; Arnaud Hubaux; Steven She; Jie Wang; Krzysztof Czarnecki,603-619,17,https://doi.org/10.1109/TSE.2014.2383381,,,TRUE
TSE,2015,journals/tse/tse41,"Volume 41, Number 7, July 2015","Aligning Qualitative, Real-Time, and Probabilistic Property Specification Patterns Using a Structured English Grammar.",Marco Autili; Lars Grunske; Markus Lumpe; Patrizio Pelliccione; Antony Tang,620-638,19,https://doi.org/10.1109/TSE.2015.2398877,,,TRUE
TSE,2015,journals/tse/tse41,"Volume 41, Number 7, July 2015",BLISS: Improved Symbolic Execution by Bounded Lazy Initialization with SAT Support.,Nicolás Rosner; Jaco Geldenhuys; Nazareno Aguirre; Willem Visser; Marcelo F. Frias,639-660,22,https://doi.org/10.1109/TSE.2015.2389225,,,TRUE
TSE,2015,journals/tse/tse41,"Volume 41, Number 7, July 2015",Extending the UML Statecharts Notation to Model Security Aspects.,Mohamed El-Attar; Hamza Luqman; Péter Kárpáti; Guttorm Sindre; Andreas L. Opdahl,661-690,30,https://doi.org/10.1109/TSE.2015.2396526,,,TRUE
TSE,2015,journals/tse/tse41,"Volume 41, Number 7, July 2015",Performance Analysis for Object-Oriented Software: A Systematic Mapping.,David Maplesden; Ewan D. Tempero; John G. Hosking; John C. Grundy,691-710,20,https://doi.org/10.1109/TSE.2015.2396514,,,TRUE
TSE,2015,journals/tse/tse41,"Volume 41, Number 7, July 2015",Safer User Interfaces: A Case Study in Improving Number Entry.,Harold Thimbleby,711-729,19,https://doi.org/10.1109/TSE.2014.2383396,,,TRUE
TSE,2015,journals/tse/tse41,"Volume 41, Number 8, August 2015",An I/O Efficient Approach for Detecting All Accepting Cycles.,Lijun Wu; Kaile Su; Shaowei Cai; Xiaosong Zhang; Chenyi Zhang; Shupeng Wang,730-744,15,https://doi.org/10.1109/TSE.2015.2411284,,,TRUE
TSE,2015,journals/tse/tse41,"Volume 41, Number 8, August 2015",Reducing Feedback Delay of Software Development Tools via Continuous Analysis.,Kivanç Muslu; Yuriy Brun; Michael D. Ernst; David Notkin,745-763,19,https://doi.org/10.1109/TSE.2015.2417161,,,TRUE
TSE,2015,journals/tse/tse41,"Volume 41, Number 8, August 2015",Self-Adapting Reliability in Distributed Software Systems.,Yuriy Brun; Jae Young Bang; George Edwards; Nenad Medvidovic,764-780,17,https://doi.org/10.1109/TSE.2015.2412134,,,TRUE
TSE,2015,journals/tse/tse41,"Volume 41, Number 8, August 2015",The Effect of GoF Design Patterns on Stability: A Case Study.,Apostolos Ampatzoglou; Alexander Chatzigeorgiou; Sofia Charalampidou; Paris Avgeriou,781-802,22,https://doi.org/10.1109/TSE.2015.2414917,,,TRUE
TSE,2015,journals/tse/tse41,"Volume 41, Number 8, August 2015",The Risks of Coverage-Directed Test Case Generation.,Gregory Gay; Matt Staats; Michael W. Whalen; Mats Per Erik Heimdahl,803-819,17,https://doi.org/10.1109/TSE.2015.2421011,,,TRUE
TSE,2015,journals/tse/tse41,"Volume 41, Number 8, August 2015",Where Do Configuration Constraints Stem From? An Extraction Approach and an Empirical Study.,Sarah Nadi; Thorsten Berger; Christian Kästner; Krzysztof Czarnecki,820-841,22,https://doi.org/10.1109/TSE.2015.2415793,,,TRUE
TSE,2015,journals/tse/tse41,"Volume 41, Number 9, September 2015",Cina: Suppressing the Detection of Unstable Context Inconsistency.,Chang Xu; Wang Xi; Shing-Chi Cheung; Xiaoxing Ma; Chun Cao; Jian Lu,842-865,24,https://doi.org/10.1109/TSE.2015.2418760,,,TRUE
TSE,2015,journals/tse/tse41,"Volume 41, Number 9, September 2015",COVERT: Compositional Analysis of Android Inter-App Permission Leakage.,Hamid Bagheri; Alireza Sadeghi; Joshua Garcia; Sam Malek,866-886,21,https://doi.org/10.1109/TSE.2015.2419611,,,TRUE
TSE,2015,journals/tse/tse41,"Volume 41, Number 9, September 2015",Identifying Renaming Opportunities by Expanding Conducted Rename Refactorings.,Hui Liu; Qiurong Liu; Yang Liu; Zhouding Wang,887-900,14,https://doi.org/10.1109/TSE.2015.2427831,,,TRUE
TSE,2015,journals/tse/tse41,"Volume 41, Number 9, September 2015",Practical Combinatorial Interaction Testing: Empirical Findings on Efficiency and Early Fault Detection.,Justyna Petke; Myra B. Cohen; Mark Harman; Shin Yoo,901-924,24,https://doi.org/10.1109/TSE.2015.2421279,,,TRUE
TSE,2015,journals/tse/tse41,"Volume 41, Number 9, September 2015",Program Characterization Using Runtime Values and Its Application to Software Plagiarism Detection.,Yoon-chan Jhi; Xiaoqi Jia; Xinran Wang; Sencun Zhu; Peng Liu; Dinghao Wu,925-943,19,https://doi.org/10.1109/TSE.2015.2418777,,,TRUE
TSE,2015,journals/tse/tse41,"Volume 41, Number 10, October 2015",Automated Checking of Conformance to Requirements Templates Using Natural Language Processing.,Chetan Arora; Mehrdad Sabetzadeh; Lionel C. Briand; Frank Zimmer,944-968,25,https://doi.org/10.1109/TSE.2015.2428709,,,TRUE
TSE,2015,journals/tse/tse41,"Volume 41, Number 10, October 2015",Facilitating Coordination between Software Developers: A Study and Techniques for Timely and Efficient Recommendations.,Kelly Blincoe; Giuseppe Valetto; Daniela E. Damian,969-985,17,https://doi.org/10.1109/TSE.2015.2431680,,,TRUE
TSE,2015,journals/tse/tse41,"Volume 41, Number 10, October 2015","First, Debug the Test Oracle.",Xinrui Guo; Min Zhou; Xiaoyu Song; Ming Gu; Jiaguang Sun,986-1000,15,https://doi.org/10.1109/TSE.2015.2425392,,,TRUE
TSE,2015,journals/tse/tse41,"Volume 41, Number 10, October 2015",GALE: Geometric Active Learning for Search-Based Software Engineering.,Joseph Krall; Tim Menzies; Misty Davies,1001-1018,18,https://doi.org/10.1109/TSE.2015.2432024,,,TRUE
TSE,2015,journals/tse/tse41,"Volume 41, Number 10, October 2015","Inferring Loop Invariants by Mutation, Dynamic Analysis, and Static Checking.",Juan P. Galeotti; Carlo A. Furia; Eva May; Gordon Fraser; Andreas Zeller,1019-1037,19,https://doi.org/10.1109/TSE.2015.2431688,,,TRUE
TSE,2015,journals/tse/tse41,"Volume 41, Number 11, November 2015",An Eye-Tracking Study of Java Programmers and Application to Source Code Summarization.,Paige Rodeghero; Cheng Liu; Paul W. McBurney; Collin McMillan,1038-1054,17,https://doi.org/10.1109/TSE.2015.2442238,,,TRUE
TSE,2015,journals/tse/tse41,"Volume 41, Number 11, November 2015",Assessing the Refactorability of Software Clones.,Nikolaos Tsantalis; Davood Mazinanian; Giri Panamoottil Krishnan,1055-1090,36,https://doi.org/10.1109/TSE.2015.2448531,,,TRUE
TSE,2015,journals/tse/tse41,"Volume 41, Number 11, November 2015",A Survey on Load Testing of Large-Scale Software Systems.,Zhen Ming Jiang; Ahmed E. Hassan,1091-1118,28,https://doi.org/10.1109/TSE.2015.2445340,,,TRUE
TSE,2015,journals/tse/tse41,"Volume 41, Number 11, November 2015",Automated Oracle Data Selection Support.,Gregory Gay; Matt Staats; Michael W. Whalen; Mats Per Erik Heimdahl,1119-1137,19,https://doi.org/10.1109/TSE.2015.2436920,,,TRUE
TSE,2015,journals/tse/tse41,"Volume 41, Number 11, November 2015",On the Composability of Design Patterns.,Hong Zhu; Ian Bayley,1138-1152,15,https://doi.org/10.1109/TSE.2015.2445341,,,TRUE
TSE,2015,journals/tse/tse41,"Volume 41, Number 12, December 2015",An Ontology-Based Product Architecture Derivation Approach.,Hector A. Duran-Limon; Carlos A. Garcia-Rios; Francisco Edgar Castillo-Barrera; Rafael Capilla,1153-1168,16,https://doi.org/10.1109/TSE.2015.2449854,,,TRUE
TSE,2015,journals/tse/tse41,"Volume 41, Number 12, December 2015",Exploring the Relationship between Software Process Adaptive Capability and Organisational Performance.,Paul Clarke; Rory V. O'Connor; Brian Leavy; Murat Yilmaz,1169-1183,15,https://doi.org/10.1109/TSE.2015.2467388,,,TRUE
TSE,2015,journals/tse/tse41,"Volume 41, Number 12, December 2015",Mining Workflow Models from Web Applications.,Matthias Schur; Andreas Roth; Andreas Zeller,1184-1201,18,https://doi.org/10.1109/TSE.2015.2461542,,,TRUE
TSE,2015,journals/tse/tse41,"Volume 41, Number 12, December 2015",Round-Up: Runtime Verification of Quasi Linearizability for Concurrent Data Structures.,Lu Zhang; Arijit Chattopadhyay; Chao Wang,1202-1216,15,https://doi.org/10.1109/TSE.2015.2467371,,,TRUE
TSE,2015,journals/tse/tse41,"Volume 41, Number 12, December 2015",Software Plagiarism Detection with Birthmarks Based on Dynamic Key Instruction Sequences.,Zhenzhou Tian; Qinghua Zheng; Ting Liu; Ming Fan; Eryue Zhuang; Zijiang Yang,1217-1235,19,https://doi.org/10.1109/TSE.2015.2454508,,,TRUE
TSE,2015,journals/tse/tse41,"Volume 41, Number 12, December 2015",The ManyBugs and IntroClass Benchmarks for Automated Repair of C Programs.,Claire Le Goues; Neal Holtschulte; Edward K. Smith; Yuriy Brun; Premkumar T. Devanbu; Stephanie Forrest; Westley Weimer,1236-1256,21,https://doi.org/10.1109/TSE.2015.2454513,,,TRUE
TSE,2016,journals/tse/tse42,"Volume 42, Number 1, January 2016",Editorial: Journal-First Publication for the Software Engineering Community.,Matthew B. Dwyer; David S. Rosenblum,1,1,https://doi.org/10.1109/TSE.2015.2500318,,,FALSE
TSE,2016,journals/tse/tse42,"Volume 42, Number 1, January 2016",A Tool-Supported Methodology for Validation and Refinement of Early-Stage Domain Models.,Marco Autili; Antonia Bertolino; Guglielmo De Angelis; Davide Di Ruscio; Alessio Di Sandro,2-25,24,https://doi.org/10.1109/TSE.2015.2449319,,,TRUE
TSE,2016,journals/tse/tse42,"Volume 42, Number 1, January 2016",Seer: A Lightweight Online Failure Prediction Approach.,Burcu Ozcelik; Cemal Yilmaz,26-46,21,https://doi.org/10.1109/TSE.2015.2442577,,,TRUE
TSE,2016,journals/tse/tse42,"Volume 42, Number 1, January 2016","Supporting Scope Tracking and Visualization for Very Large-Scale Requirements Engineering-Utilizing FSC+, Decision Patterns, and Atomic Decision Visualizations.",Krzysztof Wnuk; Tony Gorschek; David Callele; Even-André Karlsson; Eskil Ahlin; Björn Regnell,47-74,28,https://doi.org/10.1109/TSE.2015.2445347,,,TRUE
TSE,2016,journals/tse/tse42,"Volume 42, Number 1, January 2016",Supporting Self-Adaptation via Quantitative Verification and Sensitivity Analysis at Run Time.,Antonio Filieri; Giordano Tamburrelli; Carlo Ghezzi,75-99,25,https://doi.org/10.1109/TSE.2015.2421318,issue_last_page,checked,TRUE
TSE,2016,journals/tse/tse42,"Volume 42, Number 2, February 2016",Automatic Source Code Summarization of Context for Java Methods.,Paul W. McBurney; Collin McMillan,103-119,17,https://doi.org/10.1109/TSE.2015.2465386,issue_first_page,checked,TRUE
TSE,2016,journals/tse/tse42,"Volume 42, Number 2, February 2016",Crossover Designs in Software Engineering Experiments: Benefits and Perils.,Sira Vegas; Cecilia Apa; Natalia Juristo Juzgado,120-135,16,https://doi.org/10.1109/TSE.2015.2467378,,,TRUE
TSE,2016,journals/tse/tse42,"Volume 42, Number 2, February 2016",GoPrime: A Fully Decentralized Middleware for Utility-Aware Service Assembly.,Mauro Caporuscio; Vincenzo Grassi; Moreno Marzolla; Raffaela Mirandola,136-152,17,https://doi.org/10.1109/TSE.2015.2476797,,,TRUE
TSE,2016,journals/tse/tse42,"Volume 42, Number 2, February 2016",Probabilistic Model Checking of Regenerative Concurrent Systems.,Marco Paolieri; András Horváth; Enrico Vicario,153-169,17,https://doi.org/10.1109/TSE.2015.2468717,,,TRUE
TSE,2016,journals/tse/tse42,"Volume 42, Number 2, February 2016",SITAR: GUI Test Script Repair.,Zebao Gao; Zhenyu Chen; Yunxiao Zou; Atif M. Memon,170-186,17,https://doi.org/10.1109/TSE.2015.2454510,,,TRUE
TSE,2016,journals/tse/tse42,"Volume 42, Number 2, February 2016",Using Reduced Execution Flow Graph to Identify Library Functions in Binary Code.,Jing Qiu; Xiaohong Su; Peijun Ma,187-202,16,https://doi.org/10.1109/TSE.2015.2470241,,,TRUE
TSE,2016,journals/tse/tse42,"Volume 42, Number 3, March 2016",Connecting and Serving the Software Engineering Community.,Matthew B. Dwyer; Eric Bodden; Brian Fitzgerald; Miryung Kim; Sunghun Kim; Andrew J. Ko; Emilia Mendes; Raffaela Mirandola; Ana Moreira; Forrest Shull; Stephen F. Siegel; Tao Xie; Charles Zhang,203-205,3,https://doi.org/10.1109/TSE.2016.2532379,issue_last_page,fixed,FALSE
TSE,2016,journals/tse/tse42,"Volume 42, Number 3, March 2016","Detecting, Tracing, and Monitoring Architectural Tactics in Code.",Mehdi Mirakhorli; Jane Cleland-Huang,206-221,16,https://doi.org/10.1109/TSE.2015.2479217,issue_first_page;issue_last_page,fixed,TRUE
TSE,2016,journals/tse/tse42,"Volume 42, Number 3, March 2016",Evaluating the Effects of Architectural Documentation: A Case Study of a Large Scale Open Source Project.,Rick Kazman; Dennis Goldenson; Ira Monarch; William Nichols; Giuseppe Valetto,222-247,26,https://doi.org/10.1109/TSE.2015.2465387,issue_first_page;issue_last_page,fixed,TRUE
TSE,2016,journals/tse/tse42,"Volume 42, Number 3, March 2016",Impact of Introducing Domain-Specific Modelling in Software Maintenance: An Industrial Case Study.,Niklas Mellegård; Adry Ferwerda; Kenneth Lind; Rogardt Heldal; Michel R. V. Chaudron,248-263,16,https://doi.org/10.1109/TSE.2015.2479221,issue_first_page;issue_last_page,fixed,TRUE
TSE,2016,journals/tse/tse42,"Volume 42, Number 3, March 2016",Metamorphic Testing for Software Quality Assessment: A Study of Search Engines.,Zhiquan Zhou; Shaowen Xiang; Tsong Yueh Chen,264-284,21,https://doi.org/10.1109/TSE.2015.2478001,issue_first_page;issue_last_page,fixed,TRUE
TSE,2016,journals/tse/tse42,"Volume 42, Number 3, March 2016",Verifying Synchronization for Atomicity Violation Fixing.,Qingkai Shi; Jeff Huang; Zhenyu Chen; Baowen Xu,285-301,17,https://doi.org/10.1109/TSE.2015.2477820,issue_first_page;issue_last_page,fixed,TRUE
TSE,2016,journals/tse/tse42,"Volume 42, Number 4, April 2016",A Multi-Site Joint Replication of a Design Patterns Experiment Using Moderator Variables to Generalize across Contexts.,Jonathan L. Krein; Lutz Prechelt; Natalia Juristo; Aziz Nanthaamornphong; Jeffrey C. Carver; Sira Vegas; Charles D. Knutson; Kevin D. Seppi; Dennis L. Eggett,302-321,20,https://doi.org/10.1109/TSE.2015.2488625,issue_first_page,checked,TRUE
TSE,2016,journals/tse/tse42,"Volume 42, Number 4, April 2016",An Approach to Checking Consistency between UML Class Model and Its Java Implementation.,Hector Miguel Chavez; Wuwei Shen; Robert B. France; Benjamin A. Mechling; Guangyuan Li,322-344,23,https://doi.org/10.1109/TSE.2015.2488645,,,TRUE
TSE,2016,journals/tse/tse42,"Volume 42, Number 4, April 2016",A Probabilistic Analysis of the Efficiency of Automated Software Testing.,Marcel Böhme; Soumya Paul,345-360,16,https://doi.org/10.1109/TSE.2015.2487274,,,TRUE
TSE,2016,journals/tse/tse42,"Volume 42, Number 4, April 2016",Black-Box String Test Case Generation through a Multi-Objective Optimization.,Ali Shahbazi; James Miller,361-378,18,https://doi.org/10.1109/TSE.2015.2487958,,,TRUE
TSE,2016,journals/tse/tse42,"Volume 42, Number 4, April 2016","Mapping Bug Reports to Relevant Files: A Ranking Model, a Fine-Grained Benchmark, and Feature Evaluation.",Xin Ye; Razvan C. Bunescu; Chang Liu,379-402,24,https://doi.org/10.1109/TSE.2015.2479232,,,TRUE
TSE,2016,journals/tse/tse42,"Volume 42, Number 5, May 2016",Bidirectional Symbolic Analysis for Effective Branch Testing.,Mauro Baluda; Giovanni Denaro; Mauro Pezzè,403-426,24,https://doi.org/10.1109/TSE.2015.2490067,,,TRUE
TSE,2016,journals/tse/tse42,"Volume 42, Number 5, May 2016",Effect of Domain Knowledge on Elicitation Effectiveness: An Internally Replicated Controlled Experiment.,Alejandrina M. Aranda; Oscar Dieste; Natalia Juristo,427-451,25,https://doi.org/10.1109/TSE.2015.2494588,,,TRUE
TSE,2016,journals/tse/tse42,"Volume 42, Number 5, May 2016",RELAI Testing: A Technique to Assess and Improve Software Reliability.,Domenico Cotroneo; Roberto Pietrantuono; Stefano Russo,452-475,24,https://doi.org/10.1109/TSE.2015.2491931,,,TRUE
TSE,2016,journals/tse/tse42,"Volume 42, Number 5, May 2016",Targeted Scrum: Applying Mission Command to Agile Software Development.,David P. Harvie; Arvin Agah,476-489,14,https://doi.org/10.1109/TSE.2015.2489654,,,TRUE
TSE,2016,journals/tse/tse42,"Volume 42, Number 5, May 2016",To Be Optimal or Not in Test-Case Prioritization.,Dan Hao; Lu Zhang; Lei Zang; Yanbo Wang; Xingxia Wu; Tao Xie,490-504,14,https://doi.org/10.1109/TSE.2015.2496939,issue_last_page,fixed,TRUE
TSE,2016,journals/tse/tse42,"Volume 42, Number 6, June 2016","A Two-Component Language for Adaptation: Design, Semantics and Program Analysis.",Pierpaolo Degano; Gian Luigi Ferrari; Letterio Galletta,505-529,25,https://doi.org/10.1109/TSE.2015.2496941,issue_first_page,checked,TRUE
TSE,2016,journals/tse/tse42,"Volume 42, Number 6, June 2016",Automatically Recommending Peer Reviewers in Modern Code Review.,Motahareh Bahrami Zanjani; Huzefa H. Kagdi; Christian Bird,530-543,14,https://doi.org/10.1109/TSE.2015.2500238,,,TRUE
TSE,2016,journals/tse/tse42,"Volume 42, Number 6, June 2016",Dynamic and Automatic Feedback-Based Threshold Adaptation for Code Smell Detection.,Hui Liu; Qiurong Liu; Zhendong Niu; Yang Liu,544-558,15,https://doi.org/10.1109/TSE.2015.2503740,,,TRUE
TSE,2016,journals/tse/tse42,"Volume 42, Number 6, June 2016",Enforcing Exception Handling Policies with a Domain-Specific Language.,Eiji Adachi Barbosa; Alessandro F. Garcia; Martin P. Robillard; Benjamin Jakobus,559-584,26,https://doi.org/10.1109/TSE.2015.2506164,,,TRUE
TSE,2016,journals/tse/tse42,"Volume 42, Number 6, June 2016",Software Development in Startup Companies: The Greenfield Startup Model.,Carmine Giardino; Nicolò Paternoster; Michael Unterkalmsteiner; Tony Gorschek; Pekka Abrahamsson,585-604,20,https://doi.org/10.1109/TSE.2015.2509970,,,TRUE
TSE,2016,journals/tse/tse42,"Volume 42, Number 7, July 2016",A Game-Theoretic Foundation for the Maximum Software Resilience against Dense Errors.,Chung-Hao Huang; Doron A. Peled; Sven Schewe; Farn Wang,605-622,18,https://doi.org/10.1109/TSE.2015.2510001,,,TRUE
TSE,2016,journals/tse/tse42,"Volume 42, Number 7, July 2016",Asymptotic Perturbation Bounds for Probabilistic Model Checking with Empirically Determined Probability Parameters.,Guoxin Su; Yuan Feng; Taolue Chen; David S. Rosenblum,623-639,17,https://doi.org/10.1109/TSE.2015.2508444,,,TRUE
TSE,2016,journals/tse/tse42,"Volume 42, Number 7, July 2016",Designing Autonomic Management Systems by Using Reactive Control Techniques.,Nicolas Berthier; Éric Rutten; Noel De Palma; Soguy Mak Karé Gueye,640-657,18,https://doi.org/10.1109/TSE.2015.2510004,,,TRUE
TSE,2016,journals/tse/tse42,"Volume 42, Number 7, July 2016",Dynamic Software Project Scheduling through a Proactive-Rescheduling Method.,Xiao-Ning Shen; Leandro L. Minku; Rami Bahsoon; Xin Yao,658-686,29,https://doi.org/10.1109/TSE.2015.2512266,,,TRUE
TSE,2016,journals/tse/tse42,"Volume 42, Number 7, July 2016",Variability Analysis of Requirements: Considering Behavioral Differences and Reflecting Stakeholders' Perspectives.,Nili Itzik; Iris Reinhartz-Berger; Yair Wand,687-706,20,https://doi.org/10.1109/TSE.2015.2512599,,,TRUE
TSE,2016,journals/tse/tse42,"Volume 42, Number 8, August 2016",A Survey on Software Fault Localization.,W. Eric Wong; Ruizhi Gao; Yihao Li; Rui Abreu; Franz Wotawa,707-740,34,https://doi.org/10.1109/TSE.2016.2521368,,,TRUE
TSE,2016,journals/tse/tse42,"Volume 42, Number 8, August 2016",Model Checking Software with First Order Logic Specifications Using AIG Solvers.,Mohammad A. Noureddine; Fadi A. Zaraket,741-763,23,https://doi.org/10.1109/TSE.2016.2520468,,,TRUE
TSE,2016,journals/tse/tse42,"Volume 42, Number 8, August 2016",Parallel Performance Problems on Shared-Memory Multicore Systems: Taxonomy and Observation.,Roman Atachiants; Gavin J. Doherty; David Gregg,764-785,22,https://doi.org/10.1109/TSE.2016.2519346,,,TRUE
TSE,2016,journals/tse/tse42,"Volume 42, Number 8, August 2016",The Role of Ethnographic Studies in Empirical Software Engineering.,Helen Sharp; Yvonne Dittrich; Cleidson R. B. de Souza,786-804,19,https://doi.org/10.1109/TSE.2016.2519887,,,TRUE
TSE,2016,journals/tse/tse42,"Volume 42, Number 9, September 2016",A Survey on Metamorphic Testing.,Sergio Segura; Gordon Fraser; Ana B. Sánchez; Antonio Ruiz Cortés,805-824,20,https://doi.org/10.1109/TSE.2016.2532875,,,TRUE
TSE,2016,journals/tse/tse42,"Volume 42, Number 9, September 2016",Dynamic Testing for Deadlocks via Constraints.,Yan Cai; Qiong Lu,825-842,18,https://doi.org/10.1109/TSE.2016.2537335,,,TRUE
TSE,2016,journals/tse/tse42,"Volume 42, Number 9, September 2016",Probabilistic Interface Automata.,Esteban Pavese; Víctor A. Braberman; Sebastián Uchitel,843-865,23,https://doi.org/10.1109/TSE.2016.2527000,,,TRUE
TSE,2016,journals/tse/tse42,"Volume 42, Number 9, September 2016",Software Reliability Analysis Using Weakest Preconditions in Linear Assignment Programs.,Hang Luo; Xue Liu; Xi Chen; Ting Long; Ronghua Jiang,866-885,20,https://doi.org/10.1109/TSE.2016.2521379,,,TRUE
TSE,2016,journals/tse/tse42,"Volume 42, Number 9, September 2016",The Role of Method Chains and Comments in Software Readability and Comprehension - An Experiment.,Jürgen Börstler; Barbara Paech,886-898,13,https://doi.org/10.1109/TSE.2016.2527791,,,TRUE
TSE,2016,journals/tse/tse42,"Volume 42, Number 10, October 2016",A Lightweight System for Detecting and Tolerating Concurrency Bugs.,Mingxing Zhang; Yongwei Wu; Shan Lu; Shanxiang Qi; Jinglei Ren; Weimin Zheng,899-917,19,https://doi.org/10.1109/TSE.2016.2531666,,,TRUE
TSE,2016,journals/tse/tse42,"Volume 42, Number 10, October 2016",A Multi-Objective Technique to Prioritize Test Cases.,Alessandro Marchetto; Md. Mahfuzul Islam; M. Waseem Asghar; Angelo Susi; Giuseppe Scanniello,918-940,23,https://doi.org/10.1109/TSE.2015.2510633,,,TRUE
TSE,2016,journals/tse/tse42,"Volume 42, Number 10, October 2016",Coverage-Aware Test Database Reduction.,Javier Tuya; Claudio de la Riva; María José Suárez Cabal; Raquel Blanco,941-959,19,https://doi.org/10.1109/TSE.2016.2519032,,,TRUE
TSE,2016,journals/tse/tse42,"Volume 42, Number 10, October 2016",Exploring Mobile End User Development: Existing Use and Design Factors.,Abdallah Namoun; Athanasia Daskalopoulou; Nikolay Mehandjiev; Zhang Xun,960-976,17,https://doi.org/10.1109/TSE.2016.2532873,,,TRUE
TSE,2016,journals/tse/tse42,"Volume 42, Number 10, October 2016",HYDRA: Massively Compositional Model for Cross-Project Defect Prediction.,Xin Xia; David Lo; Sinno Jialin Pan; Nachiappan Nagappan; Xinyu Wang,977-998,22,https://doi.org/10.1109/TSE.2016.2543218,,,TRUE
TSE,2016,journals/tse/tse42,"Volume 42, Number 11, November 2016",Composite Constant Propagation and its Application to Android Program Analysis.,Damien Octeau; Daniel Luchaup; Somesh Jha; Patrick D. McDaniel,999-1014,16,https://doi.org/10.1109/TSE.2016.2550446,,,TRUE
TSE,2016,journals/tse/tse42,"Volume 42, Number 11, November 2016",Developer Micro Interaction Metrics for Software Defect Prediction.,Taek Lee; Jaechang Nam; DongGyun Han; Sunghun Kim; Hoh Peter In,1015-1035,21,https://doi.org/10.1109/TSE.2016.2550458,,,TRUE
TSE,2016,journals/tse/tse42,"Volume 42, Number 11, November 2016",Enhanced Code Conversion Approach for the Integrated Cross-Platform Mobile Development (ICPMD).,Wafaa S. El-Kassas; Bassem A. Abdullah; Ahmed H. Yousef; Ayman M. Wahba,1036-1053,18,https://doi.org/10.1109/TSE.2016.2543223,,,TRUE
TSE,2016,journals/tse/tse42,"Volume 42, Number 11, November 2016","Light-Weight, Inter-Procedural and Callback-Aware Resource Leak Detection for Android Apps.",Tianyong Wu; Jierui Liu; Zhenbo Xu; Chaorong Guo; Yanli Zhang; Jun Yan; Jian Zhang,1054-1076,23,https://doi.org/10.1109/TSE.2016.2547385,,,TRUE
TSE,2016,journals/tse/tse42,"Volume 42, Number 11, November 2016",Parallel Algorithms for Testing Finite State Machines: Generating UIO Sequences.,Robert M. Hierons; Uraz Cengiz Türker,1077-1091,15,https://doi.org/10.1109/TSE.2016.2539964,,,TRUE
TSE,2016,journals/tse/tse42,"Volume 42, Number 11, November 2016","Comments on ""Researcher Bias: The Use of Machine Learning in Software Defect Prediction"".",Chakkrit Tantithamthavorn; Shane McIntosh; Ahmed E. Hassan; Kenichi Matsumoto,1092-1094,3,https://doi.org/10.1109/TSE.2016.2553030,,,FALSE
TSE,2016,journals/tse/tse42,"Volume 42, Number 12, December 2016",An Industrial Survey of Safety Evidence Change Impact Analysis Practice.,Jose Luis de la Vara; Markus Borg; Krzysztof Wnuk; Leon Moonen,1095-1117,23,https://doi.org/10.1109/TSE.2016.2553032,,,TRUE
TSE,2016,journals/tse/tse42,"Volume 42, Number 12, December 2016",Engineering Adaptive Model-Driven User Interfaces.,Pierre A. Akiki; Arosha K. Bandara; Yijun Yu,1118-1147,30,https://doi.org/10.1109/TSE.2016.2553035,,,TRUE
TSE,2016,journals/tse/tse42,"Volume 42, Number 12, December 2016",Finding and Evaluating the Performance Impact of Redundant Data Access for Applications that are Developed Using Object-Relational Mapping Frameworks.,Tse-Hsun Chen; Weiyi Shang; Zhen Ming Jiang; Ahmed E. Hassan; Mohamed N. Nasser; Parminder Flora,1148-1161,14,https://doi.org/10.1109/TSE.2016.2553039,,,TRUE
TSE,2016,journals/tse/tse42,"Volume 42, Number 12, December 2016",Inner Source in Platform-Based Product Engineering.,Dirk Riehle; Maximilian Capraro; Detlef Kips; Lars Horn,1162-1177,16,https://doi.org/10.1109/TSE.2016.2554553,,,TRUE
TSE,2016,journals/tse/tse42,"Volume 42, Number 12, December 2016",Test Case Prioritization Using Lexicographical Ordering.,Sepehr Eghbali; Ladan Tahvildari,1178-1195,18,https://doi.org/10.1109/TSE.2016.2550441,,,TRUE
TSE,2017,journals/tse/tse43,"Volume 43, Number 1, January 2017",An Empirical Comparison of Model Validation Techniques for Defect Prediction Models.,Chakkrit Tantithamthavorn; Shane McIntosh; Ahmed E. Hassan; Kenichi Matsumoto,1-18,18,https://doi.org/10.1109/TSE.2016.2584050,,,TRUE
TSE,2017,journals/tse/tse43,"Volume 43, Number 1, January 2017",Interaction Models and Automated Control under Partial Observable Environments.,Daniel Ciolek; Víctor A. Braberman; Nicolás D'Ippolito; Nir Piterman; Sebastián Uchitel,19-33,15,https://doi.org/10.1109/TSE.2016.2564959,,,TRUE
TSE,2017,journals/tse/tse43,"Volume 43, Number 1, January 2017",Nopol: Automatic Repair of Conditional Statement Bugs in Java Programs.,Jifeng Xuan; Matias Martinez; Favio Demarco; Maxime Clement; Sebastian R. Lamelas Marcote; Thomas Durieux; Daniel Le Berre; Martin Monperrus,34-55,22,https://doi.org/10.1109/TSE.2016.2560811,,,TRUE
TSE,2017,journals/tse/tse43,"Volume 43, Number 1, January 2017",Process Aspects and Social Dynamics of Contemporary Code Review: Insights from Open Source Development and Industrial Practice at Microsoft.,Amiangshu Bosu; Jeffrey C. Carver; Christian Bird; Jonathan D. Orbeck; Christopher Chockley,56-75,20,https://doi.org/10.1109/TSE.2016.2576451,,,TRUE
TSE,2017,journals/tse/tse43,"Volume 43, Number 1, January 2017",Timed Automata Modeling and Verification for Publish-Subscribe Structures Using Distributed Resources.,Valentín Valero; Gregorio Díaz; María-Emilia Cambronero,76-99,24,https://doi.org/10.1109/TSE.2016.2560842,issue_last_page,checked,TRUE
TSE,2017,journals/tse/tse43,"Volume 43, Number 2, February 2017",ARENA: An Approach for the Automated Generation of Release Notes.,Laura Moreno; Gabriele Bavota; Massimiliano Di Penta; Rocco Oliveto; Andrian Marcus; Gerardo Canfora,106-127,22,https://doi.org/10.1109/TSE.2016.2591536,issue_first_page,checked,TRUE
TSE,2017,journals/tse/tse43,"Volume 43, Number 2, February 2017",A Study of Causes and Consequences of Client-Side JavaScript Bugs.,Frolin S. Ocariza Jr.; Kartik Bajaj; Karthik Pattabiraman; Ali Mesbah,128-144,17,https://doi.org/10.1109/TSE.2016.2586066,,,TRUE
TSE,2017,journals/tse/tse43,"Volume 43, Number 2, February 2017",Automated Synthesis and Dynamic Analysis of Tradeoff Spaces for Object-Relational Mapping.,Hamid Bagheri; Chong Tang; Kevin J. Sullivan,145-163,19,https://doi.org/10.1109/TSE.2016.2587646,,,TRUE
TSE,2017,journals/tse/tse43,"Volume 43, Number 2, February 2017",DECAF: A Platform-Neutral Whole-System Dynamic Binary Analysis Platform.,Andrew Henderson; Lok-Kwong Yan; Xunchao Hu; Aravind Prakash; Heng Yin; Stephen McCamant,164-184,21,https://doi.org/10.1109/TSE.2016.2589242,,,TRUE
TSE,2017,journals/tse/tse43,"Volume 43, Number 2, February 2017",How Social and Communication Channels Shape and Challenge a Participatory Culture in Software Development.,Margaret-Anne D. Storey; Alexey Zagalsky; Fernando Marques Figueira Filho; Leif Singer; Daniel M. Germán,185-204,20,https://doi.org/10.1109/TSE.2016.2584053,,,TRUE
TSE,2017,journals/tse/tse43,"Volume 43, Number 3, March 2017",Improving Timeliness and Visibility in Publishing Software Engineering Research.,Matthew B. Dwyer,205-206,2,https://doi.org/10.1109/TSE.2017.2663918,,,FALSE
TSE,2017,journals/tse/tse43,"Volume 43, Number 3, March 2017",Automating Live Update for Generic Server Programs.,Cristiano Giuffrida; Calin Iorgulescu; Giordano Tamburrelli; Andrew S. Tanenbaum,207-225,19,https://doi.org/10.1109/TSE.2016.2584066,,,TRUE
TSE,2017,journals/tse/tse43,"Volume 43, Number 3, March 2017",CACheck: Detecting and Repairing Cell Arrays in Spreadsheets.,Wensheng Dou; Chang Xu; S. C. Cheung; Jun Wei,226-251,26,https://doi.org/10.1109/TSE.2016.2584059,,,TRUE
TSE,2017,journals/tse/tse43,"Volume 43, Number 3, March 2017",Dependence Guided Symbolic Execution.,Haijun Wang; Ting Liu; Xiaohong Guan; Chao Shen; Qinghua Zheng; Zijiang Yang,252-271,20,https://doi.org/10.1109/TSE.2016.2584063,,,TRUE
TSE,2017,journals/tse/tse43,"Volume 43, Number 3, March 2017",Improving Automated Bug Triaging with Specialized Topic Model.,Xin Xia; David Lo; Ying Ding; Jafar M. Al-Kofahi; Tien N. Nguyen; Xinyu Wang,272-297,26,https://doi.org/10.1109/TSE.2016.2576454,,,TRUE
TSE,2017,journals/tse/tse43,"Volume 43, Number 4, April 2017",An Enhanced Bailout Protocol for Mixed Criticality Embedded Software.,Iain Bate; Alan Burns; Robert I. Davis,298-320,23,https://doi.org/10.1109/TSE.2016.2592907,,,TRUE
TSE,2017,journals/tse/tse43,"Volume 43, Number 4, April 2017",An Improved SDA Based Defect Prediction Framework for Both Within-Project and Cross-Project Class-Imbalance Problems.,Xiao-Yuan Jing; Fei Wu; Xiwei Dong; Baowen Xu,321-339,19,https://doi.org/10.1109/TSE.2016.2597849,,,TRUE
TSE,2017,journals/tse/tse43,"Volume 43, Number 4, April 2017",Efficient Dynamic Updates of Distributed Components Through Version Consistency.,Luciano Baresi; Carlo Ghezzi; Xiaoxing Ma; Valerio Panzica La Manna,340-358,19,https://doi.org/10.1109/TSE.2016.2592913,,,TRUE
TSE,2017,journals/tse/tse43,"Volume 43, Number 4, April 2017",Mining Sequences of Developer Interactions in Visual Studio for Usage Smells.,Kostadin Damevski; David C. Shepherd; Johannes Schneider; Lori L. Pollock,359-371,13,https://doi.org/10.1109/TSE.2016.2592905,,,TRUE
TSE,2017,journals/tse/tse43,"Volume 43, Number 4, April 2017",Test Oracle Strategies for Model-Based Testing.,Nan Li; Jeff Offutt,372-395,24,https://doi.org/10.1109/TSE.2016.2597136,,,TRUE
TSE,2017,journals/tse/tse43,"Volume 43, Number 5, May 2017",Approaches to Co-Evolution of Metamodels and Models: A Survey.,Regina Hebig; Djamel Eddine Khelladi; Reda Bendraou,396-414,19,https://doi.org/10.1109/TSE.2016.2610424,,,TRUE
TSE,2017,journals/tse/tse43,"Volume 43, Number 5, May 2017",A System for Profiling and Monitoring Database Access Patterns by Application Programs for Anomaly Detection.,Lorenzo Bossi; Elisa Bertino; Syed Rafiul Hussain,415-431,17,https://doi.org/10.1109/TSE.2016.2598336,,,TRUE
TSE,2017,journals/tse/tse43,"Volume 43, Number 5, May 2017",Model-Based Self-Aware Performance and Resource Management Using the Descartes Modeling Language.,Nikolaus Huber; Fabian Brosig; Simon Spinner; Samuel Kounev; Manuel Bähr,432-452,21,https://doi.org/10.1109/TSE.2016.2613863,,,TRUE
TSE,2017,journals/tse/tse43,"Volume 43, Number 5, May 2017",Self-Adaptive and Online QoS Modeling for Cloud-Based Software Services.,Tao Chen; Rami Bahsoon,453-475,23,https://doi.org/10.1109/TSE.2016.2608826,,,TRUE
TSE,2017,journals/tse/tse43,"Volume 43, Number 5, May 2017",The Use of Summation to Aggregate Software Metrics Hinders the Performance of Defect Prediction Models.,Feng Zhang; Ahmed E. Hassan; Shane McIntosh; Ying Zou,476-491,16,https://doi.org/10.1109/TSE.2016.2599161,,,TRUE
TSE,2017,journals/tse/tse43,"Volume 43, Number 6, June 2017",A Taxonomy and Qualitative Comparison of Program Analysis Techniques for Security Assessment of Android Software.,Alireza Sadeghi; Hamid Bagheri; Joshua Garcia; Sam Malek,492-530,39,https://doi.org/10.1109/TSE.2016.2615307,,,TRUE
TSE,2017,journals/tse/tse43,"Volume 43, Number 6, June 2017",Automated Steering of Model-Based Test Oracles to Admit Real Program Behaviors.,Gregory Gay; Sanjai Rayadurgam; Mats Per Erik Heimdahl,531-555,25,https://doi.org/10.1109/TSE.2016.2615311,,,TRUE
TSE,2017,journals/tse/tse43,"Volume 43, Number 6, June 2017",Online Reliability Prediction via Motifs-Based Dynamic Bayesian Networks for Service-Oriented Systems.,Hongbing Wang; Lei Wang; Qi Yu; Zibin Zheng; Athman Bouguettaya; Michael R. Lyu,556-579,24,https://doi.org/10.1109/TSE.2016.2615615,,,TRUE
TSE,2017,journals/tse/tse43,"Volume 43, Number 6, June 2017",The Value of Exact Analysis in Requirements Selection.,Lingbo Li; Mark Harman; Fan Wu; Yuanyuan Zhang,580-596,17,https://doi.org/10.1109/TSE.2016.2615100,,,TRUE
TSE,2017,journals/tse/tse43,"Volume 43, Number 7, July 2017",A Dissection of the Test-Driven Development Process: Does It Really Matter to Test-First or to Test-Last?,Davide Fucci; Hakan Erdogmus; Burak Turhan; Markku Oivo; Natalia Juristo,597-614,18,https://doi.org/10.1109/TSE.2016.2616877,,,TRUE
TSE,2017,journals/tse/tse43,"Volume 43, Number 7, July 2017",A Feature-Based Classification of Model Repair Approaches.,Nuno Macedo; Jorge Tiago; Alcino Cunha,615-640,26,https://doi.org/10.1109/TSE.2016.2620145,,,TRUE
TSE,2017,journals/tse/tse43,"Volume 43, Number 7, July 2017",A Framework for Evaluating the Results of the SZZ Approach for Identifying Bug-Introducing Changes.,Daniel Alencar da Costa; Shane McIntosh; Weiyi Shang; Uirá Kulesza; Roberta Coelho; Ahmed E. Hassan,641-657,17,https://doi.org/10.1109/TSE.2016.2616306,,,TRUE
TSE,2017,journals/tse/tse43,"Volume 43, Number 7, July 2017",Keyword Search for Building Service-Based Systems.,Qiang He; Rui Zhou; Xuyun Zhang; Yanchun Wang; Dayong Ye; Feifei Chen; John C. Grundy; Yun Yang,658-674,17,https://doi.org/10.1109/TSE.2016.2624293,,,TRUE
TSE,2017,journals/tse/tse43,"Volume 43, Number 7, July 2017",Supporting Change Impact Analysis Using a Recommendation System: An Industrial Case Study in a Safety-Critical Context.,Markus Borg; Krzysztof Wnuk; Björn Regnell; Per Runeson,675-700,26,https://doi.org/10.1109/TSE.2016.2620458,,,TRUE
TSE,2017,journals/tse/tse43,"Volume 43, Number 8, August 2017",Automatic Contract Insertion with CCBot.,Scott A. Carr; Francesco Logozzo; Mathias Payer,701-714,14,https://doi.org/10.1109/TSE.2016.2625248,,,TRUE
TSE,2017,journals/tse/tse43,"Volume 43, Number 8, August 2017",GK-Tail+ An Efficient Approach to Learn Software Models.,Leonardo Mariani; Mauro Pezzè; Mauro Santoro,715-738,24,https://doi.org/10.1109/TSE.2016.2623623,,,TRUE
TSE,2017,journals/tse/tse43,"Volume 43, Number 8, August 2017",Imprecise Matching of Requirements Specifications for Software Services Using Fuzzy Logic.,Marie Christin Platenius; Ammar Shaker; Matthias Becker; Eyke Hüllermeier; Wilhelm Schäfer,739-759,21,https://doi.org/10.1109/TSE.2016.2632115,,,TRUE
TSE,2017,journals/tse/tse43,"Volume 43, Number 8, August 2017",Locating Software Faults Based on Minimum Debugging Frontier Set.,Feng Li; Zhiyuan Li; Wei Huo; Xiaobing Feng,760-776,17,https://doi.org/10.1109/TSE.2016.2632122,,,TRUE
TSE,2017,journals/tse/tse43,"Volume 43, Number 8, August 2017",Preventing Defects: The Impact of Requirements Traceability Completeness on Software Quality.,Patrick Rempel; Patrick Mäder,777-797,21,https://doi.org/10.1109/TSE.2016.2622264,,,TRUE
TSE,2017,journals/tse/tse43,"Volume 43, Number 9, September 2017",A Qualitative Study of Application-Level Caching.,Jhonny Mertz; Ingrid Nunes,798-816,19,https://doi.org/10.1109/TSE.2016.2633992,,,TRUE
TSE,2017,journals/tse/tse43,"Volume 43, Number 9, September 2017",A Survey of App Store Analysis for Software Engineering.,William Martin; Federica Sarro; Yue Jia; Yuanyuan Zhang; Mark Harman,817-847,31,https://doi.org/10.1109/TSE.2016.2630689,,,TRUE
TSE,2017,journals/tse/tse43,"Volume 43, Number 9, September 2017",Reporting Usability Defects: A Systematic Literature Review.,Nor Shahida Mohamad Yusop; John Grundy; Rajesh Vasa,848-867,20,https://doi.org/10.1109/TSE.2016.2638427,,,TRUE
TSE,2017,journals/tse/tse43,"Volume 43, Number 9, September 2017",Static Analysis of Model Transformations.,Jesús Sánchez Cuadrado; Esther Guerra; Juan de Lara,868-897,30,https://doi.org/10.1109/TSE.2016.2635137,,,TRUE
TSE,2017,journals/tse/tse43,"Volume 43, Number 10, October 2017",Adaptive Multi-Objective Evolutionary Algorithms for Overtime Planning in Software Projects.,Federica Sarro; Filomena Ferrucci; Mark Harman; Alessandra Manna; Jian Ren,898-917,20,https://doi.org/10.1109/TSE.2017.2650914,,,TRUE
TSE,2017,journals/tse/tse43,"Volume 43, Number 10, October 2017",Automated Extraction and Clustering of Requirements Glossary Terms.,Chetan Arora; Mehrdad Sabetzadeh; Lionel C. Briand; Frank Zimmer,918-945,28,https://doi.org/10.1109/TSE.2016.2635134,,,TRUE
TSE,2017,journals/tse/tse43,"Volume 43, Number 10, October 2017",Deriving Bisimulation Relations from Path Extension Based Equivalence Checkers.,Kunal Banerjee; Dipankar Sarkar; Chittaranjan Mandal,946-953,8,https://doi.org/10.1109/TSE.2016.2645687,,,TRUE
TSE,2017,journals/tse/tse43,"Volume 43, Number 10, October 2017",Identifying Extract Method Refactoring Opportunities Based on Functional Relevance.,Sofia Charalampidou; Apostolos Ampatzoglou; Alexander Chatzigeorgiou; Antonios Gkortzis; Paris Avgeriou,954-974,21,https://doi.org/10.1109/TSE.2016.2645572,,,TRUE
TSE,2017,journals/tse/tse43,"Volume 43, Number 10, October 2017",Software Numerical Instability Detection and Diagnosis by Combining Stochastic and Infinite-Precision Testing.,Enyi Tang; Xiangyu Zhang; Norbert Th. Müller; Zhenyu Chen; Xuandong Li,975-994,20,https://doi.org/10.1109/TSE.2016.2642956,,,TRUE
TSE,2017,journals/tse/tse43,"Volume 43, Number 11, November 2017",Language Inclusion Checking of Timed Automata with Non-Zenoness.,Xinyu Wang; Jun Sun; Ting Wang; Shengchao Qin,995-1008,14,https://doi.org/10.1109/TSE.2017.2653778,,,TRUE
TSE,2017,journals/tse/tse43,"Volume 43, Number 11, November 2017",Model Transformation Modularization as a Many-Objective Optimization Problem.,Martin Fleck; Javier Troya; Marouane Kessentini; Manuel Wimmer; Bader Alkhazi,1009-1032,24,https://doi.org/10.1109/TSE.2017.2654255,,,TRUE
TSE,2017,journals/tse/tse43,"Volume 43, Number 11, November 2017",Testing from Partial Finite State Machines without Harmonised Traces.,Robert M. Hierons,1033-1043,11,https://doi.org/10.1109/TSE.2017.2652457,,,TRUE
TSE,2017,journals/tse/tse43,"Volume 43, Number 11, November 2017",Using Natural Language Processing to Automatically Detect Self-Admitted Technical Debt.,Everton da S. Maldonado; Emad Shihab; Nikolaos Tsantalis,1044-1062,19,https://doi.org/10.1109/TSE.2017.2654244,,,TRUE
TSE,2017,journals/tse/tse43,"Volume 43, Number 11, November 2017",When and Why Your Code Starts to Smell Bad (and Whether the Smells Go Away).,Michele Tufano; Fabio Palomba; Gabriele Bavota; Rocco Oliveto; Massimiliano Di Penta; Andrea De Lucia; Denys Poshyvanyk,1063-1088,26,https://doi.org/10.1109/TSE.2017.2653105,,,TRUE
TSE,2017,journals/tse/tse43,"Volume 43, Number 11, November 2017",Clarifications on the Construction and Use of the ManyBugs Benchmark.,Claire Le Goues; Yuriy Brun; Stephanie Forrest; Westley Weimer,1089-1090,2,https://doi.org/10.1109/TSE.2017.2755651,,,FALSE
TSE,2017,journals/tse/tse43,"Volume 43, Number 11, November 2017","Comments on ScottKnottESD in Response to ""An Empirical Comparison of Model Validation Techniques for Defect Prediction Models"".",Steffen Herbold,1091-1094,4,https://doi.org/10.1109/TSE.2017.2748129,,,FALSE
TSE,2017,journals/tse/tse43,"Volume 43, Number 12, December 2017",Autofolding for Source Code Summarization.,Jaroslav M. Fowkes; Pankajan Chanthirasegaran; Razvan Ranca; Miltiadis Allamanis; Mirella Lapata; Charles A. Sutton,1095-1109,15,https://doi.org/10.1109/TSE.2017.2664836,,,TRUE
TSE,2017,journals/tse/tse43,"Volume 43, Number 12, December 2017",AutoSense: A Framework for Automated Sensitivity Analysis of Program Data.,Bernard Nongpoh; Rajarshi Ray; Saikat Dutta; Ansuman Banerjee,1110-1124,15,https://doi.org/10.1109/TSE.2017.2654251,,,TRUE
TSE,2017,journals/tse/tse43,"Volume 43, Number 12, December 2017",On the Positive Effect of Reactive Programming on Software Comprehension: An Empirical Study.,Guido Salvaneschi; Sebastian Proksch; Sven Amann; Sarah Nadi; Mira Mezini,1125-1143,19,https://doi.org/10.1109/TSE.2017.2655524,,,TRUE
TSE,2017,journals/tse/tse43,"Volume 43, Number 12, December 2017",Reasoning About Identifier Spaces: How to Make Chord Correct.,Pamela Zave,1144-1156,13,https://doi.org/10.1109/TSE.2017.2655056,,,TRUE
TSE,2017,journals/tse/tse43,"Volume 43, Number 12, December 2017",Semantics-Based Obfuscation-Resilient Binary Code Similarity Comparison with Applications to Software and Algorithm Plagiarism Detection.,Lannan Luo; Jiang Ming; Dinghao Wu; Peng Liu; Sencun Zhu,1157-1177,21,https://doi.org/10.1109/TSE.2017.2655046,,,TRUE
TSE,2017,journals/tse/tse43,"Volume 43, Number 12, December 2017","The Work Life of Developers: Activities, Switches and Perceived Productivity.",André N. Meyer; Laura E. Barton; Gail C. Murphy; Thomas Zimmermann; Thomas Fritz,1178-1193,16,https://doi.org/10.1109/TSE.2017.2656886,,,TRUE
TSE,2018,journals/tse/tse44,"Volume 44, Number 1, January 2018",State of the Journal.,Matthew B. Dwyer,1-2,2,https://doi.org/10.1109/TSE.2017.2778898,,,FALSE
TSE,2018,journals/tse/tse44,"Volume 44, Number 1, January 2018",Editorial from the New Editor in Chief.,Nenad Medvidovic,3-4,2,https://doi.org/10.1109/TSE.2017.2778899,,,FALSE
TSE,2018,journals/tse/tse44,"Volume 44, Number 1, January 2018",A Developer Centered Bug Prediction Model.,Dario Di Nucci; Fabio Palomba; Giuseppe De Rosa; Gabriele Bavota; Rocco Oliveto; Andrea De Lucia,5-24,20,https://doi.org/10.1109/TSE.2017.2659747,,,TRUE
TSE,2018,journals/tse/tse44,"Volume 44, Number 1, January 2018",Eliminating Path Redundancy via Postconditioned Symbolic Execution.,Qiuping Yi; Zijiang Yang; Shengjian Guo; Chao Wang; Jian Liu; Chen Zhao,25-43,19,https://doi.org/10.1109/TSE.2017.2659751,,,TRUE
TSE,2018,journals/tse/tse44,"Volume 44, Number 1, January 2018",Empirical Evaluation of the Impact of Object-Oriented Code Refactoring on Quality Attributes: A Systematic Literature Review.,Jehad Al Dallal; Anas Abdin,44-69,26,https://doi.org/10.1109/TSE.2017.2658573,,,TRUE
TSE,2018,journals/tse/tse44,"Volume 44, Number 1, January 2018",Test Case Generation for Boolean Expressions by Cell Covering.,Lian Yu; Wei-Tek Tsai,70-99,30,https://doi.org/10.1109/TSE.2017.2669184,issue_last_page,checked,TRUE
TSE,2018,journals/tse/tse44,"Volume 44, Number 2, February 2018",A Templating System to Generate Provenance.,Luc Moreau; Belfrit V. Batlajery; Trung Dong Huynh; Danius T. Michaelides; Heather S. Packer,103-121,19,https://doi.org/10.1109/TSE.2017.2659745,issue_first_page,checked,TRUE
TSE,2018,journals/tse/tse44,"Volume 44, Number 2, February 2018",Automated Test Case Generation as a Many-Objective Optimisation Problem with Dynamic Selection of the Targets.,Annibale Panichella; Fitsum Meshesha Kifetew; Paolo Tonella,122-158,37,https://doi.org/10.1109/TSE.2017.2663435,,,TRUE
TSE,2018,journals/tse/tse44,"Volume 44, Number 2, February 2018",Measuring the Impact of Code Dependencies on Software Architecture Recovery Techniques.,Thibaud Lutellier; Devin Chollak; Joshua Garcia; Lin Tan; Derek Rayside; Nenad Medvidovic; Robert Kroeger,159-181,23,https://doi.org/10.1109/TSE.2017.2671865,,,TRUE
TSE,2018,journals/tse/tse44,"Volume 44, Number 2, February 2018",Semantic Slicing of Software Version Histories.,Yi Li; Chenguang Zhu; Julia Rubin; Marsha Chechik,182-201,20,https://doi.org/10.1109/TSE.2017.2664824,,,TRUE
TSE,2018,journals/tse/tse44,"Volume 44, Number 3, March 2018",Automatic Software Refactoring via Weighted Clustering in Method-Level Networks.,Ying Wang; Hai Yu; Zhiliang Zhu; Wei Zhang; Yuli Zhao,202-236,35,https://doi.org/10.1109/TSE.2017.2679752,,,TRUE
TSE,2018,journals/tse/tse44,"Volume 44, Number 3, March 2018","Choosing Component Origins for Software Intensive Systems: In-House, COTS, OSS or Outsourcing? - A Case Survey.",Kai Petersen; Deepika Badampudi; Syed Muhammad Ali Shah; Krzysztof Wnuk; Tony Gorschek; Efi Papatheocharous; Jakob Axelsson; Séverine Sentilles; Ivica Crnkovic; Antonio Cicchetti,237-261,25,https://doi.org/10.1109/TSE.2017.2677909,,,TRUE
TSE,2018,journals/tse/tse44,"Volume 44, Number 3, March 2018",Complete and Interpretable Conformance Checking of Business Processes.,Luciano García-Bañuelos; Nick van Beest; Marlon Dumas; Marcello La Rosa; Willem Mertens,262-290,29,https://doi.org/10.1109/TSE.2017.2668418,,,TRUE
TSE,2018,journals/tse/tse44,"Volume 44, Number 3, March 2018",Formulating Criticality-Based Cost-Effective Fault Tolerance Strategies for Multi-Tenant Service-Based Systems.,Yanchun Wang; Qiang He; Dayong Ye; Yun Yang,291-307,17,https://doi.org/10.1109/TSE.2017.2681667,,,TRUE
TSE,2018,journals/tse/tse44,"Volume 44, Number 4, April 2018",Detecting Trivial Mutant Equivalences via Compiler Optimisations.,Marinos Kintis; Mike Papadakis; Yue Jia; Nicos Malevris; Yves Le Traon; Mark Harman,308-333,26,https://doi.org/10.1109/TSE.2017.2684805,,,TRUE
TSE,2018,journals/tse/tse44,"Volume 44, Number 4, April 2018",Hybrid Program Dependence Approximation for Effective Dynamic Impact Prediction.,Haipeng Cai,334-364,31,https://doi.org/10.1109/TSE.2017.2692783,,,TRUE
TSE,2018,journals/tse/tse44,"Volume 44, Number 4, April 2018",Refactoring Inspection Support for Manual Refactoring Edits.,Everton L. G. Alves; Myoungkyu Song; Tiago Massoni; Patrícia Duarte de Lima Machado; Miryung Kim,365-383,19,https://doi.org/10.1109/TSE.2017.2679742,,,TRUE
TSE,2018,journals/tse/tse44,"Volume 44, Number 4, April 2018",Understanding Diverse Usage Patterns from Large-Scale Appstore-Service Profiles.,Xuanzhe Liu; Huoran Li; Xuan Lu; Tao Xie; Qiaozhu Mei; Feng Feng; Hong Mei,384-411,28,https://doi.org/10.1109/TSE.2017.2685387,,,TRUE
TSE,2018,journals/tse/tse44,"Volume 44, Number 5, May 2018",Are Fix-Inducing Changes a Moving Target? A Longitudinal Case Study of Just-In-Time Defect Prediction.,Shane McIntosh; Yasutaka Kamei,412-428,17,https://doi.org/10.1109/TSE.2017.2693980,,,TRUE
TSE,2018,journals/tse/tse44,"Volume 44, Number 5, May 2018",Detecting Overly Strong Preconditions in Refactoring Engines.,Melina Mongiovi; Rohit Gheyi; Gustavo Soares; Márcio Ribeiro; Paulo Borba; Leopoldo Teixeira,429-452,24,https://doi.org/10.1109/TSE.2017.2693982,,,TRUE
TSE,2018,journals/tse/tse44,"Volume 44, Number 5, May 2018",Discipline Matters: Refactoring of Preprocessor Directives in the #ifdef Hell.,Flávio Medeiros; Márcio Ribeiro; Rohit Gheyi; Sven Apel; Christian Kästner; Bruno Ferreira; Luiz Carvalho; Baldoino Fonseca,453-469,17,https://doi.org/10.1109/TSE.2017.2688333,,,TRUE
TSE,2018,journals/tse/tse44,"Volume 44, Number 5, May 2018",EnergyPatch: Repairing Resource Leaks to Improve Energy-Efficiency of Android Apps.,Abhijeet Banerjee; Lee Kee Chong; Clément Ballabriga; Abhik Roychoudhury,470-490,21,https://doi.org/10.1109/TSE.2017.2689012,,,TRUE
TSE,2018,journals/tse/tse44,"Volume 44, Number 5, May 2018",Reviving Sequential Program Birthmarking for Multithreaded Software Plagiarism Detection.,Zhenzhou Tian; Ting Liu; Qinghua Zheng; Eryue Zhuang; Ming Fan; Zijiang Yang,491-511,21,https://doi.org/10.1109/TSE.2017.2688383,,,TRUE
TSE,2018,journals/tse/tse44,"Volume 44, Number 6, June 2018",A PVS-Simulink Integrated Environment for Model-Based Analysis of Cyber-Physical Systems.,Cinzia Bernardeschi; Andrea Domenici; Paolo Masci,512-533,22,https://doi.org/10.1109/TSE.2017.2694423,,,TRUE
TSE,2018,journals/tse/tse44,"Volume 44, Number 6, June 2018",MAHAKIL: Diversity Based Oversampling Approach to Alleviate the Class Imbalance Issue in Software Defect Prediction.,Kwabena Ebo Bennin; Jacky Keung; Passakorn Phannachitta; Akito Monden; Solomon Mensah,534-550,17,https://doi.org/10.1109/TSE.2017.2731766,,,TRUE
TSE,2018,journals/tse/tse44,"Volume 44, Number 6, June 2018",Predicting Delivery Capability in Iterative Software Development.,Morakot Choetkiertikul; Hoa Khanh Dam; Truyen Tran; Aditya Ghose; John Grundy,551-573,23,https://doi.org/10.1109/TSE.2017.2693989,,,TRUE
TSE,2018,journals/tse/tse44,"Volume 44, Number 6, June 2018",Specialising Software for Different Downstream Applications Using Genetic Improvement and Code Transplantation.,Justyna Petke; Mark Harman; William B. Langdon; Westley Weimer,574-594,21,https://doi.org/10.1109/TSE.2017.2702606,,,TRUE
TSE,2018,journals/tse/tse44,"Volume 44, Number 6, June 2018",Towards Model Checking Android Applications.,Guangdong Bai; Quanqi Ye; Yongzheng Wu; Heila Botha; Jun Sun; Yang Liu; Jin Song Dong; Willem Visser,595-612,18,https://doi.org/10.1109/TSE.2017.2697848,,,TRUE
TSE,2018,journals/tse/tse44,"Volume 44, Number 7, July 2018",Effectively Incorporating Expert Knowledge in Automated Software Remodularisation.,Mathew Hall; Neil Walkinshaw; Phil McMinn,613-630,18,https://doi.org/10.1109/TSE.2017.2786222,,,TRUE
TSE,2018,journals/tse/tse44,"Volume 44, Number 7, July 2018",Implementing and Evaluating Candidate-Based Invariant Generation.,Adam Betts; Nathan Chong; Pantazis Deligiannis; Alastair F. Donaldson; Jeroen Ketema,631-650,20,https://doi.org/10.1109/TSE.2017.2718516,,,TRUE
TSE,2018,journals/tse/tse44,"Volume 44, Number 7, July 2018",Mining Semantic Loop Idioms.,Miltiadis Allamanis; Earl T. Barr; Christian Bird; Premkumar T. Devanbu; Mark Marron; Charles A. Sutton,651-668,18,https://doi.org/10.1109/TSE.2018.2832048,,,TRUE
TSE,2018,journals/tse/tse44,"Volume 44, Number 7, July 2018",On Accelerating Source Code Analysis at Massive Scale.,Ganesha Upadhyaya; Hridesh Rajan,669-688,20,https://doi.org/10.1109/TSE.2018.2828848,,,TRUE
TSE,2018,journals/tse/tse44,"Volume 44, Number 7, July 2018",On the Semantics of Distributed Reactive Programming: The Cost of Consistency.,Alessandro Margara; Guido Salvaneschi,689-711,23,https://doi.org/10.1109/TSE.2018.2833109,,,TRUE
TSE,2018,journals/tse/tse44,"Volume 44, Number 8, August 2018",A Comparison of Program Comprehension Strategies by Blind and Sighted Programmers.,Ameer Armaly; Paige Rodeghero; Collin McMillan,712-724,13,https://doi.org/10.1109/TSE.2017.2729548,,,TRUE
TSE,2018,journals/tse/tse44,"Volume 44, Number 8, August 2018",A Formal Specification and Verification Framework for Timed Security Protocols.,Li Li; Jun Sun; Yang Liu; Meng Sun; Jin Song Dong,725-746,22,https://doi.org/10.1109/TSE.2017.2712621,,,TRUE
TSE,2018,journals/tse/tse44,"Volume 44, Number 8, August 2018",A Survey of Recent Trends in Testing Concurrent Software Systems.,Francesco Adalberto Bianchi; Alessandro Margara; Mauro Pezzè,747-783,37,https://doi.org/10.1109/TSE.2017.2707089,,,TRUE
TSE,2018,journals/tse/tse44,"Volume 44, Number 8, August 2018",Control-Theoretical Software Adaptation: A Systematic Literature Review.,Stepan Shevtsov; Mihaly Berekmeri; Danny Weyns; Martina Maggio,784-810,27,https://doi.org/10.1109/TSE.2017.2704579,,,TRUE
TSE,2018,journals/tse/tse44,"Volume 44, Number 9, September 2018",A Comparative Study to Benchmark Cross-Project Defect Prediction Approaches.,Steffen Herbold; Alexander Trautsch; Jens Grabowski,811-833,23,https://doi.org/10.1109/TSE.2017.2724538,,,TRUE
TSE,2018,journals/tse/tse44,"Volume 44, Number 9, September 2018",Enhancing the Description-to-Behavior Fidelity in Android Apps with Privacy Policy.,Le Yu; Xiapu Luo; Chenxiong Qian; Shuai Wang; Hareton K. N. Leung,834-854,21,https://doi.org/10.1109/TSE.2017.2730198,,,TRUE
TSE,2018,journals/tse/tse44,"Volume 44, Number 9, September 2018",Global-Aware Recommendations for Repairing Violations in Exception Handling.,Eiji Adachi Barbosa; Alessandro Garcia,855-873,19,https://doi.org/10.1109/TSE.2017.2716925,,,TRUE
TSE,2018,journals/tse/tse44,"Volume 44, Number 9, September 2018",Heterogeneous Defect Prediction.,Jaechang Nam; Wei Fu; Sunghun Kim; Tim Menzies; Lin Tan,874-896,23,https://doi.org/10.1109/TSE.2017.2720603,,,TRUE
TSE,2018,journals/tse/tse44,"Volume 44, Number 9, September 2018",Towards Prioritizing Documentation Effort.,Paul W. McBurney; Siyuan Jiang; Marouane Kessentini; Nicholas A. Kraft; Ameer Armaly; Mohamed Wiem Mkaouer; Collin McMillan,897-913,17,https://doi.org/10.1109/TSE.2017.2716950,,,TRUE
TSE,2018,journals/tse/tse44,"Volume 44, Number 10, October 2018",A Theoretical and Empirical Study of Diversity-Aware Mutation Adequacy Criterion.,Donghwan Shin; Shin Yoo; Doo-Hwan Bae,914-931,18,https://doi.org/10.1109/TSE.2017.2732347,,,TRUE
TSE,2018,journals/tse/tse44,"Volume 44, Number 10, October 2018",Coordination Challenges in Large-Scale Software Development: A Case Study of Planning Misalignment in Hybrid Settings.,Saskia Bick; Kai Spohrer; Rashina Hoda; Alexander Scheerer; Armin Heinzl,932-950,19,https://doi.org/10.1109/TSE.2017.2730870,,,TRUE
TSE,2018,journals/tse/tse44,"Volume 44, Number 10, October 2018",Measuring Program Comprehension: A Large-Scale Field Study with Professionals.,Xin Xia; Lingfeng Bao; David Lo; Zhenchang Xing; Ahmed E. Hassan; Shanping Li,951-976,26,https://doi.org/10.1109/TSE.2017.2734091,,,TRUE
TSE,2018,journals/tse/tse44,"Volume 44, Number 10, October 2018",The Scent of a Smell: An Extensive Comparison Between Textual and Structural Smells.,Fabio Palomba; Annibale Panichella; Andy Zaidman; Rocco Oliveto; Andrea De Lucia,977-1000,24,https://doi.org/10.1109/TSE.2017.2752171,,,TRUE
TSE,2018,journals/tse/tse44,"Volume 44, Number 10, October 2018",Two-Phase Assessment Approach to Improve the Efficiency of Refactoring Identification.,Ah-Rim Han; Sung Deok Cha,1001-1023,23,https://doi.org/10.1109/TSE.2017.2731853,,,TRUE
TSE,2018,journals/tse/tse44,"Volume 44, Number 11, November 2018",Data Scientists in Software Teams: State of the Art and Challenges.,Miryung Kim; Thomas Zimmermann; Robert DeLine; Andrew Begel,1024-1038,15,https://doi.org/10.1109/TSE.2017.2754374,,,TRUE
TSE,2018,journals/tse/tse44,"Volume 44, Number 11, November 2018",Engineering Trustworthy Self-Adaptive Software with Dynamic Assurance Cases.,Radu Calinescu; Danny Weyns; Simos Gerasimou; Muhammad Usman Iftikhar; Ibrahim Habli; Tim Kelly,1039-1069,31,https://doi.org/10.1109/TSE.2017.2738640,,,TRUE
TSE,2018,journals/tse/tse44,"Volume 44, Number 11, November 2018",Expanding Queries for Code Search Using Semantically Related API Class-names.,Feng Zhang; Haoran Niu; Iman Keivanloo; Ying Zou,1070-1082,13,https://doi.org/10.1109/TSE.2017.2750682,,,TRUE
TSE,2018,journals/tse/tse44,"Volume 44, Number 11, November 2018",Metamorphic Testing of RESTful Web APIs.,Sergio Segura; José Antonio Parejo; Javier Troya; Antonio Ruiz Cortés,1083-1099,17,https://doi.org/10.1109/TSE.2017.2764464,,,TRUE
TSE,2018,journals/tse/tse44,"Volume 44, Number 11, November 2018",Predicting Future Developer Behavior in the IDE Using Topic Models.,Kostadin Damevski; Hui Chen; David C. Shepherd; Nicholas A. Kraft; Lori L. Pollock,1100-1111,12,https://doi.org/10.1109/TSE.2017.2748134,,,TRUE
TSE,2018,journals/tse/tse44,"Volume 44, Number 11, November 2018",Using Local Clocks to Reproduce Concurrency Bugs.,Zhe Wang; Chenggang Wu; Xiang Yuan; Zhenjiang Wang; Jianjun Li; Pen-Chung Yew; Jeff Huang; Xiaobing Feng; Yanyan Lan; Yunji Chen; Yuanming Lai; Yong Guan,1112-1128,17,https://doi.org/10.1109/TSE.2017.2752158,,,TRUE
TSE,2018,journals/tse/tse44,"Volume 44, Number 11, November 2018","Authors' Reply to ""Comments on 'Researcher Bias: The Use of Machine Learning in Software Defect Prediction'"".",Martin J. Shepperd; Tracy Hall; David Bowes,1129-1131,3,https://doi.org/10.1109/TSE.2017.2731308,,,FALSE
TSE,2018,journals/tse/tse44,"Volume 44, Number 12, December 2018",A Study of Social Interactions in Open Source Component Use.,Marc Palyart; Gail C. Murphy; Vaden Masrani,1132-1145,14,https://doi.org/10.1109/TSE.2017.2756043,,,TRUE
TSE,2018,journals/tse/tse44,"Volume 44, Number 12, December 2018",Collaborative Model-Driven Software Engineering: A Classification Framework and a Research Map.,Mirco Franzago; Davide Di Ruscio; Ivano Malavolta; Henry Muccini,1146-1175,30,https://doi.org/10.1109/TSE.2017.2755039,,,TRUE
TSE,2018,journals/tse/tse44,"Volume 44, Number 12, December 2018",EARMO: An Energy-Aware Refactoring Approach for Mobile Apps.,Rodrigo Morales; Rubén Saborido; Foutse Khomh; Francisco Chicano; Giuliano Antoniol,1176-1206,31,https://doi.org/10.1109/TSE.2017.2757486,,,TRUE
TSE,2018,journals/tse/tse44,"Volume 44, Number 12, December 2018",Entropy Based Software Reliability Analysis of Multi-Version Open Source Software.,V. B. Singh; Meera Sharma; Hoang Pham,1207-1223,17,https://doi.org/10.1109/TSE.2017.2766070,,,TRUE
TSE,2018,journals/tse/tse44,"Volume 44, Number 12, December 2018",On the Use of Hidden Markov Model to Predict the Time to Fix Bugs.,Mayy Habayeb; Syed Shariyar Murtaza; Andriy V. Miranskyy; Ayse Basar Bener,1224-1244,21,https://doi.org/10.1109/TSE.2017.2757480,,,TRUE
TSE,2018,journals/tse/tse44,"Volume 44, Number 12, December 2018",Revisiting the Performance Evaluation of Automated Approaches for the Retrieval of Duplicate Issue Reports.,Mohamed Sami Rakha; Cor-Paul Bezemer; Ahmed E. Hassan,1245-1268,24,https://doi.org/10.1109/TSE.2017.2755005,,,TRUE
TSE,2018,journals/tse/tse44,"Volume 44, Number 12, December 2018",Tracking Load-Time Configuration Options.,Max Lillack; Christian Kästner; Eric Bodden,1269-1291,23,https://doi.org/10.1109/TSE.2017.2756048,,,TRUE
FSE,2014,conf/sigsoft/fse2014,Keynote,Omlet: a revolution against big-brother social networks (invited talk).,Monica S. Lam,1,1,https://doi.org/10.1145/2635868.2684426,,,FALSE
FSE,2014,conf/sigsoft/fse2014,Award Talks,From software engineering to software systems (invited talk).,Alexander L. Wolf,2,1,https://doi.org/10.1145/2635868.2684427,,,FALSE
FSE,2014,conf/sigsoft/fse2014,Award Talks,Ten years with evidence-based software engineering. What is it? Has it had any impact? What's next?,Magne Jørgensen,3,1,https://doi.org/10.1145/2635868.2684428,,,FALSE
FSE,2014,conf/sigsoft/fse2014,Perspectives from Industry,Experiences developing tools for developers (invited talk).,John Penix,4,1,https://doi.org/10.1145/2635868.2684429,,,FALSE
FSE,2014,conf/sigsoft/fse2014,Perspectives from Industry,Are you getting traction? tales from the tech transfer trenches (invited talk).,Satish Chandra,5,1,https://doi.org/10.1145/2635868.2684430,,,FALSE
FSE,2014,conf/sigsoft/fse2014,Perspectives from Industry,Data hard with a vengeance (invited talk).,Thomas Zimmermann,6,1,https://doi.org/10.1145/2635868.2684431,,,FALSE
FSE,2014,conf/sigsoft/fse2014,Helping and Understanding Developers,Developers' code context models for change tasks.,Thomas Fritz; David C. Shepherd; Katja Kevic; Will Snipes; Christoph Bräunlich,7-18,12,https://doi.org/10.1145/2635868.2635905,,,TRUE
FSE,2014,conf/sigsoft/fse2014,Helping and Understanding Developers,Software developers' perceptions of productivity.,André N. Meyer; Thomas Fritz; Gail C. Murphy; Thomas Zimmermann,19-29,11,https://doi.org/10.1145/2635868.2635892,,,TRUE
FSE,2014,conf/sigsoft/fse2014,Helping and Understanding Developers,"Enablers, inhibitors, and perceptions of testing in novice software teams.",Raphael Pham; Stephan Kiesling; Olga Liskin; Leif Singer; Kurt Schneider,30-40,11,https://doi.org/10.1145/2635868.2635925,,,TRUE
FSE,2014,conf/sigsoft/fse2014,Helping and Understanding Developers,Feedback generation for performance problems in introductory programming assignments.,Sumit Gulwani; Ivan Radicek; Florian Zuleger,41-51,11,https://doi.org/10.1145/2635868.2635912,,,TRUE
FSE,2014,conf/sigsoft/fse2014,Debugging and Refactoring,Test case purification for improving fault localization.,Jifeng Xuan; Martin Monperrus,52-63,12,https://doi.org/10.1145/2635868.2635906,,,TRUE
FSE,2014,conf/sigsoft/fse2014,Debugging and Refactoring,Automatically generated patches as debugging aids: a human study.,Yida Tao; Jindae Kim; Sunghun Kim; Chang Xu,64-74,11,https://doi.org/10.1145/2635868.2635873,,,TRUE
FSE,2014,conf/sigsoft/fse2014,Debugging and Refactoring,A foundation for refactoring C with macros.,Jeffrey L. Overbey; Farnaz Behrang; Munawar Hafiz,75-85,11,https://doi.org/10.1145/2635868.2635908,,,TRUE
FSE,2014,conf/sigsoft/fse2014,Debugging and Refactoring,Vector abstraction and concretization for scalable detection of refactorings.,Narcisa Andreea Milea; Lingxiao Jiang; Siau-Cheng Khoo,86-97,12,https://doi.org/10.1145/2635868.2635926,,,TRUE
FSE,2014,conf/sigsoft/fse2014,Static Analysis,FlowTwist: efficient context-sensitive inside-out taint analysis for large codebases.,Johannes Lerch; Ben Hermann; Eric Bodden; Mira Mezini,98-108,11,https://doi.org/10.1145/2635868.2635878,,,TRUE
FSE,2014,conf/sigsoft/fse2014,Static Analysis,ORBS: language-independent program slicing.,David W. Binkley; Nicolas Gold; Mark Harman; Syed S. Islam; Jens Krinke; Shin Yoo,109-120,12,https://doi.org/10.1145/2635868.2635893,,,TRUE
FSE,2014,conf/sigsoft/fse2014,Static Analysis,JSAI: a static analysis platform for JavaScript.,Vineeth Kashyap; Kyle Dewey; Ethan A. Kuefner; John Wagner; Kevin Gibbons; John Sarracino; Ben Wiedermann; Ben Hardekopf,121-132,12,https://doi.org/10.1145/2635868.2635904,,,TRUE
FSE,2014,conf/sigsoft/fse2014,Static Analysis,A path-sensitively sliced control flow graph.,Joxan Jaffar; Vijayaraghavan Murali,133-143,11,https://doi.org/10.1145/2635868.2635884,,,TRUE
FSE,2014,conf/sigsoft/fse2014,Mining Software Repositories,Let's talk about it: evaluating contributions through discussion in GitHub.,Jason Tsay; Laura Dabbish; James D. Herbsleb,144-154,11,https://doi.org/10.1145/2635868.2635882,,,TRUE
FSE,2014,conf/sigsoft/fse2014,Mining Software Repositories,A large scale study of programming languages and code quality in github.,Baishakhi Ray; Daryl Posnett; Vladimir Filkov; Premkumar T. Devanbu,155-165,11,https://doi.org/10.1145/2635868.2635922,,,TRUE
FSE,2014,conf/sigsoft/fse2014,Mining Software Repositories,Mining preconditions of APIs in large-scale code corpus.,Hoan Anh Nguyen; Robert Dyer; Tien N. Nguyen; Hridesh Rajan,166-177,12,https://doi.org/10.1145/2635868.2635924,,,TRUE
FSE,2014,conf/sigsoft/fse2014,Mining Software Repositories,Automatic mining of specifications from invocation traces and method invariants.,Ivo Krka; Yuriy Brun; Nenad Medvidovic,178-189,12,https://doi.org/10.1145/2635868.2635890,,,TRUE
FSE,2014,conf/sigsoft/fse2014,Formal Methods and Verification,Counterexample guided abstraction refinement of product-line behavioural models.,Maxime Cordy; Patrick Heymans; Axel Legay; Pierre-Yves Schobbens; Bruno Dawagne; Martin Leucker,190-201,12,https://doi.org/10.1145/2635868.2635919,,,TRUE
FSE,2014,conf/sigsoft/fse2014,Formal Methods and Verification,Powering the static driver verifier using corral.,Akash Lal; Shaz Qadeer,202-212,11,https://doi.org/10.1145/2635868.2635894,,,TRUE
FSE,2014,conf/sigsoft/fse2014,Formal Methods and Verification,Verifying CTL-live properties of infinite state models using an SMT solver.,Amirhossein Vakili; Nancy A. Day,213-223,11,https://doi.org/10.1145/2635868.2635911,,,TRUE
FSE,2014,conf/sigsoft/fse2014,Formal Methods and Verification,Efficient runtime-enforcement techniques for policy weaving.,Richard Joiner; Thomas W. Reps; Somesh Jha; Mohan Dhawan; Vinod Ganapathy,224-234,11,https://doi.org/10.1145/2635868.2635907,,,TRUE
FSE,2014,conf/sigsoft/fse2014,Regression Testing,Techniques for improving regression testing in continuous integration development environments.,Sebastian G. Elbaum; Gregg Rothermel; John Penix,235-245,11,https://doi.org/10.1145/2635868.2635910,,,TRUE
FSE,2014,conf/sigsoft/fse2014,Regression Testing,Balancing trade-offs in test-suite reduction.,August Shi; Alex Gyori; Milos Gligoric; Andrey Zaytsev; Darko Marinov,246-256,11,https://doi.org/10.1145/2635868.2635921,,,TRUE
FSE,2014,conf/sigsoft/fse2014,Regression Testing,Identifying the characteristics of vulnerable code changes: an empirical study.,Amiangshu Bosu; Jeffrey C. Carver; Munawar Hafiz; Patrick Hilley; Derek Janni,257-268,12,https://doi.org/10.1145/2635868.2635880,,,TRUE
FSE,2014,conf/sigsoft/fse2014,Improving Recommender Systems,On the localness of software.,Zhaopeng Tu; Zhendong Su; Premkumar T. Devanbu,269-280,12,https://doi.org/10.1145/2635868.2635875,,,TRUE
FSE,2014,conf/sigsoft/fse2014,Improving Recommender Systems,Learning natural coding conventions.,Miltiadis Allamanis; Earl T. Barr; Christian Bird; Charles A. Sutton,281-293,13,https://doi.org/10.1145/2635868.2635883,,,TRUE
FSE,2014,conf/sigsoft/fse2014,Improving Recommender Systems,How should we measure functional sameness from program source code? an exploratory study on Java methods.,Yoshiki Higo; Shinji Kusumoto,294-305,12,https://doi.org/10.1145/2635868.2635886,,,TRUE
FSE,2014,conf/sigsoft/fse2014,Improving Recommender Systems,The plastic surgery hypothesis.,Earl T. Barr; Yuriy Brun; Premkumar T. Devanbu; Mark Harman; Federica Sarro,306-317,12,https://doi.org/10.1145/2635868.2635898,,,TRUE
FSE,2014,conf/sigsoft/fse2014,Concurrency and Parallelism,Grail: context-aware fixing of concurrency bugs.,Peng Liu; Omer Tripp; Charles Zhang,318-329,12,https://doi.org/10.1145/2635868.2635881,,,TRUE
FSE,2014,conf/sigsoft/fse2014,Concurrency and Parallelism,AI: a lightweight system for tolerating concurrency bugs.,Mingxing Zhang; Yongwei Wu; Shan Lu; Shanxiang Qi; Jinglei Ren; Weimin Zheng,330-340,11,https://doi.org/10.1145/2635868.2635885,,,TRUE
FSE,2014,conf/sigsoft/fse2014,Concurrency and Parallelism,Retrofitting concurrency for Android applications through refactoring.,Yu Lin; Cosmin Radoi; Danny Dig,341-352,12,https://doi.org/10.1145/2635868.2635903,,,TRUE
FSE,2014,conf/sigsoft/fse2014,Concurrency and Parallelism,Sherlock: scalable deadlock detection for concurrent programs.,Mahdi Eslamimehr; Jens Palsberg,353-365,13,https://doi.org/10.1145/2635868.2635918,,,TRUE
FSE,2014,conf/sigsoft/fse2014,Self Adaptation and Repair / Program Analysis Applications,Search-based synthesis of equivalent method sequences.,Alberto Goffi; Alessandra Gorla; Andrea Mattavelli; Mauro Pezzè; Paolo Tonella,366-376,11,https://doi.org/10.1145/2635868.2635888,,,TRUE
FSE,2014,conf/sigsoft/fse2014,Self Adaptation and Repair / Program Analysis Applications,Beyond the rainbow: self-adaptive failure avoidance in configurable systems.,Jacob Swanson; Myra B. Cohen; Matthew B. Dwyer; Brady J. Garvin; Justin Firestone,377-388,12,https://doi.org/10.1145/2635868.2635915,,,TRUE
FSE,2014,conf/sigsoft/fse2014,Self Adaptation and Repair / Program Analysis Applications,Semantics-based obfuscation-resilient binary code similarity comparison with applications to software plagiarism detection.,Lannan Luo; Jiang Ming; Dinghao Wu; Peng Liu; Sencun Zhu,389-400,12,https://doi.org/10.1145/2635868.2635900,,,TRUE
FSE,2014,conf/sigsoft/fse2014,Self Adaptation and Repair / Program Analysis Applications,Focus-shifting patterns of OSS developers and their congruence with call graphs.,Qi Xuan; Aaron Okano; Premkumar T. Devanbu; Vladimir Filkov,401-412,12,https://doi.org/10.1145/2635868.2635914,,,TRUE
FSE,2014,conf/sigsoft/fse2014,Symbolic Execution,How we get there: a context-guided search strategy in concolic testing.,Hyunmin Seo; Sunghun Kim,413-424,12,https://doi.org/10.1145/2635868.2635872,,,TRUE
FSE,2014,conf/sigsoft/fse2014,Symbolic Execution,Solving complex path conditions through heuristic search on induced polytopes.,Peter Dinges; Gul A. Agha,425-436,12,https://doi.org/10.1145/2635868.2635889,,,TRUE
FSE,2014,conf/sigsoft/fse2014,Symbolic Execution,Statistical symbolic execution with informed sampling.,Antonio Filieri; Corina S. Pasareanu; Willem Visser; Jaco Geldenhuys,437-448,12,https://doi.org/10.1145/2635868.2635899,,,TRUE
FSE,2014,conf/sigsoft/fse2014,Symbolic Execution,SymJS: automatic symbolic testing of JavaScript web applications.,Guodong Li; Esben Andreasen; Indradeep Ghosh,449-459,11,https://doi.org/10.1145/2635868.2635913,,,TRUE
FSE,2014,conf/sigsoft/fse2014,Software Documentation,Selection and presentation practices for code example summarization.,Annie T. T. Ying; Martin P. Robillard,460-471,12,https://doi.org/10.1145/2635868.2635877,,,TRUE
FSE,2014,conf/sigsoft/fse2014,Software Documentation,Mining idioms from source code.,Miltiadis Allamanis; Charles A. Sutton,472-483,12,https://doi.org/10.1145/2635868.2635901,,,TRUE
FSE,2014,conf/sigsoft/fse2014,Software Documentation,Automatic generation of release notes.,Laura Moreno; Gabriele Bavota; Massimiliano Di Penta; Rocco Oliveto; Andrian Marcus; Gerardo Canfora,484-495,12,https://doi.org/10.1145/2635868.2635870,,,TRUE
FSE,2014,conf/sigsoft/fse2014,Web Apps,Discovering refactoring opportunities in cascading style sheets.,Davood Mazinanian; Nikolaos Tsantalis; Ali Mesbah,496-506,11,https://doi.org/10.1145/2635868.2635879,,,TRUE
FSE,2014,conf/sigsoft/fse2014,Web Apps,SAFEWAPI: web API misuse detector for web applications.,SungGyeong Bae; Hyunghun Cho; Inho Lim; Sukyoung Ryu,507-517,11,https://doi.org/10.1145/2635868.2635916,,,TRUE
FSE,2014,conf/sigsoft/fse2014,Web Apps,Building call graphs for embedded client-side code in dynamic web applications.,Hung Viet Nguyen; Christian Kästner; Tien N. Nguyen,518-529,12,https://doi.org/10.1145/2635868.2635928,,,TRUE
FSE,2014,conf/sigsoft/fse2014,Architecture and Design,Sketches and diagrams in practice.,Sebastian Baltes; Stephan Diehl,530-541,12,https://doi.org/10.1145/2635868.2635891,,,TRUE
FSE,2014,conf/sigsoft/fse2014,Architecture and Design,Architecture challenges for internal software ecosystems: a large-scale industry case study.,Klaus-Benedikt Schultis; Christoph Elsner; Daniel Lohmann,542-552,11,https://doi.org/10.1145/2635868.2635876,,,TRUE
FSE,2014,conf/sigsoft/fse2014,Architecture and Design,Variable-specific resolutions for feature interactions.,Cecylia Bocovich; Joanne M. Atlee,553-563,11,https://doi.org/10.1145/2635868.2635927,,,TRUE
FSE,2014,conf/sigsoft/fse2014,Architecture and Design,An empirical study on program comprehension with reactive programming.,Guido Salvaneschi; Sven Amann; Sebastian Proksch; Mira Mezini,564-575,12,https://doi.org/10.1145/2635868.2635895,,,TRUE
FSE,2014,conf/sigsoft/fse2014,Mobile Apps,Apposcopy: semantics-based detection of Android malware through static analysis.,Yu Feng; Saswat Anand; Isil Dillig; Alex Aiken,576-587,12,https://doi.org/10.1145/2635868.2635869,,,TRUE
FSE,2014,conf/sigsoft/fse2014,Mobile Apps,Detecting energy bugs and hotspots in mobile apps.,Abhijeet Banerjee; Lee Kee Chong; Sudipta Chattopadhyay; Abhik Roychoudhury,588-598,11,https://doi.org/10.1145/2635868.2635871,,,TRUE
FSE,2014,conf/sigsoft/fse2014,Mobile Apps,EvoDroid: segmented evolutionary testing of Android apps.,Riyadh Mahmood; Nariman Mirzaei; Sam Malek,599-609,11,https://doi.org/10.1145/2635868.2635896,,,TRUE
FSE,2014,conf/sigsoft/fse2014,Mobile Apps,Prioritizing the devices to test your app on: a case study of Android game apps.,Hammad Khalid; Meiyappan Nagappan; Emad Shihab; Ahmed E. Hassan,610-620,11,https://doi.org/10.1145/2635868.2635909,,,TRUE
FSE,2014,conf/sigsoft/fse2014,Testing and Oracles,Improving oracle quality by detecting brittle assertions and unused inputs in tests.,Chen Huo; James Clause,621-631,11,https://doi.org/10.1145/2635868.2635917,,,TRUE
FSE,2014,conf/sigsoft/fse2014,Testing and Oracles,On the efficiency of automated testing.,Marcel Böhme; Soumya Paul,632-642,11,https://doi.org/10.1145/2635868.2635923,,,TRUE
FSE,2014,conf/sigsoft/fse2014,Testing and Oracles,An empirical analysis of flaky tests.,Qingzhou Luo; Farah Hariri; Lamyaa Eloussi; Darko Marinov,643-653,11,https://doi.org/10.1145/2635868.2635920,,,TRUE
FSE,2014,conf/sigsoft/fse2014,Testing and Oracles,Are mutants a valid substitute for real faults in software testing?,René Just; Darioush Jalali; Laura Inozemtseva; Michael D. Ernst; Reid Holmes; Gordon Fraser,654-665,12,https://doi.org/10.1145/2635868.2635929,,,TRUE
FSE,2014,conf/sigsoft/fse2014,Evolution and Maintenance,No issue left behind: reducing information overload in issue tracking.,Olga Baysal; Reid Holmes; Michael W. Godfrey,666-677,12,https://doi.org/10.1145/2635868.2635887,,,TRUE
FSE,2014,conf/sigsoft/fse2014,Evolution and Maintenance,Panning requirement nuggets in stream of software maintenance tickets.,Senthil Mani; Karthik Sankaranarayanan; Vibha Singhal Sinha; Premkumar T. Devanbu,678-688,11,https://doi.org/10.1145/2635868.2635897,,,TRUE
FSE,2014,conf/sigsoft/fse2014,Evolution and Maintenance,Learning to rank relevant files for bug reports using domain knowledge.,Xin Ye; Razvan C. Bunescu; Chang Liu,689-699,11,https://doi.org/10.1145/2635868.2635874,,,TRUE
FSE,2014,conf/sigsoft/fse2014,Evolution and Maintenance,Querying sequential software engineering data.,Chengnian Sun; Haidong Zhang; Jian-Guang Lou; Hongyu Zhang; Qiang Wang; Dongmei Zhang; Siau-Cheng Khoo,700-710,11,https://doi.org/10.1145/2635868.2635902,,,TRUE
FSE,2014,conf/sigsoft/fse2014,Tool Demonstrations,"Tsmart-GalsBlock: a toolkit for modeling, validation, and synthesis of multi-clocked embedded systems.",Yu Jiang; Hehua Zhang; Huafeng Zhang; Xinyan Zhao; Han Liu; Chengnian Sun; Xiaoyu Song; Ming Gu; Jia-Guang Sun,711-714,4,https://doi.org/10.1145/2635868.2661664,,,FALSE
FSE,2014,conf/sigsoft/fse2014,Tool Demonstrations,A tool suite for the model-driven software engineering of cyber-physical systems.,Stefan Dziwok; Christopher Gerking; Steffen Becker; Sebastian Thiele; Christian Heinzemann; Uwe Pohlmann,715-718,4,https://doi.org/10.1145/2635868.2661665,,,FALSE
FSE,2014,conf/sigsoft/fse2014,Tool Demonstrations,XMLMate: evolutionary XML test generation.,Nikolas Havrikov; Matthias Höschele; Juan Pablo Galeotti; Andreas Zeller,719-722,4,https://doi.org/10.1145/2635868.2661666,,,FALSE
FSE,2014,conf/sigsoft/fse2014,Tool Demonstrations,CHOReOSynt: enforcing choreography realizability in the future internet.,Marco Autili; Davide Di Ruscio; Amleto Di Salle; Alexander Perucci,723-726,4,https://doi.org/10.1145/2635868.2661667,,,FALSE
FSE,2014,conf/sigsoft/fse2014,Tool Demonstrations,RaPiD: a toolkit for reliability analysis of non-deterministic systems.,Lin Gui; Jun Sun; Yang Liu; Truong Khanh Nguyen; Jin Song Dong,727-730,4,https://doi.org/10.1145/2635868.2661668,,,FALSE
FSE,2014,conf/sigsoft/fse2014,Tool Demonstrations,Aalta: an LTL satisfiability checker over Infinite/Finite traces.,Jianwen Li; Yinbo Yao; Geguang Pu; Lijun Zhang; Jifeng He,731-734,4,https://doi.org/10.1145/2635868.2661669,,,FALSE
FSE,2014,conf/sigsoft/fse2014,Tool Demonstrations,Omen+: a precise dynamic deadlock detector for multithreaded Java libraries.,Malavika Samak; Murali Krishna Ramanathan,735-738,4,https://doi.org/10.1145/2635868.2661670,,,FALSE
FSE,2014,conf/sigsoft/fse2014,Tool Demonstrations,"Archie: a tool for detecting, monitoring, and preserving architecturally significant code.",Mehdi Mirakhorli; Ahmed Fakhry; Artem Grechko; Mateusz Wieloch; Jane Cleland-Huang,739-742,4,https://doi.org/10.1145/2635868.2661671,,,FALSE
FSE,2014,conf/sigsoft/fse2014,Tool Demonstrations,Linking sketches and diagrams to source code artifacts.,Sebastian Baltes; Peter Schmitz; Stephan Diehl,743-746,4,https://doi.org/10.1145/2635868.2661672,,,FALSE
FSE,2014,conf/sigsoft/fse2014,Tool Demonstrations,BumbleBee: a refactoring environment for spreadsheet formulas.,Felienne Hermans; Danny Dig,747-750,4,https://doi.org/10.1145/2635868.2661673,,,FALSE
FSE,2014,conf/sigsoft/fse2014,Tool Demonstrations,RefDistiller: a refactoring aware code review tool for inspecting manual refactoring edits.,Everton L. G. Alves; Myoungkyu Song; Miryung Kim,751-754,4,https://doi.org/10.1145/2635868.2661674,,,FALSE
FSE,2014,conf/sigsoft/fse2014,Tool Demonstrations,Critics: an interactive code review tool for searching and inspecting systematic changes.,Tianyi Zhang; Myoungkyu Song; Miryung Kim,755-758,4,https://doi.org/10.1145/2635868.2661675,,,FALSE
FSE,2014,conf/sigsoft/fse2014,Tool Demonstrations,ConceptCloud: a tagcloud browser for software archives.,Gillian J. Greene; Bernd Fischer,759-762,4,https://doi.org/10.1145/2635868.2661676,,,FALSE
FSE,2014,conf/sigsoft/fse2014,Tool Demonstrations,Titan: a toolset that connects software architecture with quality analysis.,Lu Xiao; Yuanfang Cai; Rick Kazman,763-766,4,https://doi.org/10.1145/2635868.2661677,,,FALSE
FSE,2014,conf/sigsoft/fse2014,Tool Demonstrations,BugLocalizer: integrated tool support for bug localization.,Ferdian Thung; Tien-Duy B. Le; Pavneet Singh Kochhar; David Lo,767-770,4,https://doi.org/10.1145/2635868.2661678,,,FALSE
FSE,2014,conf/sigsoft/fse2014,Technical Presentations 1,Diagnose crashing faults on production software.,Rongxin Wu,771-774,4,https://doi.org/10.1145/2635868.2666601,,,FALSE
FSE,2014,conf/sigsoft/fse2014,Technical Presentations 2,Integrating approaches for feature implementation.,Benjamin Behringer,775-778,4,https://doi.org/10.1145/2635868.2666605,,,FALSE
FSE,2014,conf/sigsoft/fse2014,Technical Presentations 2,Numerical program analysis and testing.,Zheng Gao,779-782,4,https://doi.org/10.1145/2635868.2666603,,,FALSE
FSE,2014,conf/sigsoft/fse2014,Technical Presentations 2,Traceability and model checking to support safety requirement verification.,Shuanglong Kan,783-786,4,https://doi.org/10.1145/2635868.2666606,,,FALSE
FSE,2014,conf/sigsoft/fse2014,Technical Presentations 2,Dealing with uncertainty in verification of nondeterministic systems.,Yamilet R. Serrano Llerena,787-790,4,https://doi.org/10.1145/2635868.2666598,,,FALSE
FSE,2014,conf/sigsoft/fse2014,Technical Presentations 3,Static analysis driven performance and energy testing.,Abhijeet Banerjee,791-794,4,https://doi.org/10.1145/2635868.2666602,,,FALSE
FSE,2014,conf/sigsoft/fse2014,Technical Presentations 3,Autonomous compliance monitoring of non-functional properties.,Marc Brünink,795-798,4,https://doi.org/10.1145/2635868.2666599,,,FALSE
FSE,2014,conf/sigsoft/fse2014,Technical Presentations 3,"Detecting, isolating, and enforcing dependencies among and within test cases.",Jonathan Bell,799-802,4,https://doi.org/10.1145/2635868.2666597,,,FALSE
FSE,2014,conf/sigsoft/fse2014,Technical Presentations 3,Improving the software testing skills of novices during onboarding through social transparency.,Raphael Pham,803-806,4,https://doi.org/10.1145/2635868.2666604,,,FALSE
FSE,2014,conf/sigsoft/fse2014,Technical Presentations 4,Minimizing software conflicts through proactive detection of conflicts and task scheduling.,Bakhtiar Khan Kasi,807-810,4,https://doi.org/10.1145/2635868.2666600,,,FALSE
FSE,2014,conf/sigsoft/fse2014,Student Research Competition Posters,Detecting and preventing the architectural roots of bugs.,Lu Xiao,811-813,3,https://doi.org/10.1145/2635868.2661679,,,FALSE
FSE,2014,conf/sigsoft/fse2014,Student Research Competition Posters,Estimating the effectiveness of spectrum-based fault localization.,Shuo Song,814-816,3,https://doi.org/10.1145/2635868.2661680,,,FALSE
FSE,2014,conf/sigsoft/fse2014,Student Research Competition Posters,Managing lots of models: the FaMine approach.,David Wille,817-819,3,https://doi.org/10.1145/2635868.2661681,,,FALSE
FSE,2014,conf/sigsoft/fse2014,Student Research Competition Posters,Social network analysis in open source software peer review.,Xin Yang,820-822,3,https://doi.org/10.1145/2635868.2661682,,,FALSE
FSE,2014,conf/sigsoft/fse2014,Student Research Competition Posters,Towards a theory of architectural styles.,Diego Marmsoler,823-825,3,https://doi.org/10.1145/2635868.2661683,,,FALSE
FSE,2014,conf/sigsoft/fse2014,Student Research Competition Posters,Software programmer management: a machine learning and human computer interaction framework for optimal task assignment.,Harry Raymond Joseph,826-828,3,https://doi.org/10.1145/2635868.2661684,,,FALSE
FSE,2014,conf/sigsoft/fse2014,Visions and Challenges,Methodology and culture: drivers of mediocrity in software engineering?,Marian Petre; Daniela E. Damian,829-832,4,https://doi.org/10.1145/2635868.2666607,,,FALSE
FSE,2014,conf/sigsoft/fse2014,Visions and Challenges,Known unknowns: testing in the presence of uncertainty.,Sebastian G. Elbaum; David S. Rosenblum,833-836,4,https://doi.org/10.1145/2635868.2666608,,,FALSE
FSE,2014,conf/sigsoft/fse2014,Visions and Challenges,Speculative reprogramming.,Marc Palyart; Gail C. Murphy; Emerson R. Murphy-Hill; Xavier Blanc,837-840,4,https://doi.org/10.1145/2635868.2666609,,,FALSE
FSE,2014,conf/sigsoft/fse2014,Visions and Challenges,A variability perspective of mutation analysis.,Xavier Devroey; Gilles Perrouin; Maxime Cordy; Mike Papadakis; Axel Legay; Pierre-Yves Schobbens,841-844,4,https://doi.org/10.1145/2635868.2666610,,,FALSE
FSE,2014,conf/sigsoft/fse2014,Visions and Challenges,Mining micro-practices from operational data.,Minghui Zhou; Audris Mockus,845-848,4,https://doi.org/10.1145/2635868.2666611,,,FALSE
FSE,2014,conf/sigsoft/fse2014,Visions and Challenges,Achieving lightweight trustworthy traceability.,Jane Cleland-Huang; Mona Rahimi; Patrick Mäder,849-852,4,https://doi.org/10.1145/2635868.2666612,,,FALSE
FSE,2014,conf/sigsoft/fse2014,Visions and Challenges,Software maintenance like maintenance in other engineering disciplines.,Gustavo Villavicencio,853-856,4,https://doi.org/10.1145/2635868.2666613,,,FALSE
FSE,2015,conf/sigsoft/fse2015,Adaptive Systems,Proactive self-adaptation under uncertainty: a probabilistic model checking approach.,Gabriel A. Moreno; Javier Cámara; David Garlan; Bradley R. Schmerl,1-12,12,https://doi.org/10.1145/2786805.2786853,,,TRUE
FSE,2015,conf/sigsoft/fse2015,Adaptive Systems,Automated multi-objective control for self-adaptive software design.,Antonio Filieri; Henry Hoffmann; Martina Maggio,13-24,12,https://doi.org/10.1145/2786805.2786833,,,TRUE
FSE,2015,conf/sigsoft/fse2015,Adaptive Systems,Detecting event anomalies in event-based systems.,Gholamreza Safi; Arman Shahbazian; William G. J. Halfond; Nenad Medvidovic,25-37,13,https://doi.org/10.1145/2786805.2786836,,,TRUE
FSE,2015,conf/sigsoft/fse2015,Software Quality,Suggesting accurate method and class names.,Miltiadis Allamanis; Earl T. Barr; Christian Bird; Charles A. Sutton,38-49,12,https://doi.org/10.1145/2786805.2786849,,,TRUE
FSE,2015,conf/sigsoft/fse2015,Software Quality,Measure it? Manage it? Ignore it? software practitioners and technical debt.,Neil A. Ernst; Stephany Bellomo; Ipek Ozkaya; Robert L. Nord; Ian Gorton,50-60,11,https://doi.org/10.1145/2786805.2786848,,,TRUE
FSE,2015,conf/sigsoft/fse2015,Software Quality,Automatically computing path complexity of programs.,Lucas Bang; Abdulbaki Aydin; Tevfik Bultan,61-72,12,https://doi.org/10.1145/2786805.2786863,,,TRUE
FSE,2015,conf/sigsoft/fse2015,Synthesis and Search-Based Approaches for Reactive Systems,Systematic testing of asynchronous reactive systems.,Ankush Desai; Shaz Qadeer; Sanjit A. Seshia,73-83,11,https://doi.org/10.1145/2786805.2786861,,,TRUE
FSE,2015,conf/sigsoft/fse2015,Synthesis and Search-Based Approaches for Reactive Systems,Effective test suites for mixed discrete-continuous stateflow controllers.,Reza Matinnejad; Shiva Nejati; Lionel C. Briand; Thomas Bruckmann,84-95,12,https://doi.org/10.1145/2786805.2786818,,,TRUE
FSE,2015,conf/sigsoft/fse2015,Synthesis and Search-Based Approaches for Reactive Systems,GR(1) synthesis for LTL specification patterns.,Shahar Maoz; Jan Oliver Ringert,96-106,11,https://doi.org/10.1145/2786805.2786824,,,TRUE
FSE,2015,conf/sigsoft/fse2015,Testing I,Modeling readability to improve unit tests.,Ermira Daka; José Campos; Gordon Fraser; Jonathan Dorn; Westley Weimer,107-118,12,https://doi.org/10.1145/2786805.2786838,,,TRUE
FSE,2015,conf/sigsoft/fse2015,Testing I,Improving model-based test generation by model decomposition.,Paolo Arcaini; Angelo Gargantini; Elvinia Riccobene,119-130,12,https://doi.org/10.1145/2786805.2786837,,,TRUE
FSE,2015,conf/sigsoft/fse2015,Testing I,Synthesizing tests for detecting atomicity violations.,Malavika Samak; Murali Krishna Ramanathan,131-142,12,https://doi.org/10.1145/2786805.2786874,,,TRUE
FSE,2015,conf/sigsoft/fse2015,"Search-Based Approaches to Testing, Repair, and Energy Optimisation",Optimizing energy consumption of GUIs in Android apps: a multi-objective approach.,Mario Linares Vásquez; Gabriele Bavota; Carlos Eduardo Bernal-Cárdenas; Rocco Oliveto; Massimiliano Di Penta; Denys Poshyvanyk,143-154,12,https://doi.org/10.1145/2786805.2786847,,,TRUE
FSE,2015,conf/sigsoft/fse2015,"Search-Based Approaches to Testing, Repair, and Energy Optimisation",Generating TCP/UDP network data for automated unit test generation.,Andrea Arcuri; Gordon Fraser; Juan Pablo Galeotti,155-165,11,https://doi.org/10.1145/2786805.2786828,,,TRUE
FSE,2015,conf/sigsoft/fse2015,"Search-Based Approaches to Testing, Repair, and Energy Optimisation",Staged program repair with condition synthesis.,Fan Long; Martin Rinard,166-178,13,https://doi.org/10.1145/2786805.2786811,,,TRUE
FSE,2015,conf/sigsoft/fse2015,Empirical Studies of Software Developers I,"When, how, and why developers (do not) test in their IDEs.",Moritz Beller; Georgios Gousios; Annibale Panichella; Andy Zaidman,179-190,12,https://doi.org/10.1145/2786805.2786843,,,TRUE
FSE,2015,conf/sigsoft/fse2015,Empirical Studies of Software Developers I,How developers search for code: a case study.,Caitlin Sadowski; Kathryn T. Stolee; Sebastian G. Elbaum,191-201,11,https://doi.org/10.1145/2786805.2786855,,,TRUE
FSE,2015,conf/sigsoft/fse2015,Empirical Studies of Software Developers I,Tracing software developers' eyes and interactions for change tasks.,Katja Kevic; Braden M. Walters; Timothy R. Shaffer; Bonita Sharif; David C. Shepherd; Thomas Fritz,202-213,12,https://doi.org/10.1145/2786805.2786864,,,TRUE
FSE,2015,conf/sigsoft/fse2015,Testing II,Assertions are strongly correlated with test suite effectiveness.,Yucheng Zhang; Ali Mesbah,214-224,11,https://doi.org/10.1145/2786805.2786858,,,TRUE
FSE,2015,conf/sigsoft/fse2015,Testing II,Test report prioritization to assist crowdsourced testing.,Yang Feng; Zhenyu Chen; James A. Jones; Chunrong Fang; Baowen Xu,225-236,12,https://doi.org/10.1145/2786805.2786862,,,TRUE
FSE,2015,conf/sigsoft/fse2015,Testing II,Comparing and combining test-suite reduction and regression test selection.,August Shi; Tifany Yung; Alex Gyori; Darko Marinov,237-247,11,https://doi.org/10.1145/2786805.2786878,,,TRUE
FSE,2015,conf/sigsoft/fse2015,Security,Questions developers ask while diagnosing potential security vulnerabilities with static analysis.,Justin Smith; Brittany Johnson; Emerson R. Murphy-Hill; Bill Chu; Heather Richter Lipford,248-259,12,https://doi.org/10.1145/2786805.2786812,,,TRUE
FSE,2015,conf/sigsoft/fse2015,Security,Quantifying developers' adoption of security tools.,Jim Witschey; Olga A. Zielinska; Allaire K. Welk; Emerson R. Murphy-Hill; Christopher B. Mayhorn; Thomas Zimmermann,260-271,12,https://doi.org/10.1145/2786805.2786816,,,TRUE
FSE,2015,conf/sigsoft/fse2015,Security,Auto-patching DOM-based XSS at scale.,Inian Parameshwaran; Enrico Budianto; Shweta Shinde; Hung Dang; Atul Sadhu; Prateek Saxena,272-283,12,https://doi.org/10.1145/2786805.2786821,,,TRUE
FSE,2015,conf/sigsoft/fse2015,Configurable Systems,Performance-influence models for highly configurable systems.,Norbert Siegmund; Alexander Grebhahn; Sven Apel; Christian Kästner,284-294,11,https://doi.org/10.1145/2786805.2786845,,,TRUE
FSE,2015,conf/sigsoft/fse2015,Configurable Systems,Users beware: preference inconsistencies ahead.,Farnaz Behrang; Myra B. Cohen; Alessandro Orso,295-306,12,https://doi.org/10.1145/2786805.2786869,,,TRUE
FSE,2015,conf/sigsoft/fse2015,Configurable Systems,"Hey, you have given me too many knobs!: understanding and dealing with over-designed configuration in system software.",Tianyin Xu; Long Jin; Xuepeng Fan; Yuanyuan Zhou; Shankar Pasupathy; Rukma Talwadker,307-319,13,https://doi.org/10.1145/2786805.2786852,,,TRUE
FSE,2015,conf/sigsoft/fse2015,Debugging,Crowd debugging.,Fuxiang Chen; Sunghun Kim,320-332,13,https://doi.org/10.1145/2786805.2786819,,,TRUE
FSE,2015,conf/sigsoft/fse2015,Debugging,On the use of delta debugging to reduce recordings and facilitate debugging of web applications.,Mouna Hammoudi; Brian Burg; Gigon Bae; Gregg Rothermel,333-344,12,https://doi.org/10.1145/2786805.2786846,,,TRUE
FSE,2015,conf/sigsoft/fse2015,Debugging,MemInsight: platform-independent memory debugging for JavaScript.,Simon Holm Jensen; Manu Sridharan; Koushik Sen; Satish Chandra,345-356,12,https://doi.org/10.1145/2786805.2786860,,,TRUE
FSE,2015,conf/sigsoft/fse2015,Web Applications,JITProf: pinpointing JIT-unfriendly JavaScript code.,Liang Gong; Michael Pradel; Koushik Sen,357-368,12,https://doi.org/10.1145/2786805.2786831,,,TRUE
FSE,2015,conf/sigsoft/fse2015,Web Applications,Cross-language program slicing for dynamic web applications.,Hung Viet Nguyen; Christian Kästner; Tien N. Nguyen,369-380,12,https://doi.org/10.1145/2786805.2786872,,,TRUE
FSE,2015,conf/sigsoft/fse2015,Web Applications,Detecting JavaScript races that matter.,Erdal Mutlu; Serdar Tasiran; Benjamin Livshits,381-392,12,https://doi.org/10.1145/2786805.2786820,,,TRUE
FSE,2015,conf/sigsoft/fse2015,Studies of Software Engineering Research and Practice,The making of cloud applications: an empirical study on software development for the cloud.,Jürgen Cito; Philipp Leitner; Thomas Fritz; Harald C. Gall,393-403,11,https://doi.org/10.1145/2786805.2786826,,,TRUE
FSE,2015,conf/sigsoft/fse2015,Studies of Software Engineering Research and Practice,An empirical study of goto in C code from GitHub repositories.,Meiyappan Nagappan; Romain Robbes; Yasutaka Kamei; Éric Tanter; Shane McIntosh; Audris Mockus; Ahmed E. Hassan,404-414,11,https://doi.org/10.1145/2786805.2786834,,,TRUE
FSE,2015,conf/sigsoft/fse2015,Studies of Software Engineering Research and Practice,How practitioners perceive the relevance of software engineering research.,David Lo; Nachiappan Nagappan; Thomas Zimmermann,415-425,11,https://doi.org/10.1145/2786805.2786809,,,TRUE
FSE,2015,conf/sigsoft/fse2015,Concurrency,What change history tells us about thread synchronization.,Rui Gu; Guoliang Jin; Linhai Song; Linjie Zhu; Shan Lu,426-438,13,https://doi.org/10.1145/2786805.2786815,,,TRUE
FSE,2015,conf/sigsoft/fse2015,Concurrency,Finding schedule-sensitive branches.,Jeff Huang; Lawrence Rauchwerger,439-449,11,https://doi.org/10.1145/2786805.2786840,,,TRUE
FSE,2015,conf/sigsoft/fse2015,Concurrency,Effective and precise dynamic detection of hidden races for Java programs.,Yan Cai; Lingwei Cao,450-461,12,https://doi.org/10.1145/2786805.2786839,,,TRUE
FSE,2015,conf/sigsoft/fse2015,Program Analysis I,A user-guided approach to program analysis.,Ravi Mangal; Xin Zhang; Aditya V. Nori; Mayur Naik,462-473,12,https://doi.org/10.1145/2786805.2786851,,,TRUE
FSE,2015,conf/sigsoft/fse2015,Program Analysis I,Hidden truths in dead software paths.,Michael Eichberg; Ben Hermann; Mira Mezini; Leonid Glanz,474-484,11,https://doi.org/10.1145/2786805.2786865,,,TRUE
FSE,2015,conf/sigsoft/fse2015,Program Analysis I,P3: partitioned path profiling.,Mohammed Afraz; Diptikalyan Saha; Aditya Kanade,485-495,11,https://doi.org/10.1145/2786805.2786868,,,TRUE
FSE,2015,conf/sigsoft/fse2015,Prediction and Recommendation,Heterogeneous cross-company defect prediction by unified metric representation and CCA-based transfer learning.,Xiao-Yuan Jing; Fei Wu; Xiwei Dong; Fumin Qi; Baowen Xu,496-507,12,https://doi.org/10.1145/2786805.2786813,,,TRUE
FSE,2015,conf/sigsoft/fse2015,Prediction and Recommendation,Heterogeneous defect prediction.,Jaechang Nam; Sunghun Kim,508-519,12,https://doi.org/10.1145/2786805.2786814,,,TRUE
FSE,2015,conf/sigsoft/fse2015,Prediction and Recommendation,Clone-based and interactive recommendation for modifying pasted code.,Yun Lin; Xin Peng; Zhenchang Xing; Diwen Zheng; Wenyun Zhao,520-531,12,https://doi.org/10.1145/2786805.2786871,,,TRUE
FSE,2015,conf/sigsoft/fse2015,Program Repair,Is the cure worse than the disease? overfitting in automated program repair.,Edward K. Smith; Earl T. Barr; Claire Le Goues; Yuriy Brun,532-543,12,https://doi.org/10.1145/2786805.2786825,,,TRUE
FSE,2015,conf/sigsoft/fse2015,Program Repair,Responsive designs in a snap.,Nishant Sinha; Rezwana Karim,544-554,11,https://doi.org/10.1145/2786805.2786808,,,TRUE
FSE,2015,conf/sigsoft/fse2015,Program Repair,CLOTHO: saving programs from malformed strings and incorrect string-handling.,Aritra Dhar; Rahul Purandare; Mohan Dhawan; Suresh Rangaswamy,555-566,12,https://doi.org/10.1145/2786805.2786877,,,TRUE
FSE,2015,conf/sigsoft/fse2015,Information Retrieval,Query-based configuration of text retrieval solutions for software engineering tasks.,Laura Moreno; Gabriele Bavota; Sonia Haiduc; Massimiliano Di Penta; Rocco Oliveto; Barbara Russo; Andrian Marcus,567-578,12,https://doi.org/10.1145/2786805.2786859,,,TRUE
FSE,2015,conf/sigsoft/fse2015,Information Retrieval,Information retrieval and spectrum based bug localization: better together.,Tien-Duy B. Le; Richard Jayadi Oentaryo; David Lo,579-590,12,https://doi.org/10.1145/2786805.2786880,,,TRUE
FSE,2015,conf/sigsoft/fse2015,Information Retrieval,Rule-based extraction of goal-use case models from text.,Tuong Huan Nguyen; John C. Grundy; Mohamed Almorsy,591-601,11,https://doi.org/10.1145/2786805.2786876,,,TRUE
FSE,2015,conf/sigsoft/fse2015,Program Analysis II,Symbolic execution of programs with heap inputs.,Pietro Braione; Giovanni Denaro; Mauro Pezzè,602-613,12,https://doi.org/10.1145/2786805.2786842,,,TRUE
FSE,2015,conf/sigsoft/fse2015,Program Analysis II,Automatically deriving pointer reference expressions from binary code for memory dump analysis.,Yangchun Fu; Zhiqiang Lin; David Brumley,614-624,11,https://doi.org/10.1145/2786805.2786810,,,TRUE
FSE,2015,conf/sigsoft/fse2015,Measurement and Metric,Summarizing and measuring development activity.,Christoph Treude; Fernando Marques Figueira Filho; Uirá Kulesza,625-636,12,https://doi.org/10.1145/2786805.2786827,,,TRUE
FSE,2015,conf/sigsoft/fse2015,Measurement and Metric,A method to identify and correct problematic software activity data: exploiting capacity constraints and data redundancies.,Qimu Zheng; Audris Mockus; Minghui Zhou,637-648,12,https://doi.org/10.1145/2786805.2786866,,,TRUE
FSE,2015,conf/sigsoft/fse2015,Patterns and Coding Convention,Gamification for enforcing coding conventions.,Christian R. Prause; Matthias Jarke,649-660,12,https://doi.org/10.1145/2786805.2786806,,,TRUE
FSE,2015,conf/sigsoft/fse2015,Mobile Applications,String analysis for Java and Android applications.,Ding Li; Yingjun Lyu; Mian Wan; William G. J. Halfond,661-672,12,https://doi.org/10.1145/2786805.2786879,,,TRUE
FSE,2015,conf/sigsoft/fse2015,Mobile Applications,Auto-completing bug reports for Android applications.,Kevin Moran; Mario Linares Vásquez; Carlos Bernal-Cárdenas; Denys Poshyvanyk,673-686,14,https://doi.org/10.1145/2786805.2786857,,,TRUE
FSE,2015,conf/sigsoft/fse2015,Mobile Applications,CLAPP: characterizing loops in Android applications.,Yanick Fratantonio; Aravind Machiry; Antonio Bianchi; Christopher Kruegel; Giovanni Vigna,687-697,11,https://doi.org/10.1145/2786805.2786873,,,TRUE
FSE,2015,conf/sigsoft/fse2015,"Search, Synthesis, and Verification","TLV: abstraction through testing, learning, and validation.",Jun Sun; Hao Xiao; Yang Liu; Shang-Wei Lin; Shengchao Qin,698-709,12,https://doi.org/10.1145/2786805.2786817,,,TRUE
FSE,2015,conf/sigsoft/fse2015,"Search, Synthesis, and Verification",Mimic: computing models for opaque code.,Stefan Heule; Manu Sridharan; Satish Chandra,710-720,11,https://doi.org/10.1145/2786805.2786875,,,TRUE
FSE,2015,conf/sigsoft/fse2015,"Search, Synthesis, and Verification",Witness validation and stepwise testification across software verifiers.,Dirk Beyer; Matthias Dangl; Daniel Dietsch; Matthias Heizmann; Andreas Stahlbauer,721-733,13,https://doi.org/10.1145/2786805.2786867,,,TRUE
FSE,2015,conf/sigsoft/fse2015,Java and Object-Oriented Programming,Efficient and reasonable object-oriented concurrency.,Scott West; Sebastian Nanz; Bertrand Meyer,734-744,11,https://doi.org/10.1145/2786805.2786822,,,TRUE
FSE,2015,conf/sigsoft/fse2015,Java and Object-Oriented Programming,FlexJava: language support for safe and modular approximate programming.,Jongse Park; Hadi Esmaeilzadeh; Xin Zhang; Mayur Naik; William Harris,745-757,13,https://doi.org/10.1145/2786805.2786807,,,TRUE
FSE,2015,conf/sigsoft/fse2015,Java and Object-Oriented Programming,Getting to know you: towards a capability model for Java.,Ben Hermann; Michael Reif; Michael Eichberg; Mira Mezini,758-769,12,https://doi.org/10.1145/2786805.2786829,,,TRUE
FSE,2015,conf/sigsoft/fse2015,Testing III,Efficient dependency detection for safe Java test acceleration.,Jonathan Bell; Gail E. Kaiser; Eric Melski; Mohan Dattatreya,770-781,12,https://doi.org/10.1145/2786805.2786823,,,TRUE
FSE,2015,conf/sigsoft/fse2015,Testing III,Turning programs against each other: high coverage fuzz-testing using binary-code mutation and dynamic slicing.,Ulf Kargen; Nahid Shahmehri,782-792,11,https://doi.org/10.1145/2786805.2786844,,,TRUE
FSE,2015,conf/sigsoft/fse2015,Testing III,Guided differential testing of certificate validation in SSL/TLS implementations.,Yuting Chen; Zhendong Su,793-804,12,https://doi.org/10.1145/2786805.2786835,,,TRUE
FSE,2015,conf/sigsoft/fse2015,Empirical Studies of Software Developers II,Quality and productivity outcomes relating to continuous integration in GitHub.,Bogdan Vasilescu; Yue Yu; Huaimin Wang; Premkumar T. Devanbu; Vladimir Filkov,805-816,12,https://doi.org/10.1145/2786805.2786850,,,TRUE
FSE,2015,conf/sigsoft/fse2015,Empirical Studies of Software Developers II,Developer onboarding in GitHub: the role of prior social links and language experience.,Casey Casalnuovo; Bogdan Vasilescu; Premkumar T. Devanbu; Vladimir Filkov,817-828,12,https://doi.org/10.1145/2786805.2786854,,,TRUE
FSE,2015,conf/sigsoft/fse2015,Empirical Studies of Software Developers II,Impact of developer turnover on quality in open-source software.,Matthieu Foucault; Marc Palyart; Xavier Blanc; Gail C. Murphy; Jean-Rémy Falleri,829-841,13,https://doi.org/10.1145/2786805.2786870,,,TRUE
FSE,2015,conf/sigsoft/fse2015,Symbolic Execution,MultiSE: multi-path symbolic execution using value summaries.,Koushik Sen; George C. Necula; Liang Gong; Wontae Choi,842-853,12,https://doi.org/10.1145/2786805.2786830,,,TRUE
FSE,2015,conf/sigsoft/fse2015,Symbolic Execution,Assertion guided symbolic execution of multithreaded programs.,Shengjian Guo; Markus Kusano; Chao Wang; Zijiang Yang; Aarti Gupta,854-865,12,https://doi.org/10.1145/2786805.2786841,,,TRUE
FSE,2015,conf/sigsoft/fse2015,Symbolic Execution,Iterative distribution-aware sampling for probabilistic symbolic execution.,Mateus Borges; Antonio Filieri; Marcelo d'Amorim; Corina S. Pasareanu,866-877,12,https://doi.org/10.1145/2786805.2786832,,,TRUE
FSE,2015,conf/sigsoft/fse2015,Human Aspects of Software Engineering,Bespoke tools: adapted to the concepts developers know.,Brittany Johnson; Rahul Pandita; Emerson R. Murphy-Hill; Sarah Heckman,878-881,4,https://doi.org/10.1145/2786805.2803197,,,FALSE
FSE,2015,conf/sigsoft/fse2015,Human Aspects of Software Engineering,I heart hacker news: expanding qualitative research findings by analyzing social news websites.,Titus Barik; Brittany Johnson; Emerson R. Murphy-Hill,882-885,4,https://doi.org/10.1145/2786805.2803200,,,FALSE
FSE,2015,conf/sigsoft/fse2015,Human Aspects of Software Engineering,GitSonifier: using sound to portray developer conflict history.,Kevin J. North; Shane Bolan; Anita Sarma; Myra B. Cohen,886-889,4,https://doi.org/10.1145/2786805.2803199,,,FALSE
FSE,2015,conf/sigsoft/fse2015,Human Aspects of Software Engineering,Automatically recommending test code examples to inexperienced developers.,Raphael Pham; Yauheni Stoliar; Kurt Schneider,890-893,4,https://doi.org/10.1145/2786805.2803202,,,FALSE
FSE,2015,conf/sigsoft/fse2015,Human Aspects of Software Engineering,Using software theater for the demonstration of innovative ubiquitous applications.,Han Xu; Stephan Krusche; Bernd Bruegge,894-897,4,https://doi.org/10.1145/2786805.2803207,,,FALSE
FSE,2015,conf/sigsoft/fse2015,"Validation, Verification, and Testing",Behavioral log analysis with statistical guarantees.,Nimrod Busany; Shahar Maoz,898-901,4,https://doi.org/10.1145/2786805.2803198,,,FALSE
FSE,2015,conf/sigsoft/fse2015,"Validation, Verification, and Testing",Inner oracles: input-specific assertions on internal states.,Yingfei Xiong; Dan Hao; Lu Zhang; Tao Zhu; Muyao Zhu; Tian Lan,902-905,4,https://doi.org/10.1145/2786805.2803204,,,FALSE
FSE,2015,conf/sigsoft/fse2015,"Validation, Verification, and Testing",Targeted program transformations for symbolic execution.,Cristian Cadar,906-909,4,https://doi.org/10.1145/2786805.2803205,,,FALSE
FSE,2015,conf/sigsoft/fse2015,"Validation, Verification, and Testing",Crash reproduction via test case mutation: let existing test cases help.,Jifeng Xuan; Xiaoyuan Xie; Martin Monperrus,910-913,4,https://doi.org/10.1145/2786805.2803206,,,FALSE
FSE,2015,conf/sigsoft/fse2015,"Validation, Verification, and Testing",RDIT: race detection from incomplete traces.,Arun K. Rajagopalan; Jeff Huang,914-917,4,https://doi.org/10.1145/2786805.2803209,,,FALSE
FSE,2015,conf/sigsoft/fse2015,Maintenance and Evolution,TACO: test suite augmentation for concurrent programs.,Tingting Yu,918-921,4,https://doi.org/10.1145/2786805.2803201,,,FALSE
FSE,2015,conf/sigsoft/fse2015,Maintenance and Evolution,Navigating through the archipelago of refactorings.,Apostolos V. Zarras; Theofanis Vartziotis; Panos Vassiliadis,922-925,4,https://doi.org/10.1145/2786805.2803203,,,FALSE
FSE,2015,conf/sigsoft/fse2015,Maintenance and Evolution,Detecting semantic merge conflicts with variability-aware execution.,Hung Viet Nguyen; My Huu Nguyen; Son Cuu Dang; Christian Kästner; Tien N. Nguyen,926-929,4,https://doi.org/10.1145/2786805.2803208,,,FALSE
FSE,2015,conf/sigsoft/fse2015,Maintenance and Evolution,Product lines can jeopardize their trade secrets.,Mathieu Acher; Guillaume Bécan; Benoît Combemale; Benoit Baudry; Jean-Marc Jézéquel,930-933,4,https://doi.org/10.1145/2786805.2803210,,,FALSE
FSE,2015,conf/sigsoft/fse2015,Tool Demonstrations,JSketch: sketching for Java.,Jinseong Jeon; Xiaokang Qiu; Jeffrey S. Foster; Armando Solar-Lezama,934-937,4,https://doi.org/10.1145/2786805.2803189,,,FALSE
FSE,2015,conf/sigsoft/fse2015,Tool Demonstrations,Don't panic: reverse debugging of kernel drivers.,Pavel Dovgalyuk; Denis Dmitriev; Vladimir Makarov,938-941,4,https://doi.org/10.1145/2786805.2803179,,,FALSE
FSE,2015,conf/sigsoft/fse2015,Tool Demonstrations,UMTG: a toolset to automatically generate system test cases from use case specifications.,Chunhui Wang; Fabrizio Pastore; Arda Goknil; Lionel C. Briand; Muhammad Zohaib Z. Iqbal,942-945,4,https://doi.org/10.1145/2786805.2803187,,,FALSE
FSE,2015,conf/sigsoft/fse2015,Tool Demonstrations,DexterJS: robust testing platform for DOM-based XSS vulnerabilities.,Inian Parameshwaran; Enrico Budianto; Shweta Shinde; Hung Dang; Atul Sadhu; Prateek Saxena,946-949,4,https://doi.org/10.1145/2786805.2803191,,,FALSE
FSE,2015,conf/sigsoft/fse2015,Tool Demonstrations,T3i: a tool for generating and querying test suites for Java.,I. S. Wishnu B. Prasetya,950-953,4,https://doi.org/10.1145/2786805.2803182,,,FALSE
FSE,2015,conf/sigsoft/fse2015,Tool Demonstrations,iTrace: enabling eye tracking on software artifacts within the IDE to support software engineering tasks.,Timothy R. Shaffer; Jenna L. Wise; Braden M. Walters; Sebastian C. Müller; Michael Falcone; Bonita Sharif,954-957,4,https://doi.org/10.1145/2786805.2803188,,,FALSE
FSE,2015,conf/sigsoft/fse2015,Tool Demonstrations,Nyx: a display energy optimizer for mobile web apps.,Ding Li; Angelica Huyen Tran; William G. J. Halfond,958-961,4,https://doi.org/10.1145/2786805.2803190,,,FALSE
FSE,2015,conf/sigsoft/fse2015,Tool Demonstrations,NARCIA: an automated tool for change impact analysis in natural language requirements.,Chetan Arora; Mehrdad Sabetzadeh; Arda Goknil; Lionel C. Briand; Frank Zimmer,962-965,4,https://doi.org/10.1145/2786805.2803185,,,FALSE
FSE,2015,conf/sigsoft/fse2015,Tool Demonstrations,Commit guru: analytics and risk prediction of software commits.,Christoffer Rosen; Ben Grawi; Emad Shihab,966-969,4,https://doi.org/10.1145/2786805.2803183,,,FALSE
FSE,2015,conf/sigsoft/fse2015,Tool Demonstrations,OSSMETER: a software measurement platform for automatically analysing open source software projects.,Davide Di Ruscio; Dimitris S. Kolovos; Ioannis Korkontzelos; Nicholas Drivalos Matragkas; Jurgen J. Vinju,970-973,4,https://doi.org/10.1145/2786805.2803186,,,FALSE
FSE,2015,conf/sigsoft/fse2015,Tool Demonstrations,Comprehensive service matching with MatchBox.,Paul Börding; Melanie Bruns; Marie Christin Platenius,974-977,4,https://doi.org/10.1145/2786805.2803181,,,FALSE
FSE,2015,conf/sigsoft/fse2015,Tool Demonstrations,UEDashboard: awareness of unusual events in commit histories.,Larissa Leite; Christoph Treude; Fernando Marques Figueira Filho,978-981,4,https://doi.org/10.1145/2786805.2803184,,,FALSE
FSE,2015,conf/sigsoft/fse2015,Tool Demonstrations,MatrixMiner: a red pill to architect informal product descriptions in the matrix.,Sana Ben Nasr; Guillaume Bécan; Mathieu Acher; João Bosco Ferreira Filho; Benoit Baudry; Nicolas Sannier; Jean-Marc Davril,982-985,4,https://doi.org/10.1145/2786805.2803180,,,FALSE
FSE,2015,conf/sigsoft/fse2015,Quality,Predicting field reliability.,Pete Rotella; Sunita Chulani; Devesh Goyal,986-989,4,https://doi.org/10.1145/2786805.2804428,,,FALSE
FSE,2015,conf/sigsoft/fse2015,Quality,REMI: defect prediction for efficient API testing.,Mijung Kim; Jaechang Nam; Jaehyuk Yeon; Soonhwang Choi; Sunghun Kim,990-993,4,https://doi.org/10.1145/2786805.2804429,,,FALSE
FSE,2015,conf/sigsoft/fse2015,Quality,OnSpot system: test impact visibility during code edits in real software.,Muhammad Umar Janjua,994-997,4,https://doi.org/10.1145/2786805.2804430,,,FALSE
FSE,2015,conf/sigsoft/fse2015,Software Process,"Products, developers, and milestones: how should I build my N-Gram language model.",Juliana Saraiva; Christian Bird; Thomas Zimmermann,998-1001,4,https://doi.org/10.1145/2786805.2804431,,,FALSE
FSE,2015,conf/sigsoft/fse2015,Software Process,Evaluating a formal scenario-based method for the requirements analysis in automotive software engineering.,Joel Greenyer; Max Haase; Jörg Marhenke; Rene Bellmer,1002-1005,4,https://doi.org/10.1145/2786805.2804432,,,FALSE
FSE,2015,conf/sigsoft/fse2015,Software Process,Barriers and enablers for shortening software development lead-time in mechatronics organizations: a case study.,Mahshad M. Mahally; Miroslaw Staron; Jan Bosch,1006-1009,4,https://doi.org/10.1145/2786805.2804433,,,FALSE
FSE,2015,conf/sigsoft/fse2015,Requirements and Specification,Semantic degrees for Industrie 4.0 engineering: deciding on the degree of semantic formalization to select appropriate technologies.,Chih-Hong Cheng; Tuncay Guelfirat; Christian Messinger; Johannes O. Schmitt; Matthias Schnelte; Peter Weber,1010-1013,4,https://doi.org/10.1145/2786805.2804434,,,FALSE
FSE,2015,conf/sigsoft/fse2015,Requirements and Specification,Towards automating the security compliance value chain.,Smita Ghaisas; Manish Motwani; Balaji Balasubramaniam; Anjali Gajendragadkar; Rahul Kelkar; Harrick M. Vin,1014-1017,4,https://doi.org/10.1145/2786805.2804435,,,FALSE
FSE,2015,conf/sigsoft/fse2015,Requirements and Specification,"Requirements, architecture, and quality in a mission critical system: 12 lessons learned.",Aapo Koski; Tommi Mikkonen,1018-1021,4,https://doi.org/10.1145/2786805.2804436,,,FALSE
FSE,2015,conf/sigsoft/fse2015,Doctoral Symposium,Decentralized self-adaptation in large-scale distributed systems.,Luca Florio,1022-1025,4,https://doi.org/10.1145/2786805.2803192,,,FALSE
FSE,2015,conf/sigsoft/fse2015,Doctoral Symposium,Vehicle level continuous integration in the automotive industry.,Sebastian Vöst,1026-1029,4,https://doi.org/10.1145/2786805.2803193,,,FALSE
FSE,2015,conf/sigsoft/fse2015,Doctoral Symposium,Quantifying architectural debts.,Lu Xiao,1030-1033,4,https://doi.org/10.1145/2786805.2803194,,,FALSE
FSE,2015,conf/sigsoft/fse2015,Doctoral Symposium,User-centric security: optimization of the security-usability trade-off.,Denis Feth,1034-1037,4,https://doi.org/10.1145/2786805.2803195,,,FALSE
FSE,2015,conf/sigsoft/fse2015,Doctoral Symposium,Automated unit test generation for evolving software.,Sina Shamshiri,1038-1041,4,https://doi.org/10.1145/2786805.2803196,,,FALSE
FSE,2015,conf/sigsoft/fse2015,Student Research Competition,Increasing the efficiency of search-based unit test generation using parameter control.,Thomas White,1042-1044,3,https://doi.org/10.1145/2786805.2807556,,,FALSE
FSE,2015,conf/sigsoft/fse2015,Student Research Competition,Enhancing Android application bug reporting.,Kevin Moran,1045-1047,3,https://doi.org/10.1145/2786805.2807557,,,FALSE
FSE,2015,conf/sigsoft/fse2015,Student Research Competition,Improving energy consumption in Android apps.,Carlos Bernal-Cárdenas,1048-1050,3,https://doi.org/10.1145/2786805.2807558,,,FALSE
FSE,2015,conf/sigsoft/fse2015,Student Research Competition,Automated generation of programming language quizzes.,Shuktika Jain,1051-1053,3,https://doi.org/10.1145/2786805.2807559,,,FALSE
FSE,2015,conf/sigsoft/fse2015,Student Research Competition,Spotting familiar code snippet structures for program comprehension.,Venkatesh Vinayakarao,1054-1056,3,https://doi.org/10.1145/2786805.2807560,,,FALSE
FSE,2015,conf/sigsoft/fse2015,Student Research Competition,Combining eye tracking with navigation paths for identification of cross-language code dependencies.,Martin Konopka,1057-1059,3,https://doi.org/10.1145/2786805.2807561,,,FALSE
FSE,2015,conf/sigsoft/fse2015,Student Research Competition,A textual domain specific language for requirement modelling.,Oyindamola Olajubu,1060-1062,3,https://doi.org/10.1145/2786805.2807562,,,FALSE
FSE,2015,conf/sigsoft/fse2015,Student Research Competition,Automated attack surface approximation.,Christopher Theisen,1063-1065,3,https://doi.org/10.1145/2786805.2807563,,,FALSE
FSE,2015,conf/sigsoft/fse2015,Student Research Competition,Pockets: a tool to support exploratory programming for novices and educators.,Erina Makihara,1066-1068,3,https://doi.org/10.1145/2786805.2807564,,,FALSE
FSE,2016,conf/sigsoft/fse2016,Keynotes,"""Womenomics"" and gender-inclusive software: what software engineers need to know (invited talk).",Margaret M. Burnett,1,1,https://doi.org/10.1145/2950290.2994159,,,FALSE
FSE,2016,conf/sigsoft/fse2016,Keynotes,Building a socio-technical theory of coordination: why and how (outstanding research award).,James D. Herbsleb,2-10,9,https://doi.org/10.1145/2950290.2994160,,,FALSE
FSE,2016,conf/sigsoft/fse2016,Keynotes,Correct or usable? the limits of traditional verification (impact paper award).,Daniel Jackson; Mandana Vaziri,11,1,https://doi.org/10.1145/2950290.2994161,,,FALSE
FSE,2016,conf/sigsoft/fse2016,Showcases,Continuous deployment of mobile software at facebook (showcase).,Chuck Rossi; Elisa Shibley; Shi Su; Kent L. Beck; Tony Savor; Michael Stumm,12-23,12,https://doi.org/10.1145/2950290.2994157,,,FALSE
FSE,2016,conf/sigsoft/fse2016,Showcases,"Model, execute, and deploy: answering the hard questions in end-user programming (showcase).",Shan Shan Huang,24,1,https://doi.org/10.1145/2950290.2994158,,,FALSE
FSE,2016,conf/sigsoft/fse2016,Showcases,Making invisible things visible: tracking down known vulnerabilities at 3000 companies (showcase).,Gazi Mahmud,25,1,https://doi.org/10.1145/2950290.2994155,,,FALSE
FSE,2016,conf/sigsoft/fse2016,Showcases,Developer workflow at google (showcase).,Caitlin Sadowski,26,1,https://doi.org/10.1145/2950290.2994156,,,FALSE
FSE,2016,conf/sigsoft/fse2016,Research Papers,Titanium: efficient analysis of evolving alloy specifications.,Hamid Bagheri; Sam Malek,27-38,12,https://doi.org/10.1145/2950290.2950337,,,TRUE
FSE,2016,conf/sigsoft/fse2016,Research Papers,Mining performance specifications.,Marc Brünink; David S. Rosenblum,39-49,11,https://doi.org/10.1145/2950290.2950314,,,TRUE
FSE,2016,conf/sigsoft/fse2016,Research Papers,Designing minimal effective normative systems with the help of lightweight formal methods.,Jianye Hao; Eunsuk Kang; Jun Sun; Daniel Jackson,50-60,11,https://doi.org/10.1145/2950290.2950307,,,TRUE
FSE,2016,conf/sigsoft/fse2016,Research Papers,Proteus: computing disjunctive loop summary via path dependency analysis.,Xiaofei Xie; Bihuan Chen; Yang Liu; Wei Le; Xiaohong Li,61-72,12,https://doi.org/10.1145/2950290.2950340,,,TRUE
FSE,2016,conf/sigsoft/fse2016,Research Papers,A cross-tool communication study on program analysis tool notifications.,Brittany Johnson; Rahul Pandita; Justin Smith; Denae Ford; Sarah Elder; Emerson R. Murphy-Hill; Sarah Heckman; Caitlin Sadowski,73-84,12,https://doi.org/10.1145/2950290.2950304,,,TRUE
FSE,2016,conf/sigsoft/fse2016,Research Papers,Factors influencing code review processes in industry.,Tobias Baum; Olga Liskin; Kai Niklas; Kurt Schneider,85-96,12,https://doi.org/10.1145/2950290.2950323,,,TRUE
FSE,2016,conf/sigsoft/fse2016,Research Papers,"Foraging and navigations, fundamentally: developers' predictions of value and cost.",David Piorkowski; Austin Z. Henley; Tahmid Nabi; Scott D. Fleming; Christopher Scaffidi; Margaret M. Burnett,97-108,12,https://doi.org/10.1145/2950290.2950302,,,TRUE
FSE,2016,conf/sigsoft/fse2016,Research Papers,How to break an API: cost negotiation and community values in three software ecosystems.,Christopher Bogart; Christian Kästner; James D. Herbsleb; Ferdian Thung,109-120,12,https://doi.org/10.1145/2950290.2950325,,,TRUE
FSE,2016,conf/sigsoft/fse2016,Research Papers,Python predictive analysis for bug detection.,Zhaogui Xu; Peng Liu; Xiangyu Zhang; Baowen Xu,121-132,12,https://doi.org/10.1145/2950290.2950357,,,TRUE
FSE,2016,conf/sigsoft/fse2016,Research Papers,Crash consistency validation made easy.,Yanyan Jiang; Haicheng Chen; Feng Qin; Chang Xu; Xiaoxing Ma; Jian Lu,133-143,11,https://doi.org/10.1145/2950290.2950327,,,TRUE
FSE,2016,conf/sigsoft/fse2016,Research Papers,Discovering bug patterns in JavaScript.,Quinn Hanam; Fernando Santos De Mattos Brito; Ali Mesbah,144-156,13,https://doi.org/10.1145/2950290.2950308,,,TRUE
FSE,2016,conf/sigsoft/fse2016,Research Papers,Effort-aware just-in-time defect prediction: simple unsupervised models could be better than supervised models.,Yibiao Yang; Yuming Zhou; Jinping Liu; Yangyang Zhao; Hongmin Lu; Lei Xu; Baowen Xu; Hareton Leung,157-168,12,https://doi.org/10.1145/2950290.2950353,,,TRUE
FSE,2016,conf/sigsoft/fse2016,Research Papers,Detecting sensitive data disclosure via bi-directional text correlation analysis.,Jianjun Huang; Xiangyu Zhang; Lin Tan,169-180,12,https://doi.org/10.1145/2950290.2950348,,,TRUE
FSE,2016,conf/sigsoft/fse2016,Research Papers,Multi-representational security analysis.,Eunsuk Kang; Aleksandar Milicevic; Daniel Jackson,181-192,12,https://doi.org/10.1145/2950290.2950356,,,TRUE
FSE,2016,conf/sigsoft/fse2016,Research Papers,String analysis for side channels with segmented oracles.,Lucas Bang; Abdulbaki Aydin; Quoc-Sang Phan; Corina S. Pasareanu; Tevfik Bultan,193-204,12,https://doi.org/10.1145/2950290.2950362,,,TRUE
FSE,2016,conf/sigsoft/fse2016,Research Papers,WebRanz: web page randomization for better advertisement delivery and web-bot prevention.,Weihang Wang; Yunhui Zheng; Xinyu Xing; Yonghwi Kwon; Xiangyu Zhang; Patrick Th. Eugster,205-216,12,https://doi.org/10.1145/2950290.2950352,,,TRUE
FSE,2016,conf/sigsoft/fse2016,Research Papers,A discrete-time feedback controller for containerized cloud applications.,Luciano Baresi; Sam Guinea; Alberto Leva; Giovanni Quattrocchi,217-228,12,https://doi.org/10.1145/2950290.2950328,,,TRUE
FSE,2016,conf/sigsoft/fse2016,Research Papers,Keep it SIMPLEX: satisfying multiple goals with guarantees in control-based self-adaptive systems.,Stepan Shevtsov; Danny Weyns,229-241,13,https://doi.org/10.1145/2950290.2950301,,,TRUE
FSE,2016,conf/sigsoft/fse2016,Research Papers,Automated change impact analysis between SysML models of requirements and design.,Shiva Nejati; Mehrdad Sabetzadeh; Chetan Arora; Lionel C. Briand; Felix Mandoux,242-253,12,https://doi.org/10.1145/2950290.2950293,,,TRUE
FSE,2016,conf/sigsoft/fse2016,Research Papers,Parameter-free probabilistic API mining across GitHub.,Jaroslav M. Fowkes; Charles A. Sutton,254-265,12,https://doi.org/10.1145/2950290.2950319,,,TRUE
FSE,2016,conf/sigsoft/fse2016,Research Papers,API deprecation: a retrospective analysis and detection method for code examples on the web.,Jing Zhou; Robert J. Walker,266-277,12,https://doi.org/10.1145/2950290.2950298,,,TRUE
FSE,2016,conf/sigsoft/fse2016,Research Papers,When should internal interfaces be promoted to public?,André C. Hora; Marco Tulio Valente; Romain Robbes; Nicolas Anquetil,278-289,12,https://doi.org/10.1145/2950290.2950306,,,TRUE
FSE,2016,conf/sigsoft/fse2016,Research Papers,POLLUX: safely upgrading dependent application libraries.,Sukrit Kalra; Ayush Goel; Dhriti Khanna; Mohan Dhawan; Subodh Sharma; Rahul Purandare,290-300,11,https://doi.org/10.1145/2950290.2950345,,,TRUE
FSE,2016,conf/sigsoft/fse2016,Research Papers,Extracting instruction semantics via symbolic execution of code generators.,Niranjan Hasabnis; R. Sekar,301-313,13,https://doi.org/10.1145/2950290.2950335,,,TRUE
FSE,2016,conf/sigsoft/fse2016,Research Papers,Efficient generation of inductive validity cores for safety properties.,Elaheh Ghassabani; Andrew Gacek; Michael W. Whalen,314-325,12,https://doi.org/10.1145/2950290.2950346,,,TRUE
FSE,2016,conf/sigsoft/fse2016,Research Papers,Correctness witnesses: exchanging verification results between verifiers.,Dirk Beyer; Matthias Dangl; Daniel Dietsch; Matthias Heizmann,326-337,12,https://doi.org/10.1145/2950290.2950351,,,TRUE
FSE,2016,conf/sigsoft/fse2016,Research Papers,SMT-based verification of parameterized systems.,Arie Gurfinkel; Sharon Shoham; Yuri Meshman,338-348,11,https://doi.org/10.1145/2950290.2950330,,,TRUE
FSE,2016,conf/sigsoft/fse2016,Research Papers,On-the-fly decomposition of specifications in software model checking.,Sven Apel; Dirk Beyer; Vitaly O. Mordan; Vadim S. Mutilin; Andreas Stahlbauer,349-361,13,https://doi.org/10.1145/2950290.2950349,,,TRUE
FSE,2016,conf/sigsoft/fse2016,Research Papers,On well-separation of GR(1) specifications.,Shahar Maoz; Jan Oliver Ringert,362-372,11,https://doi.org/10.1145/2950290.2950300,,,TRUE
FSE,2016,conf/sigsoft/fse2016,Research Papers,Lightweight specification and analysis of dynamic systems with rich configurations.,Nuno Macedo; Julien Brunel; David Chemouil; Alcino Cunha; Denis Kuperberg,373-383,11,https://doi.org/10.1145/2950290.2950318,,,TRUE
FSE,2016,conf/sigsoft/fse2016,Research Papers,Gray links in the use of requirements traceability.,Nan Niu; Wentao Wang; Arushi Gupta,384-395,12,https://doi.org/10.1145/2950290.2950354,,,TRUE
FSE,2016,conf/sigsoft/fse2016,Research Papers,Understanding and detecting wake lock misuses for Android applications.,Yepang Liu; Chang Xu; Shing-Chi Cheung; Valerio Terragni,396-409,14,https://doi.org/10.1145/2950290.2950297,,,TRUE
FSE,2016,conf/sigsoft/fse2016,Research Papers,DiagDroid: Android performance diagnosis via anatomizing asynchronous executions.,Yu Kang; Yangfan Zhou; Hui Xu; Michael R. Lyu,410-421,12,https://doi.org/10.1145/2950290.2950316,,,TRUE
FSE,2016,conf/sigsoft/fse2016,Research Papers,Minimizing GUI event traces.,Lazaro Clapp; Osbert Bastani; Saswat Anand; Alex Aiken,422-434,13,https://doi.org/10.1145/2950290.2950342,,,TRUE
FSE,2016,conf/sigsoft/fse2016,Research Papers,Causal impact analysis for app releases in google play.,William Martin; Federica Sarro; Mark Harman,435-446,12,https://doi.org/10.1145/2950290.2950320,,,TRUE
FSE,2016,conf/sigsoft/fse2016,Research Papers,Static DOM event dependency analysis for testing web applications.,Chungha Sung; Markus Kusano; Nishant Sinha; Chao Wang,447-459,13,https://doi.org/10.1145/2950290.2950292,,,TRUE
FSE,2016,conf/sigsoft/fse2016,Research Papers,On-demand strong update analysis via value-flow refinement.,Yulei Sui; Jingling Xue,460-473,14,https://doi.org/10.1145/2950290.2950296,,,TRUE
FSE,2016,conf/sigsoft/fse2016,Research Papers,Call graph construction for Java libraries.,Michael Reif; Michael Eichberg; Ben Hermann; Johannes Lerch; Mira Mezini,474-486,13,https://doi.org/10.1145/2950290.2950312,,,TRUE
FSE,2016,conf/sigsoft/fse2016,Research Papers,Revamping JavaScript static analysis via localization and remediation of root causes of imprecision.,Shiyi Wei; Omer Tripp; Barbara G. Ryder; Julian Dolby,487-498,12,https://doi.org/10.1145/2950290.2950338,,,TRUE
FSE,2016,conf/sigsoft/fse2016,Research Papers,What would users change in my app? summarizing app reviews for recommending software changes.,Andrea Di Sorbo; Sebastiano Panichella; Carol V. Alexandru; Junji Shimagaki; Corrado Aaron Visaggio; Gerardo Canfora; Harald C. Gall,499-510,12,https://doi.org/10.1145/2950290.2950299,,,TRUE
FSE,2016,conf/sigsoft/fse2016,Research Papers,API code recommendation using statistical learning from fine-grained changes.,Anh Tuan Nguyen; Michael Hilton; Mihai Codoban; Hoan Anh Nguyen; Lily Mast; Eli Rademacher; Tien N. Nguyen; Danny Dig,511-522,12,https://doi.org/10.1145/2950290.2950333,,,TRUE
FSE,2016,conf/sigsoft/fse2016,Research Papers,TIPMerge: recommending experts for integrating changes across branches.,Catarina Costa; Jair Figueiredo; Leonardo Murta; Anita Sarma,523-534,12,https://doi.org/10.1145/2950290.2950339,,,TRUE
FSE,2016,conf/sigsoft/fse2016,Research Papers,Interactive and guided architectural refactoring with search-based recommendation.,Yun Lin; Xin Peng; Yuanfang Cai; Danny Dig; Diwen Zheng; Wenyun Zhao,535-546,12,https://doi.org/10.1145/2950290.2950317,,,TRUE
FSE,2016,conf/sigsoft/fse2016,Research Papers,Can testedness be effectively measured?,Iftekhar Ahmed; Rahul Gopinath; Caius Brindescu; Alex Groce; Carlos Jensen,547-558,12,https://doi.org/10.1145/2950290.2950324,,,TRUE
FSE,2016,conf/sigsoft/fse2016,Research Papers,A large-scale empirical comparison of static and dynamic test case prioritization techniques.,Qi Luo; Kevin Moran; Denys Poshyvanyk,559-570,12,https://doi.org/10.1145/2950290.2950344,,,TRUE
FSE,2016,conf/sigsoft/fse2016,Research Papers,Analyzing the validity of selective mutation with dominator mutants.,Bob Kurtz; Paul Ammann; Jeff Offutt; Márcio Eduardo Delamaro; Mariet Kurtz; Nida Gökçe,571-582,12,https://doi.org/10.1145/2950290.2950322,,,TRUE
FSE,2016,conf/sigsoft/fse2016,Research Papers,An extensive study of static regression test selection in modern software evolution.,Owolabi Legunsen; Farah Hariri; August Shi; Yafeng Lu; Lingming Zhang; Darko Marinov,583-594,12,https://doi.org/10.1145/2950290.2950361,,,TRUE
FSE,2016,conf/sigsoft/fse2016,Research Papers,PerfGuard: binary-centric application performance monitoring in production environments.,Chung Hwan Kim; Junghwan Rhee; Kyu Hyung Lee; Xiangyu Zhang; Dongyan Xu,595-606,12,https://doi.org/10.1145/2950290.2950347,,,TRUE
FSE,2016,conf/sigsoft/fse2016,Research Papers,Python probabilistic type inference with natural language support.,Zhaogui Xu; Xiangyu Zhang; Lin Chen; Kexin Pei; Baowen Xu,607-618,12,https://doi.org/10.1145/2950290.2950343,,,TRUE
FSE,2016,conf/sigsoft/fse2016,Research Papers,Detecting and fixing precision-specific operations for measuring floating-point errors.,Ran Wang; Daming Zou; Xinrui He; Yingfei Xiong; Lu Zhang; Gang Huang,619-630,12,https://doi.org/10.1145/2950290.2950355,,,TRUE
FSE,2016,conf/sigsoft/fse2016,Research Papers,Deep API learning.,Xiaodong Gu; Hongyu Zhang; Dongmei Zhang; Sunghun Kim,631-642,12,https://doi.org/10.1145/2950290.2950334,,,TRUE
FSE,2016,conf/sigsoft/fse2016,Research Papers,Build system with lazy retrieval for Java projects.,Ahmet Çelik; Alex Knaust; Aleksandar Milicevic; Milos Gligoric,643-654,12,https://doi.org/10.1145/2950290.2950358,,,TRUE
FSE,2016,conf/sigsoft/fse2016,Research Papers,iGen: dynamic interaction inference for configurable software.,ThanhVu Nguyen; Ugur Koc; Javran Cheng; Jeffrey S. Foster; Adam A. Porter,655-665,11,https://doi.org/10.1145/2950290.2950311,,,TRUE
FSE,2016,conf/sigsoft/fse2016,Research Papers,CacheOptimizer: helping developers configure caching frameworks for hibernate-based database-centric web applications.,Tse-Hsun Chen; Weiyi Shang; Ahmed E. Hassan; Mohamed N. Nasser; Parminder Flora,666-677,12,https://doi.org/10.1145/2950290.2950303,,,TRUE
FSE,2016,conf/sigsoft/fse2016,Research Papers,BinGo: cross-architecture cross-OS binary search.,Mahinthan Chandramohan; Yinxing Xue; Zhengzi Xu; Yang Liu; Chia Yuan Cho; Hee Beng Kuan Tan,678-689,12,https://doi.org/10.1145/2950290.2950350,,,TRUE
FSE,2016,conf/sigsoft/fse2016,Research Papers,Relationship-aware code search for JavaScript frameworks.,Xuan Li; Zerui Wang; Qianxiang Wang; Shoumeng Yan; Tao Xie; Hong Mei,690-701,12,https://doi.org/10.1145/2950290.2950341,,,TRUE
FSE,2016,conf/sigsoft/fse2016,Research Papers,Code relatives: detecting similarly behaving software.,Fang-Hsiang Su; Jonathan Bell; Kenneth Harvey; Simha Sethumadhavan; Gail E. Kaiser; Tony Jebara,702-714,13,https://doi.org/10.1145/2950290.2950321,,,TRUE
FSE,2016,conf/sigsoft/fse2016,Research Papers,Understanding and generating high quality patches for concurrency bugs.,Haopeng Liu; Yuxi Chen; Shan Lu,715-726,12,https://doi.org/10.1145/2950290.2950309,,,TRUE
FSE,2016,conf/sigsoft/fse2016,Research Papers,Anti-patterns in search-based program repair.,Shin Hwei Tan; Hiroaki Yoshida; Mukul R. Prasad; Abhik Roychoudhury,727-738,12,https://doi.org/10.1145/2950290.2950295,,,TRUE
FSE,2016,conf/sigsoft/fse2016,Research Papers,Semi-supervised verified feedback generation.,Shalini Kaleeswaran; Anirudh Santhiar; Aditya Kanade; Sumit Gulwani,739-750,12,https://doi.org/10.1145/2950290.2950363,,,TRUE
FSE,2016,conf/sigsoft/fse2016,Research Papers,WATERFALL: an incremental approach for repairing record-replay tests of web applications.,Mouna Hammoudi; Gregg Rothermel; Andrea Stocco,751-762,12,https://doi.org/10.1145/2950290.2950294,,,TRUE
FSE,2016,conf/sigsoft/fse2016,Research Papers,Efficiency of projectional editing: a controlled experiment.,Thorsten Berger; Markus Völter; Hans Peter Jensen; Taweesap Dangprasert; Janet Siegmund,763-774,12,https://doi.org/10.1145/2950290.2950315,,,TRUE
FSE,2016,conf/sigsoft/fse2016,Research Papers,ECHO: instantaneous in situ race detection in the IDE.,Sheng Zhan; Jeff Huang,775-786,12,https://doi.org/10.1145/2950290.2950332,,,TRUE
FSE,2016,conf/sigsoft/fse2016,Research Papers,Detecting table clones and smells in spreadsheets.,Wensheng Dou; Shing-Chi Cheung; Chushu Gao; Chang Xu; Liang Xu; Jun Wei,787-798,12,https://doi.org/10.1145/2950290.2950359,,,TRUE
FSE,2016,conf/sigsoft/fse2016,Research Papers,Flow-sensitive composition of thread-modular abstract interpretation.,Markus Kusano; Chao Wang,799-809,11,https://doi.org/10.1145/2950290.2950291,,,TRUE
FSE,2016,conf/sigsoft/fse2016,Research Papers,A deployable sampling strategy for data race detection.,Yan Cai; Jian Zhang; Lingwei Cao; Jian Liu,810-821,12,https://doi.org/10.1145/2950290.2950310,,,TRUE
FSE,2016,conf/sigsoft/fse2016,Research Papers,Online shared memory dependence reduction via bisectional coordination.,Yanyan Jiang; Chang Xu; Du Li; Xiaoxing Ma; Jian Lu,822-832,11,https://doi.org/10.1145/2950290.2950326,,,TRUE
FSE,2016,conf/sigsoft/fse2016,Research Papers,Parallel data race detection for task parallel programs with locks.,Adarsh Yoga; Santosh Nagarakatte; Aarti Gupta,833-845,13,https://doi.org/10.1145/2950290.2950329,,,TRUE
FSE,2016,conf/sigsoft/fse2016,Research Papers,Paradise unplugged: identifying barriers for female participation on stack overflow.,Denae Ford; Justin Smith; Philip J. Guo; Chris Parnin,846-857,12,https://doi.org/10.1145/2950290.2950331,,,TRUE
FSE,2016,conf/sigsoft/fse2016,Research Papers,Why we refactor? confessions of GitHub contributors.,Danilo Silva; Nikolaos Tsantalis; Marco Tulio Valente,858-870,13,https://doi.org/10.1145/2950290.2950305,,,TRUE
FSE,2016,conf/sigsoft/fse2016,Research Papers,Effectiveness of code contribution: from patch-based to pull-request-based tools.,Jiaxin Zhu; Minghui Zhou; Audris Mockus,871-882,12,https://doi.org/10.1145/2950290.2950364,,,TRUE
FSE,2016,conf/sigsoft/fse2016,Research Papers,Isomorphic regression testing: executing uncovered branches without test augmentation.,Jie Zhang; Yiling Lou; Lingming Zhang; Dan Hao; Lu Zhang; Hong Mei,883-894,12,https://doi.org/10.1145/2950290.2950313,,,TRUE
FSE,2016,conf/sigsoft/fse2016,Research Papers,Directed test generation to detect loop inefficiencies.,Monika Dhok; Murali Krishna Ramanathan,895-907,13,https://doi.org/10.1145/2950290.2950360,,,TRUE
FSE,2016,conf/sigsoft/fse2016,Research Papers,Field-exhaustive testing.,Pablo Ponzio; Nazareno Aguirre; Marcelo F. Frias; Willem Visser,908-919,12,https://doi.org/10.1145/2950290.2950336,,,TRUE
FSE,2016,conf/sigsoft/fse2016,Visions and Reflections,Sustainable software design.,Martin P. Robillard,920-923,4,https://doi.org/10.1145/2950290.2983983,,,FALSE
FSE,2016,conf/sigsoft/fse2016,Visions and Reflections,Designing for dystopia: software engineering research for the post-apocalypse.,Titus Barik; Rahul Pandita; Justin Middleton; Emerson R. Murphy-Hill,924-927,4,https://doi.org/10.1145/2950290.2983986,,,FALSE
FSE,2016,conf/sigsoft/fse2016,Visions and Reflections,Disrupting developer productivity one bot at a time.,Margaret-Anne D. Storey; Alexey Zagalsky,928-931,4,https://doi.org/10.1145/2950290.2983989,,,FALSE
FSE,2016,conf/sigsoft/fse2016,Visions and Reflections,Training the future workforce through task curation in an OSS ecosystem.,Anita Sarma; Marco Aurélio Gerosa; Igor Steinmacher; Rafael Leano,932-935,4,https://doi.org/10.1145/2950290.2983984,,,FALSE
FSE,2016,conf/sigsoft/fse2016,Visions and Reflections,Reaching the masses: a new subdiscipline of app programmer education.,Charles Weir; Awais Rashid; James Noble,936-939,4,https://doi.org/10.1145/2950290.2983981,,,FALSE
FSE,2016,conf/sigsoft/fse2016,Visions and Reflections,Studying developer gaze to empower software engineering research and practice.,Bonita Sharif; Benjamin Clark; Jonathan I. Maletic,940-943,4,https://doi.org/10.1145/2950290.2983988,,,FALSE
FSE,2016,conf/sigsoft/fse2016,Visions and Reflections,DeepSoft: a vision for a deep model of software.,Hoa Khanh Dam; Truyen Tran; John C. Grundy; Aditya K. Ghose,944-947,4,https://doi.org/10.1145/2950290.2983985,,,FALSE
FSE,2016,conf/sigsoft/fse2016,Visions and Reflections,Budgeted testing through an algorithmic lens.,Myra B. Cohen; Aduri Pavan; N. V. Vinodchandran,948-951,4,https://doi.org/10.1145/2950290.2983987,,,FALSE
FSE,2016,conf/sigsoft/fse2016,Visions and Reflections,Reasoning with imprecise privacy preferences.,Inah Omoronyia,952-955,4,https://doi.org/10.1145/2950290.2983982,,,FALSE
FSE,2016,conf/sigsoft/fse2016,Industrial Papers,Bing developer assistant: improving developer productivity by recommending sample code.,Hongyu Zhang; Anuj Jain; Gaurav Khandelwal; Chandrashekhar Kaushik; Scott Ge; Wenxiang Hu,956-961,6,https://doi.org/10.1145/2950290.2983955,,,FALSE
FSE,2016,conf/sigsoft/fse2016,Industrial Papers,Cluster-based test suite functional analysis.,Marcel Zalmanovici; Orna Raz; Rachel Tzoref-Brill,962-967,6,https://doi.org/10.1145/2950290.2983957,,,FALSE
FSE,2016,conf/sigsoft/fse2016,Industrial Papers,A portable interface for runtime energy monitoring.,Connor Imes; Lars Bergstrom; Henry Hoffmann,968-974,7,https://doi.org/10.1145/2950290.2983956,,,FALSE
FSE,2016,conf/sigsoft/fse2016,Industrial Papers,Learning for test prioritization: an industrial case study.,Benjamin Busjaeger; Tao Xie,975-980,6,https://doi.org/10.1145/2950290.2983954,,,FALSE
FSE,2016,conf/sigsoft/fse2016,Industrial Papers,Combinatorial generation of structurally complex test inputs for commercial software applications.,Hua Zhong; Lingming Zhang; Sarfraz Khurshid,981-986,6,https://doi.org/10.1145/2950290.2983959,,,FALSE
FSE,2016,conf/sigsoft/fse2016,Industrial Papers,Automated test input generation for Android: are we really there yet in an industrial case?,Xia Zeng; Dengfeng Li; Wujie Zheng; Fan Xia; Yuetang Deng; Wing Lam; Wei Yang; Tao Xie,987-992,6,https://doi.org/10.1145/2950290.2983958,,,FALSE
FSE,2016,conf/sigsoft/fse2016,Tool Demonstrations,NonDex: a tool for detecting and debugging wrong assumptions on Java API specifications.,Alex Gyori; Ben Lambeth; August Shi; Owolabi Legunsen; Darko Marinov,993-997,5,https://doi.org/10.1145/2950290.2983932,,,FALSE
FSE,2016,conf/sigsoft/fse2016,Tool Demonstrations,TIPMerge: recommending developers for merging branches.,Catarina Costa; Jair Figueiredo; Anita Sarma; Leonardo Murta,998-1002,5,https://doi.org/10.1145/2950290.2983936,,,FALSE
FSE,2016,conf/sigsoft/fse2016,Tool Demonstrations,Time-travel debugging for JavaScript/Node.js.,Earl T. Barr; Mark Marron; Ed Maurer; Dan Moseley; Gaurav Seth,1003-1007,5,https://doi.org/10.1145/2950290.2983933,,,FALSE
FSE,2016,conf/sigsoft/fse2016,Tool Demonstrations,PUMConf: a tool to configure product specific use case and domain models in a product line.,Ines Hajri; Arda Goknil; Lionel C. Briand; Thierry Stephany,1008-1012,5,https://doi.org/10.1145/2950290.2983935,,,FALSE
FSE,2016,conf/sigsoft/fse2016,Tool Demonstrations,T2API: synthesizing API code usage templates from English texts with statistical translation.,Thanh Van Nguyen; Peter C. Rigby; Anh Tuan Nguyen; Mark Karanfil; Tien N. Nguyen,1013-1017,5,https://doi.org/10.1145/2950290.2983931,,,FALSE
FSE,2016,conf/sigsoft/fse2016,Tool Demonstrations,JBSE: a symbolic executor for Java programs with complex heap inputs.,Pietro Braione; Giovanni Denaro; Mauro Pezzè,1018-1022,5,https://doi.org/10.1145/2950290.2983940,,,FALSE
FSE,2016,conf/sigsoft/fse2016,Tool Demonstrations,ARdoc: app reviews development oriented classifier.,Sebastiano Panichella; Andrea Di Sorbo; Emitza Guzman; Corrado Aaron Visaggio; Gerardo Canfora; Harald C. Gall,1023-1027,5,https://doi.org/10.1145/2950290.2983938,,,FALSE
FSE,2016,conf/sigsoft/fse2016,Tool Demonstrations,Hunter: next-generation code reuse for Java.,Yuepeng Wang; Yu Feng; Ruben Martins; Arati Kaushik; Isil Dillig; Steven P. Reiss,1028-1032,5,https://doi.org/10.1145/2950290.2983934,,,FALSE
FSE,2016,conf/sigsoft/fse2016,Tool Demonstrations,BigDebug: interactive debugger for big data analytics in Apache Spark.,Muhammad Ali Gulzar; Matteo Interlandi; Tyson Condie; Miryung Kim,1033-1037,5,https://doi.org/10.1145/2950290.2983930,,,FALSE
FSE,2016,conf/sigsoft/fse2016,Tool Demonstrations,Visualizing code and coverage changes for code review.,Sebastiaan Oosterwaal; Arie van Deursen; Roberta Coelho; Anand Ashok Sawant; Alberto Bacchelli,1038-1041,4,https://doi.org/10.1145/2950290.2983929,,,FALSE
FSE,2016,conf/sigsoft/fse2016,Tool Demonstrations,End-to-end memory behavior profiling with DINAMITE.,Svetozar Miucin; Conor Brady; Alexandra Fedorova,1042-1046,5,https://doi.org/10.1145/2950290.2983941,,,FALSE
FSE,2016,conf/sigsoft/fse2016,Tool Demonstrations,Validate your SPDX files for open source license violations.,Demetris Paschalides; Georgia M. Kapitsaki,1047-1051,5,https://doi.org/10.1145/2950290.2983939,,,FALSE
FSE,2016,conf/sigsoft/fse2016,Tool Demonstrations,FSX: a tool for fine-grained incremental unit test generation for C/C++ programs.,Hiroaki Yoshida; Susumu Tokumoto; Mukul R. Prasad; Indradeep Ghosh; Tadahiro Uehara,1052-1056,5,https://doi.org/10.1145/2950290.2983937,,,FALSE
FSE,2016,conf/sigsoft/fse2016,Doctoral Symposium,Refactoring and migration of cascading style sheets: towards optimization and improved maintainability.,Davood Mazinanian,1057-1059,3,https://doi.org/10.1145/2950290.2983943,,,FALSE
FSE,2016,conf/sigsoft/fse2016,Doctoral Symposium,Developing a reusable control-based approach to build self-adaptive software systems with formal guarantees.,Stepan Shevtsov,1060-1062,3,https://doi.org/10.1145/2950290.2983949,,,FALSE
FSE,2016,conf/sigsoft/fse2016,Doctoral Symposium,Automating repetitive code changes using examples.,Reudismam Rolim,1063-1065,3,https://doi.org/10.1145/2950290.2983944,,,FALSE
FSE,2016,conf/sigsoft/fse2016,Doctoral Symposium,Understanding and improving continuous integration.,Michael Hilton,1066-1067,2,https://doi.org/10.1145/2950290.2983952,,,FALSE
FSE,2016,conf/sigsoft/fse2016,Doctoral Symposium,Guided code synthesis using deep neural networks.,Carol V. Alexandru,1068-1070,3,https://doi.org/10.1145/2950290.2983951,,,FALSE
FSE,2016,conf/sigsoft/fse2016,Doctoral Symposium,Generating interactive web pages from storyboards.,Pavel Panchekha,1071-1072,2,https://doi.org/10.1145/2950290.2983948,,,FALSE
FSE,2016,conf/sigsoft/fse2016,Doctoral Symposium,Data structure synthesis.,Calvin Loncaric,1073-1075,3,https://doi.org/10.1145/2950290.2983946,,,FALSE
FSE,2016,conf/sigsoft/fse2016,Doctoral Symposium,Understanding behavioural patterns in JavaScript.,Saba Alimadadi,1076-1078,3,https://doi.org/10.1145/2950290.2983947,,,FALSE
FSE,2016,conf/sigsoft/fse2016,Doctoral Symposium,Regression testing of web applications using Record/Replay tools.,Mouna Hammoudi,1079-1081,3,https://doi.org/10.1145/2950290.2983942,,,FALSE
FSE,2016,conf/sigsoft/fse2016,Doctoral Symposium,Supporting change in product lines within the context of use case-driven development and testing.,Ines Hajri,1082-1084,3,https://doi.org/10.1145/2950290.2983945,,,FALSE
FSE,2016,conf/sigsoft/fse2016,Doctoral Symposium,Input-sensitive performance testing.,Qi Luo,1085-1087,3,https://doi.org/10.1145/2950290.2983953,,,FALSE
FSE,2016,conf/sigsoft/fse2016,Doctoral Symposium,On the utility of dominator mutants for mutation testing.,Bob Kurtz,1088-1090,3,https://doi.org/10.1145/2950290.2983950,,,FALSE
FSE,2016,conf/sigsoft/fse2016,Graduate Submissions,Effective assignment and assistance to software developers and reviewers.,Motahareh Bahrami Zanjani,1091-1093,3,https://doi.org/10.1145/2950290.2983960,,,FALSE
FSE,2016,conf/sigsoft/fse2016,Graduate Submissions,RABIEF: range analysis based integer error fixing.,Xi Cheng,1094-1096,3,https://doi.org/10.1145/2950290.2983961,,,FALSE
FSE,2016,conf/sigsoft/fse2016,Graduate Submissions,Fine-grained binary code authorship identification.,Xiaozhu Meng,1097-1099,3,https://doi.org/10.1145/2950290.2983962,,,FALSE
FSE,2016,conf/sigsoft/fse2016,Graduate Submissions,Identifying participants for collaborative merge.,Catarina Costa,1100-1102,3,https://doi.org/10.1145/2950290.2983963,,,FALSE
FSE,2016,conf/sigsoft/fse2016,Graduate Submissions,Cozy: synthesizing collection data structures.,Calvin Loncaric,1103-1105,3,https://doi.org/10.1145/2950290.2986032,,,FALSE
FSE,2016,conf/sigsoft/fse2016,Graduate Submissions,Constraint-based event trace reduction.,Jie Wang,1106-1108,3,https://doi.org/10.1145/2950290.2983964,,,FALSE
FSE,2016,conf/sigsoft/fse2016,Graduate Submissions,Automatic trigger generation for end user written rules for home automation.,Chandrakana Nandi,1109-1111,3,https://doi.org/10.1145/2950290.2983965,,,FALSE
FSE,2016,conf/sigsoft/fse2016,Graduate Submissions,Hotspot symbolic execution of floating-point programs.,Minghui Quan,1112-1114,3,https://doi.org/10.1145/2950290.2983966,,,FALSE
FSE,2016,conf/sigsoft/fse2016,Graduate Submissions,Evaluation of fault localization techniques.,Spencer Pearson,1115-1117,3,https://doi.org/10.1145/2950290.2983967,,,FALSE
FSE,2016,conf/sigsoft/fse2016,Graduate Submissions,How should static analysis tools explain anomalies to developers?,Titus Barik,1118-1120,3,https://doi.org/10.1145/2950290.2983968,,,FALSE
FSE,2016,conf/sigsoft/fse2016,Graduate Submissions,Repairing test dependence.,Wing Lam,1121-1123,3,https://doi.org/10.1145/2950290.2983969,,,FALSE
FSE,2016,conf/sigsoft/fse2016,Graduate Submissions,Combining bug detection and test case generation.,Martin Kellogg,1124-1126,3,https://doi.org/10.1145/2950290.2983970,,,FALSE
FSE,2016,conf/sigsoft/fse2016,Graduate Submissions,SmartDebug: an interactive debug assistant for Java.,Xinrui Guo,1127-1129,3,https://doi.org/10.1145/2950290.2983971,,,FALSE
FSE,2016,conf/sigsoft/fse2016,Graduate Submissions,Static loop analysis and its applications.,Xie Xiaofei,1130-1132,3,https://doi.org/10.1145/2950290.2983972,,,FALSE
FSE,2016,conf/sigsoft/fse2016,Graduate Submissions,Social health cues developers use when choosing open source packages.,Andrew Head,1133-1135,3,https://doi.org/10.1145/2950290.2983973,,,FALSE
FSE,2016,conf/sigsoft/fse2016,Graduate Submissions,Finding and breaking test dependencies to speed up test execution.,Sebastian Kappler,1136-1138,3,https://doi.org/10.1145/2950290.2983974,,,FALSE
FSE,2016,conf/sigsoft/fse2016,Graduate Submissions,Automatic performance testing using input-sensitive profiling.,Qi Luo,1139-1141,3,https://doi.org/10.1145/2950290.2983975,,,FALSE
FSE,2016,conf/sigsoft/fse2016,Undergraduate Submissions,Enforcing correct array indexes with a type system.,Joseph Santino,1142-1144,3,https://doi.org/10.1145/2950290.2983976,,,FALSE
FSE,2016,conf/sigsoft/fse2016,Undergraduate Submissions,Discovering additional violations of Java API invariants.,Waylon Huang,1145-1147,3,https://doi.org/10.1145/2950290.2983977,,,FALSE
FSE,2016,conf/sigsoft/fse2016,Undergraduate Submissions,Preventing signedness errors in numerical computations in Java.,Christopher A. Mackie,1148-1150,3,https://doi.org/10.1145/2950290.2983978,,,FALSE
FSE,2016,conf/sigsoft/fse2016,Undergraduate Submissions,Bounded model checking of state-space digital systems: the impact of finite word-length effects on the implementation of fixed-point digital controllers based on state-space modeling.,Felipe R. Monteiro,1151-1153,3,https://doi.org/10.1145/2950290.2983979,,,FALSE
FSE,2016,conf/sigsoft/fse2016,Undergraduate Submissions,"Atlas: an intelligent, performant framework for web-based grid computing.",Sachith Gullapalli,1154-1156,3,https://doi.org/10.1145/2950290.2983980,,,FALSE
FSE,2017,conf/sigsoft/fse2017,Invited Papers,The rising tide lifts all boats: the advancement of science in cyber security (invited talk).,Laurie Williams,1,1,https://doi.org/10.1145/3106237.3121272,,,FALSE
FSE,2017,conf/sigsoft/fse2017,Invited Papers,Verifying the forecast: how climate models are developed and tested (invited talk).,Steve Easterbrook,2,1,https://doi.org/10.1145/3106237.3121271,,,FALSE
FSE,2017,conf/sigsoft/fse2017,Invited Papers,Software engineering research results in industrial practice: a tale of two projects (invited talk).,Wolfgang Emmerich,3,1,https://doi.org/10.1145/3106237.3121273,,,FALSE
FSE,2017,conf/sigsoft/fse2017,Invited Papers,"Reflections on the REST architectural style and ""principled design of the modern web architecture"" (impact paper award).",Roy T. Fielding; Richard N. Taylor; Justin R. Erenkrantz; Michael M. Gorlick; Jim Whitehead; Rohit Khare; Peyman Oreizy,4-14,11,https://doi.org/10.1145/3106237.3121282,,,FALSE
FSE,2017,conf/sigsoft/fse2017,Research Papers,A fast causal profiler for task parallel programs.,Adarsh Yoga; Santosh Nagarakatte,15-26,12,https://doi.org/10.1145/3106237.3106254,,,TRUE
FSE,2017,conf/sigsoft/fse2017,Research Papers,On the scalability of Linux kernel maintainers' work.,Minghui Zhou; Qingying Chen; Audris Mockus; Fengguang Wu,27-37,11,https://doi.org/10.1145/3106237.3106287,,,TRUE
FSE,2017,conf/sigsoft/fse2017,Research Papers,Modeling and verification of evolving cyber-physical spaces.,Christos Tsigkanos; Timo Kehrer; Carlo Ghezzi,38-48,11,https://doi.org/10.1145/3106237.3106299,,,TRUE
FSE,2017,conf/sigsoft/fse2017,Research Papers,Easy over hard: a case study on deep learning.,Wei Fu; Tim Menzies,49-60,12,https://doi.org/10.1145/3106237.3106256,,,TRUE
FSE,2017,conf/sigsoft/fse2017,Research Papers,Finding near-optimal configurations in product lines by random sampling.,Jeho Oh; Don S. Batory; Margaret Myers; Norbert Siegmund,61-71,11,https://doi.org/10.1145/3106237.3106273,,,TRUE
FSE,2017,conf/sigsoft/fse2017,Research Papers,Revisiting unsupervised learning for defect prediction.,Wei Fu; Tim Menzies,72-83,12,https://doi.org/10.1145/3106237.3106257,,,TRUE
FSE,2017,conf/sigsoft/fse2017,Research Papers,Loopster: static loop termination analysis.,Xiaofei Xie; Bihuan Chen; Liang Zou; Shang-Wei Lin; Yang Liu; Xiaohong Li,84-94,11,https://doi.org/10.1145/3106237.3106260,,,TRUE
FSE,2017,conf/sigsoft/fse2017,Research Papers,CodeCarbonCopy.,Stelios Sidiroglou-Douskos; Eric Lahtinen; Anthony Eden; Fan Long; Martin Rinard,95-105,11,https://doi.org/10.1145/3106237.3106269,,,TRUE
FSE,2017,conf/sigsoft/fse2017,Research Papers,"The power of ""why"" and ""why not"": enriching scenario exploration with provenance.",Tim Nelson; Natasha Danas; Daniel J. Dougherty; Shriram Krishnamurthi,106-116,11,https://doi.org/10.1145/3106237.3106272,,,TRUE
FSE,2017,conf/sigsoft/fse2017,Research Papers,Where is the bug and how is it fixed? an experiment with practitioners.,Marcel Böhme; Ezekiel O. Soremekun; Sudipta Chattopadhyay; Emamurho Ugherughe; Andreas Zeller,117-128,12,https://doi.org/10.1145/3106237.3106255,,,TRUE
FSE,2017,conf/sigsoft/fse2017,Research Papers,Understanding misunderstandings in source code.,Dan Gopstein; Jake Iannacone; Yu Yan; Lois DeLong; Yanyan Zhuang; Martin K.-C. Yeh; Justin Cappos,129-139,11,https://doi.org/10.1145/3106237.3106264,,,TRUE
FSE,2017,conf/sigsoft/fse2017,Research Papers,Measuring neural efficiency of program comprehension.,Janet Siegmund; Norman Peitek; Chris Parnin; Sven Apel; Johannes Hofmeister; Christian Kästner; Andrew Begel; Anja Bethmann; André Brechmann,140-150,11,https://doi.org/10.1145/3106237.3106268,,,TRUE
FSE,2017,conf/sigsoft/fse2017,Research Papers,Bayesian specification learning for finding API usage errors.,Vijayaraghavan Murali; Swarat Chaudhuri; Chris Jermaine,151-162,12,https://doi.org/10.1145/3106237.3106284,,,TRUE
FSE,2017,conf/sigsoft/fse2017,Research Papers,Synergistic debug-repair of heap manipulations.,Sahil Verma; Subhajit Roy,163-173,11,https://doi.org/10.1145/3106237.3106263,,,TRUE
FSE,2017,conf/sigsoft/fse2017,Research Papers,Failure-directed program trimming.,Kostas Ferles; Valentin Wüstholz; Maria Christakis; Isil Dillig,174-185,12,https://doi.org/10.1145/3106237.3106249,,,TRUE
FSE,2017,conf/sigsoft/fse2017,Research Papers,Why modern open source projects fail.,Jailton Coelho; Marco Tulio Valente,186-196,11,https://doi.org/10.1145/3106237.3106246,,,TRUE
FSE,2017,conf/sigsoft/fse2017,Research Papers,"Trade-offs in continuous integration: assurance, security, and flexibility.",Michael Hilton; Nicholas Nelson; Timothy Tunnell; Darko Marinov; Danny Dig,197-207,11,https://doi.org/10.1145/3106237.3106270,,,TRUE
FSE,2017,conf/sigsoft/fse2017,Research Papers,µDroid: an energy-aware mutation testing framework for Android.,Reyhaneh Jabbarvand; Sam Malek,208-219,12,https://doi.org/10.1145/3106237.3106244,,,TRUE
FSE,2017,conf/sigsoft/fse2017,Research Papers,PATDroid: permission-aware GUI testing of Android.,Alireza Sadeghi; Reyhaneh Jabbarvand; Sam Malek,220-232,13,https://doi.org/10.1145/3106237.3106250,,,TRUE
FSE,2017,conf/sigsoft/fse2017,Research Papers,Enabling mutation testing for Android apps.,Mario Linares Vásquez; Gabriele Bavota; Michele Tufano; Kevin Moran; Massimiliano Di Penta; Christopher Vendome; Carlos Bernal-Cárdenas; Denys Poshyvanyk,233-244,12,https://doi.org/10.1145/3106237.3106275,,,TRUE
FSE,2017,conf/sigsoft/fse2017,Research Papers,"Guided, stochastic model-based GUI testing of Android apps.",Ting Su; Guozhu Meng; Yuting Chen; Ke Wu; Weiming Yang; Yao Yao; Geguang Pu; Yang Liu; Zhendong Su,245-256,12,https://doi.org/10.1145/3106237.3106298,,,TRUE
FSE,2017,conf/sigsoft/fse2017,Research Papers,Using bad learners to find good configurations.,Vivek Nair; Tim Menzies; Norbert Siegmund; Sven Apel,257-267,11,https://doi.org/10.1145/3106237.3106238,,,TRUE
FSE,2017,conf/sigsoft/fse2017,Research Papers,Attributed variability models: outside the comfort zone.,Norbert Siegmund; Stefan Sobernig; Sven Apel,268-278,11,https://doi.org/10.1145/3106237.3106251,,,TRUE
FSE,2017,conf/sigsoft/fse2017,Research Papers,Kmax: finding all configurations of Kbuild makefiles statically.,Paul Gazzillo,279-290,12,https://doi.org/10.1145/3106237.3106283,,,TRUE
FSE,2017,conf/sigsoft/fse2017,Research Papers,Is there a mismatch between real-world feature models and product-line research?,Alexander Knüppel; Thomas Thüm; Stephan Mennicke; Jens Meinicke; Ina Schaefer,291-302,12,https://doi.org/10.1145/3106237.3106252,,,TRUE
FSE,2017,conf/sigsoft/fse2017,Research Papers,Adaptively generating high quality fixes for atomicity violations.,Yan Cai; Lingwei Cao; Jing Zhao,303-314,12,https://doi.org/10.1145/3106237.3106239,,,TRUE
FSE,2017,conf/sigsoft/fse2017,Research Papers,AtexRace: across thread and execution sampling for in-house race detection.,Yu Guo; Yan Cai; Zijiang Yang,315-325,11,https://doi.org/10.1145/3106237.3106242,,,TRUE
FSE,2017,conf/sigsoft/fse2017,Research Papers,Symbolic execution of programmable logic controller code.,Shengjian Guo; Meng Wu; Chao Wang,326-336,11,https://doi.org/10.1145/3106237.3106245,,,TRUE
FSE,2017,conf/sigsoft/fse2017,Research Papers,Thread-modular static analysis for relaxed memory models.,Markus Kusano; Chao Wang,337-348,12,https://doi.org/10.1145/3106237.3106243,,,TRUE
FSE,2017,conf/sigsoft/fse2017,Research Papers,ARTINALI: dynamic invariant detection for cyber-physical system security.,Maryam Raiyat Aliabadi; Amita Ajith Kamath; Julien Gascon-Samson; Karthik Pattabiraman,349-361,13,https://doi.org/10.1145/3106237.3106282,,,TRUE
FSE,2017,conf/sigsoft/fse2017,Research Papers,A symbolic justice violations transition system for unrealizable GR(1) specifications.,Aviv Kuvent; Shahar Maoz; Jan Oliver Ringert,362-372,11,https://doi.org/10.1145/3106237.3106240,,,TRUE
FSE,2017,conf/sigsoft/fse2017,Research Papers,Automated control of multiple software goals using multiple actuators.,Martina Maggio; Alessandro Vittorio Papadopoulos; Antonio Filieri; Henry Hoffmann,373-384,12,https://doi.org/10.1145/3106237.3106247,,,TRUE
FSE,2017,conf/sigsoft/fse2017,Research Papers,Why do developers use trivial packages? an empirical case study on npm.,Rabe Abdalkareem; Olivier Nourry; Sultan Wehaibi; Suhaib Mujahid; Emad Shihab,385-395,11,https://doi.org/10.1145/3106237.3106267,,,TRUE
FSE,2017,conf/sigsoft/fse2017,Research Papers,Detecting missing information in bug descriptions.,Oscar Chaparro; Jing Lu; Fiorella Zampetti; Laura Moreno; Massimiliano Di Penta; Andrian Marcus; Gabriele Bavota; Vincent Ng,396-407,12,https://doi.org/10.1145/3106237.3106285,,,TRUE
FSE,2017,conf/sigsoft/fse2017,Research Papers,Continuous variable-specific resolutions of feature interactions.,Mohammad Hadi Zibaeenejad; Chi Zhang; Joanne M. Atlee,408-418,11,https://doi.org/10.1145/3106237.3106302,,,TRUE
FSE,2017,conf/sigsoft/fse2017,Research Papers,"Model-level, platform-independent debugging in the context of the model-driven development of real-time systems.",Mojtaba Bagherzadeh; Nicolas Hili; Juergen Dingel,419-430,12,https://doi.org/10.1145/3106237.3106278,,,TRUE
FSE,2017,conf/sigsoft/fse2017,Research Papers,Cooperative kernels: GPU multitasking for blocking algorithms.,Tyler Sorensen; Hugues Evrard; Alastair F. Donaldson,431-441,11,https://doi.org/10.1145/3106237.3106265,,,TRUE
FSE,2017,conf/sigsoft/fse2017,Research Papers,Toward full elasticity in distributed static analysis: the case of callgraph analysis.,Diego Garbervetsky; Edgardo Zoppi; Benjamin Livshits,442-453,12,https://doi.org/10.1145/3106237.3106261,,,TRUE
FSE,2017,conf/sigsoft/fse2017,Research Papers,Probabilistic model checking of perturbed MDPs with applications to cloud computing.,Yamilet R. Serrano Llerena; Guoxin Su; David S. Rosenblum,454-464,11,https://doi.org/10.1145/3106237.3106301,,,TRUE
FSE,2017,conf/sigsoft/fse2017,Research Papers,Understanding the impact of refactoring on smells: a longitudinal study of 23 software projects.,Diego Cedrim; Alessandro Garcia; Melina Mongiovi; Rohit Gheyi; Leonardo da Silva Sousa; Rafael Maiani de Mello; Baldoino Fonseca; Márcio Ribeiro; Alexander Chávez,465-475,11,https://doi.org/10.1145/3106237.3106259,,,TRUE
FSE,2017,conf/sigsoft/fse2017,Research Papers,Cimplifier: automatically debloating containers.,Vaibhav Rastogi; Drew Davidson; Lorenzo De Carli; Somesh Jha; Patrick D. McDaniel,476-486,11,https://doi.org/10.1145/3106237.3106271,,,TRUE
FSE,2017,conf/sigsoft/fse2017,Research Papers,Craig vs. Newton in software model checking.,Daniel Dietsch; Matthias Heizmann; Betim Musa; Alexander Nutz; Andreas Podelski,487-497,11,https://doi.org/10.1145/3106237.3106307,,,TRUE
FSE,2017,conf/sigsoft/fse2017,Research Papers,Fairness testing: testing software for discrimination.,Sainyam Galhotra; Yuriy Brun; Alexandra Meliou,498-510,13,https://doi.org/10.1145/3106237.3106277,,,TRUE
FSE,2017,conf/sigsoft/fse2017,Research Papers,The care and feeding of wild-caught mutants.,David Bingham Brown; Michael Vaughn; Ben Liblit; Thomas W. Reps,511-522,12,https://doi.org/10.1145/3106237.3106280,,,TRUE
FSE,2017,conf/sigsoft/fse2017,Research Papers,QTEP: quality-aware test case prioritization.,Song Wang; Jaechang Nam; Lin Tan,523-534,12,https://doi.org/10.1145/3106237.3106258,,,TRUE
FSE,2017,conf/sigsoft/fse2017,Research Papers,Constraint normalization and parameterized caching for quantitative program analysis.,Tegan Brennan; Nestan Tsiskaridze; Nicolás Rosner; Abdulbaki Aydin; Tevfik Bultan,535-546,12,https://doi.org/10.1145/3106237.3106303,,,TRUE
FSE,2017,conf/sigsoft/fse2017,Research Papers,Generalized observational slicing for tree-represented modelling languages.,Nicolas E. Gold; David W. Binkley; Mark Harman; Syed S. Islam; Jens Krinke; Shin Yoo,547-558,12,https://doi.org/10.1145/3106237.3106304,,,TRUE
FSE,2017,conf/sigsoft/fse2017,Research Papers,On evidence preservation requirements for forensic-ready systems.,Dalal Alrajeh; Liliana Pasquale; Bashar Nuseibeh,559-569,11,https://doi.org/10.1145/3106237.3106308,,,TRUE
FSE,2017,conf/sigsoft/fse2017,Research Papers,BDCI: behavioral driven conflict identification.,Fabrizio Pastore; Leonardo Mariani; Daniela Micucci,570-581,12,https://doi.org/10.1145/3106237.3106296,,,TRUE
FSE,2017,conf/sigsoft/fse2017,Research Papers,NoFAQ: synthesizing command repairs from examples.,Loris D'Antoni; Rishabh Singh; Michael Vaughn,582-592,11,https://doi.org/10.1145/3106237.3106241,,,TRUE
FSE,2017,conf/sigsoft/fse2017,Research Papers,S3: syntax- and semantic-guided repair synthesis via programming by examples.,Xuan-Bach D. Le; Duc-Hiep Chu; David Lo; Claire Le Goues; Willem Visser,593-604,12,https://doi.org/10.1145/3106237.3106309,,,TRUE
FSE,2017,conf/sigsoft/fse2017,Research Papers,Counterexample-guided approach to finding numerical invariants.,ThanhVu Nguyen; Timos Antonopoulos; Andrew Ruef; Michael Hicks,605-615,11,https://doi.org/10.1145/3106237.3106281,,,TRUE
FSE,2017,conf/sigsoft/fse2017,Research Papers,Discovering relational specifications.,Calvin Smith; Gabriel Ferns; Aws Albarghouthi,616-626,11,https://doi.org/10.1145/3106237.3106279,,,TRUE
FSE,2017,conf/sigsoft/fse2017,Research Papers,Steelix: program-state based binary fuzzing.,Yuekang Li; Bihuan Chen; Mahinthan Chandramohan; Shang-Wei Lin; Yang Liu; Alwen Tiu,627-637,11,https://doi.org/10.1145/3106237.3106295,,,TRUE
FSE,2017,conf/sigsoft/fse2017,Research Papers,CodeMatch: obfuscation won't conceal your repackaged app.,Leonid Glanz; Sven Amann; Michael Eichberg; Michael Reif; Ben Hermann; Johannes Lerch; Mira Mezini,638-648,11,https://doi.org/10.1145/3106237.3106305,,,TRUE
FSE,2017,conf/sigsoft/fse2017,Research Papers,A compiler and verifier for page access oblivious computation.,Rohit Sinha; Sriram K. Rajamani; Sanjit A. Seshia,649-660,12,https://doi.org/10.1145/3106237.3106248,,,TRUE
FSE,2017,conf/sigsoft/fse2017,Research Papers,Automatic generation of inter-component communication exploits for Android applications.,Joshua Garcia; Mahmoud Hammad; Negar Ghorbani; Sam Malek,661-671,11,https://doi.org/10.1145/3106237.3106286,,,TRUE
FSE,2017,conf/sigsoft/fse2017,Research Papers,OASIS: prioritizing static analysis warnings for Android apps based on app user reviews.,Lili Wei; Yepang Liu; Shing-Chi Cheung,672-682,11,https://doi.org/10.1145/3106237.3106294,,,TRUE
FSE,2017,conf/sigsoft/fse2017,Research Papers,"Recovering clear, natural identifiers from obfuscated JS names.",Bogdan Vasilescu; Casey Casalnuovo; Premkumar T. Devanbu,683-693,11,https://doi.org/10.1145/3106237.3106289,,,TRUE
FSE,2017,conf/sigsoft/fse2017,Research Papers,DESCRY: reproducing system-level concurrency failures.,Tingting Yu; Tarannum S. Zaman; Chao Wang,694-704,11,https://doi.org/10.1145/3106237.3106266,,,TRUE
FSE,2017,conf/sigsoft/fse2017,Research Papers,Reproducing concurrency failures from crash stacks.,Francesco A. Bianchi; Mauro Pezzè; Valerio Terragni,705-716,12,https://doi.org/10.1145/3106237.3106292,,,TRUE
FSE,2017,conf/sigsoft/fse2017,Research Papers,Automatically analyzing groups of crashes for finding correlations.,Marco Castelluccio; Carlo Sansone; Luisa Verdoliva; Giovanni Poggi,717-726,10,https://doi.org/10.1145/3106237.3106306,,,TRUE
FSE,2017,conf/sigsoft/fse2017,Research Papers,Automatic inference of code transforms for patch generation.,Fan Long; Peter Amidon; Martin Rinard,727-739,13,https://doi.org/10.1145/3106237.3106253,,,TRUE
FSE,2017,conf/sigsoft/fse2017,Research Papers,A feasibility study of using automated program repair for introductory programming assignments.,Jooyong Yi; Umair Z. Ahmed; Amey Karkare; Shin Hwei Tan; Abhik Roychoudhury,740-751,12,https://doi.org/10.1145/3106237.3106262,,,TRUE
FSE,2017,conf/sigsoft/fse2017,Research Papers,Automatically diagnosing and repairing error handling bugs in C.,Yuchi Tian; Baishakhi Ray,752-762,11,https://doi.org/10.1145/3106237.3106300,,,TRUE
FSE,2017,conf/sigsoft/fse2017,Research Papers,Are deep neural networks the best choice for modeling source code?,Vincent J. Hellendoorn; Premkumar T. Devanbu,763-773,11,https://doi.org/10.1145/3106237.3106290,,,TRUE
FSE,2017,conf/sigsoft/fse2017,Research Papers,Understanding the impact of support for iteration on code search.,Lee Martie; André van der Hoek; Thomas Kwak,774-785,12,https://doi.org/10.1145/3106237.3106293,,,TRUE
FSE,2017,conf/sigsoft/fse2017,Research Papers,LAMP: data provenance for graph based machine learning algorithms through derivative computation.,Shiqing Ma; Yousra Aafer; Zhaogui Xu; Wen-Chuan Lee; Juan Zhai; Yingqi Liu; Xiangyu Zhang,786-797,12,https://doi.org/10.1145/3106237.3106291,,,TRUE
FSE,2017,conf/sigsoft/fse2017,Research Papers,More accurate recommendations for method-level changes.,Georg Dotzler; Marius Kamp; Patrick Kreutzer; Michael Philippsen,798-808,11,https://doi.org/10.1145/3106237.3106276,,,TRUE
FSE,2017,conf/sigsoft/fse2017,Research Papers,Regression test selection across JVM boundaries.,Ahmet Çelik; Marko Vasic; Aleksandar Milicevic; Milos Gligoric,809-820,12,https://doi.org/10.1145/3106237.3106297,,,TRUE
FSE,2017,conf/sigsoft/fse2017,Research Papers,Measuring the cost of regression testing in practice: a study of Java projects using continuous integration.,Adriaan Labuschagne; Laura Inozemtseva; Reid Holmes,821-830,10,https://doi.org/10.1145/3106237.3106288,,,TRUE
FSE,2017,conf/sigsoft/fse2017,Research Papers,Better test cases for better automated program repair.,Jinqiu Yang; Alexey Zhikhartsev; Yuefei Liu; Lin Tan,831-841,11,https://doi.org/10.1145/3106237.3106274,,,TRUE
FSE,2017,conf/sigsoft/fse2017,Testing and Security in the Real World,When program analysis meets mobile security: an industrial study of misusing Android internet sockets.,Wenqi Bu; Minhui Xue; Lihua Xu; Yajin Zhou; Zhushou Tang; Tao Xie,842-847,6,https://doi.org/10.1145/3106237.3117764,,,FALSE
FSE,2017,conf/sigsoft/fse2017,Testing and Security in the Real World,File-level vs. module-level regression test selection for .NET.,Marko Vasic; Zuhair Parvez; Aleksandar Milicevic; Milos Gligoric,848-853,6,https://doi.org/10.1145/3106237.3117763,,,FALSE
FSE,2017,conf/sigsoft/fse2017,Testing and Security in the Real World,Record and replay for Android: are we there yet in industrial cases?,Wing Lam; Zhengkai Wu; Dengfeng Li; Wenyu Wang; Haibing Zheng; Hui Luo; Peng Yan; Yuetang Deng; Tao Xie,854-859,6,https://doi.org/10.1145/3106237.3117769,,,FALSE
FSE,2017,conf/sigsoft/fse2017,Testing and Security in the Real World,Model-driven software engineering in practice: privacy-enhanced filtering of network traffic.,Roel van Dijk; Christophe Creeten; Jeroen van der Ham; Jeroen van den Bos,860-865,6,https://doi.org/10.1145/3106237.3117777,,,FALSE
FSE,2017,conf/sigsoft/fse2017,The State of the Practice,Strong agile metrics: mining log data to determine predictive power of software metrics for continuous delivery teams.,Hennie Huijgens; Robert Lamping; Dick Stevens; Hartger Rothengatter; Georgios Gousios; Daniele Romano,866-871,6,https://doi.org/10.1145/3106237.3117779,,,FALSE
FSE,2017,conf/sigsoft/fse2017,The State of the Practice,Screening heuristics for project gating systems.,Zahy Volf; Edi Shmueli,872-877,6,https://doi.org/10.1145/3106237.3117766,,,FALSE
FSE,2017,conf/sigsoft/fse2017,The State of the Practice,Natural language querying in SAP-ERP platform.,Diptikalyan Saha; Neelamadhav Gantayat; Senthil Mani; Barry Mitchell,878-883,6,https://doi.org/10.1145/3106237.3117765,,,FALSE
FSE,2017,conf/sigsoft/fse2017,The State of the Practice,Serverless computing: economic and architectural impact.,Gojko Adzic; Robert Chatley,884-889,6,https://doi.org/10.1145/3106237.3117767,,,FALSE
FSE,2017,conf/sigsoft/fse2017,Understanding Software Developers,What do software engineers care about? gaps between research and practice.,Vladimir Ivanov; Alan Rogers; Giancarlo Succi; Jooyong Yi; Vasilii Zorin,890-895,6,https://doi.org/10.1145/3106237.3117778,,,FALSE
FSE,2017,conf/sigsoft/fse2017,Understanding Software Developers,Reference architectures and Scrum: friends or foes?,Matthias Galster; Samuil Angelov; Silverio Martínez-Fernández; Dan Tofan,896-901,6,https://doi.org/10.1145/3106237.3117773,,,FALSE
FSE,2017,conf/sigsoft/fse2017,Understanding Software Developers,Guidelines for adopting frontend architectures and patterns in microservices-based systems.,Holger Harms; Collin Rogowski; Luigi Lo Iacono,902-907,6,https://doi.org/10.1145/3106237.3117775,,,FALSE
FSE,2017,conf/sigsoft/fse2017,Understanding Software Developers,Improving understanding of dynamically typed software developed by agile practitioners.,Jair García; Kelly Garcés,908-913,6,https://doi.org/10.1145/3106237.3117772,,,FALSE
FSE,2017,conf/sigsoft/fse2017,Data-Driven Improvement,Automated identification of security issues from commit messages and bug reports.,Yaqin Zhou; Asankhaya Sharma,914-919,6,https://doi.org/10.1145/3106237.3117771,,,FALSE
FSE,2017,conf/sigsoft/fse2017,Data-Driven Improvement,LaChouTi: kernel vulnerability responding framework for the fragmented Android devices.,JingZheng Wu; Mutian Yang,920-925,6,https://doi.org/10.1145/3106237.3117768,,,FALSE
FSE,2017,conf/sigsoft/fse2017,Data-Driven Improvement,Applying deep learning based automatic bug triager to industrial projects.,Sun-Ro Lee; Min-Jae Heo; Chan-Gun Lee; Milhan Kim; Gaeul Jeong,926-931,6,https://doi.org/10.1145/3106237.3117776,,,FALSE
FSE,2017,conf/sigsoft/fse2017,Data-Driven Improvement,Static analysis for optimizing big data queries.,Diego Garbervetsky; Zvonimir Pavlinovic; Michael Barnett; Madanlal Musuvathi; Todd Mytkowicz; Edgardo Zoppi,932-937,6,https://doi.org/10.1145/3106237.3117774,,,FALSE
FSE,2017,conf/sigsoft/fse2017,Data-Driven Improvement,Automated testing of hybrid Simulink/Stateflow controllers: industrial case studies.,Reza Matinnejad; Shiva Nejati; Lionel C. Briand,938-943,6,https://doi.org/10.1145/3106237.3117770,,,FALSE
FSE,2017,conf/sigsoft/fse2017,Dynamic Analysis,QEMU-based framework for non-intrusive virtual machine instrumentation and introspection.,Pavel Dovgalyuk; Natalia Fursova; Ivan Vasiliev; Vladimir Makarov,944-948,5,https://doi.org/10.1145/3106237.3122817,,,FALSE
FSE,2017,conf/sigsoft/fse2017,Dynamic Analysis,RunDroid: recovering execution call graphs for Android applications.,Yujie Yuan; Lihua Xu; Xusheng Xiao; Andy Podgurski; Huibiao Zhu,949-953,5,https://doi.org/10.1145/3106237.3122821,,,FALSE
FSE,2017,conf/sigsoft/fse2017,Dynamic Analysis,RGSE: a regular property guided symbolic executor for Java.,Hengbiao Yu; Zhenbang Chen; Yufeng Zhang; Ji Wang; Wei Dong,954-958,5,https://doi.org/10.1145/3106237.3122830,,,FALSE
FSE,2017,conf/sigsoft/fse2017,Dynamic Analysis,A tool for automated reasoning about traces based on configurable formal semantics.,Ferhat Erata; Arda Goknil; Bedir Tekinerdogan; Geylani Kardas,959-963,5,https://doi.org/10.1145/3106237.3122825,,,FALSE
FSE,2017,conf/sigsoft/fse2017,Dynamic Analysis,VART: a tool for the automatic detection of regression faults.,Fabrizio Pastore; Leonardo Mariani,964-968,5,https://doi.org/10.1145/3106237.3122819,,,FALSE
FSE,2017,conf/sigsoft/fse2017,Models,DynAlloy analyzer: a tool for the specification and analysis of alloy models with dynamic behaviour.,Germán Regis; César Cornejo; Simón Gutiérrez Brida; Mariano Politano; Fernando Raverta; Pablo Ponzio; Nazareno Aguirre; Juan Pablo Galeotti; Marcelo F. Frias,969-973,5,https://doi.org/10.1145/3106237.3122826,,,FALSE
FSE,2017,conf/sigsoft/fse2017,Models,From scenario modeling to scenario programming for reactive systems with dynamic topology.,Joel Greenyer; Daniel Gritzner; Florian König; Jannik Dahlke; Jianwei Shi; Eric Wete,974-978,5,https://doi.org/10.1145/3106237.3122827,,,FALSE
FSE,2017,conf/sigsoft/fse2017,Models,CLTSA: labelled transition system analyser with counting fluent support.,Germán Regis; Renzo Degiovanni; Nicolás D'Ippolito; Nazareno Aguirre,979-983,5,https://doi.org/10.1145/3106237.3122828,,,FALSE
FSE,2017,conf/sigsoft/fse2017,Models,The MONDO collaboration framework: secure collaborative modeling over existing version control systems.,Csaba Debreceni; Gábor Bergmann; Márton Búr; István Ráth; Dániel Varró,984-988,5,https://doi.org/10.1145/3106237.3122829,,,FALSE
FSE,2017,conf/sigsoft/fse2017,Models,Model-based privacy and security analysis with CARiSMA.,Amir Shayan Ahmadian; Sven Peldszus; Qusai Ramadan; Jan Jürjens,989-993,5,https://doi.org/10.1145/3106237.3122823,,,FALSE
FSE,2017,conf/sigsoft/fse2017,Misc,"Cherry-picking of code commits in long-running, multi-release software.",Panuchart Bunyakiati; Chadarat Phipathananunth,994-998,5,https://doi.org/10.1145/3106237.3122818,,,FALSE
FSE,2017,conf/sigsoft/fse2017,Misc,ARCC: assistant for repetitive code comprehension.,Wilberto Z. Nunez; Victor J. Marin; Carlos R. Rivero,999-1003,5,https://doi.org/10.1145/3106237.3122824,,,FALSE
FSE,2017,conf/sigsoft/fse2017,Misc,JoanAudit: a tool for auditing common injection vulnerabilities.,Julian Thomé; Lwin Khin Shar; Domenico Bianculli; Lionel C. Briand,1004-1008,5,https://doi.org/10.1145/3106237.3122822,,,FALSE
FSE,2017,conf/sigsoft/fse2017,Misc,XSearch: a domain-specific cross-language relevant question retrieval tool.,Bowen Xu; Zhenchang Xing; Xin Xia; David Lo; Xuan-Bach D. Le,1009-1013,5,https://doi.org/10.1145/3106237.3122820,,,FALSE
FSE,2017,conf/sigsoft/fse2017,Doctoral Symposium,Using search-based software engineering to handle the changes with uncertainties for self-adaptive systems.,Lu Wang,1014-1017,4,https://doi.org/10.1145/3106237.3119871,,,FALSE
FSE,2017,conf/sigsoft/fse2017,Doctoral Symposium,DRACO: discovering refactorings that improve architecture using fine-grained co-change dependencies.,Marcos César de Oliveira,1018-1021,4,https://doi.org/10.1145/3106237.3119872,,,FALSE
FSE,2017,conf/sigsoft/fse2017,Doctoral Symposium,User- and analysis-driven context aware software development in mobile computing.,Mai Abusair,1022-1025,4,https://doi.org/10.1145/3106237.3119873,,,FALSE
FSE,2017,conf/sigsoft/fse2017,Doctoral Symposium,Recommender system for model driven software development.,Stefan Kögel,1026-1029,4,https://doi.org/10.1145/3106237.3119874,,,FALSE
FSE,2017,conf/sigsoft/fse2017,Doctoral Symposium,On the similarity of software development documentation.,Mathias Ellmann,1030-1033,4,https://doi.org/10.1145/3106237.3119875,,,FALSE
FSE,2017,conf/sigsoft/fse2017,Doctoral Symposium,Application of search-based software engineering methodologies for test suite optimization and evolution in mission critical mobile application development.,Andreas Schuler,1034-1037,4,https://doi.org/10.1145/3106237.3119876,,,FALSE
FSE,2017,conf/sigsoft/fse2017,Doctoral Symposium,Summarizing software engineering communication artifacts from different sources.,Verena Käfer,1038-1041,4,https://doi.org/10.1145/3106237.3119877,,,FALSE
FSE,2017,conf/sigsoft/fse2017,Doctoral Symposium,Model-based dynamic software project scheduling.,Natasha Nigar,1042-1045,4,https://doi.org/10.1145/3106237.3119879,,,FALSE
FSE,2017,conf/sigsoft/fse2017,Doctoral Symposium,System performance optimization via design and configuration space exploration.,Chong Tang,1046-1049,4,https://doi.org/10.1145/3106237.3119880,,,FALSE
FSE,2017,conf/sigsoft/fse2017,Student Research Competition,Suggesting meaningful variable names for decompiled code: a machine translation approach.,Alan Jaffe,1050-1052,3,https://doi.org/10.1145/3106237.3121274,,,FALSE
FSE,2017,conf/sigsoft/fse2017,Student Research Competition,Practical symbolic verification of regular properties.,Hengbiao Yu,1053-1055,3,https://doi.org/10.1145/3106237.3121275,,,FALSE
FSE,2017,conf/sigsoft/fse2017,Student Research Competition,FOSS version differentiation as a benchmark for static analysis security testing tools.,Ivan Pashchenko,1056-1058,3,https://doi.org/10.1145/3106237.3121276,,,FALSE
FSE,2017,conf/sigsoft/fse2017,Student Research Competition,DecisionDroid: a supervised learning-based system to identify cloned Android applications.,Ayush Kohli,1059-1061,3,https://doi.org/10.1145/3106237.3121277,,,FALSE
FSE,2017,conf/sigsoft/fse2017,Student Research Competition,Reasons and drawbacks of using trivial npm packages: the developers' perspective.,Rabe Abdalkareem,1062-1064,3,https://doi.org/10.1145/3106237.3121278,,,FALSE
FSE,2017,conf/sigsoft/fse2017,Student Research Competition,Detecting wearable app permission mismatches: a case study on Android wear.,Suhaib Mujahid,1065-1067,3,https://doi.org/10.1145/3106237.3121279,,,FALSE
FSE,2017,conf/sigsoft/fse2017,Student Research Competition,Automating traceability link recovery through classification.,Chris Mills,1068-1070,3,https://doi.org/10.1145/3106237.3121280,,,FALSE
FSE,2017,conf/sigsoft/fse2017,Student Research Competition,Improving performance of automatic program repair using learned heuristics.,Liam Schramm,1071-1073,3,https://doi.org/10.1145/3106237.3121281,,,FALSE
FSE,2018,conf/sigsoft/fse2018,Invited Papers,Behind every great deep learning framework is an even greater programming languages concept (keynote).,Erik Meijer,1,1,https://doi.org/10.1145/3236024.3280855,,,FALSE
FSE,2018,conf/sigsoft/fse2018,Invited Papers,Ten years of hunting for similar code for fun and profit (keynote).,Stéphane Glondu; Lingxiao Jiang; Zhendong Su,2,1,https://doi.org/10.1145/3236024.3280856,,,FALSE
FSE,2018,conf/sigsoft/fse2018,Concurrency and Races,CloudRaid: hunting concurrency bugs in the cloud via log-mining.,Jie Lu; Feng Li; Lian Li; Xiaobing Feng,3-14,12,https://doi.org/10.1145/3236024.3236071,,,TRUE
FSE,2018,conf/sigsoft/fse2018,Concurrency and Races,Testing multithreaded programs via thread speed control.,Dongjie Chen; Yanyan Jiang; Chang Xu; Xiaoxing Ma; Jian Lu,15-25,11,https://doi.org/10.1145/3236024.3236077,,,TRUE
FSE,2018,conf/sigsoft/fse2018,Concurrency and Races,Data race detection on compressed traces.,Dileep Kini; Umang Mathur; Mahesh Viswanathan,26-37,12,https://doi.org/10.1145/3236024.3236025,,,TRUE
FSE,2018,conf/sigsoft/fse2018,Concurrency and Races,Practical AJAX race detection for JavaScript web applications.,Christoffer Quist Adamsen; Anders Møller; Saba Alimadadi; Frank Tip,38-48,11,https://doi.org/10.1145/3236024.3236038,,,TRUE
FSE,2018,conf/sigsoft/fse2018,Log Mining,Using finite-state models for log differencing.,Hen Amar; Lingfeng Bao; Nimrod Busany; David Lo; Shahar Maoz,49-59,11,https://doi.org/10.1145/3236024.3236069,,,TRUE
FSE,2018,conf/sigsoft/fse2018,Log Mining,Identifying impactful service system problems via log analysis.,Shilin He; Qingwei Lin; Jian-Guang Lou; Hongyu Zhang; Michael R. Lyu; Dongmei Zhang,60-70,11,https://doi.org/10.1145/3236024.3236083,,,TRUE
FSE,2018,conf/sigsoft/fse2018,Performance,Learning to sample: exploiting similarities across environments to learn performance models for configurable systems.,Pooyan Jamshidi; Miguel Velez; Christian Kästner; Norbert Siegmund,71-82,12,https://doi.org/10.1145/3236024.3236074,,,TRUE
FSE,2018,conf/sigsoft/fse2018,Performance,Performance comprehension at WiredTiger.,Alexandra Fedorova; Craig Mustard; Ivan Beschastnikh; Julia Rubin; Augustine Wong; Svetozar Miucin; Louis Ye,83-94,12,https://doi.org/10.1145/3236024.3236081,,,TRUE
FSE,2018,conf/sigsoft/fse2018,Performance,MemFix: static analysis-based repair of memory deallocation errors for C.,Junhee Lee; Seongjoon Hong; Hakjoo Oh,95-106,12,https://doi.org/10.1145/3236024.3236079,,,TRUE
FSE,2018,conf/sigsoft/fse2018,Software Analysis I,RefiNym: using names to refine types.,Santanu Kumar Dash; Miltiadis Allamanis; Earl T. Barr,107-117,11,https://doi.org/10.1145/3236024.3236042,,,TRUE
FSE,2018,conf/sigsoft/fse2018,Software Analysis I,Darwinian data structure selection.,Michail Basios; Lingbo Li; Fan Wu; Leslie Kanthan; Earl T. Barr,118-128,11,https://doi.org/10.1145/3236024.3236043,,,TRUE
FSE,2018,conf/sigsoft/fse2018,Software Analysis I,Scalability-first pointer analysis with self-tuning context-sensitivity.,Yue Li; Tian Tan; Anders Møller; Yannis Smaragdakis,129-140,12,https://doi.org/10.1145/3236024.3236041,,,TRUE
FSE,2018,conf/sigsoft/fse2018,Deep Learning,DeepSim: deep learning code functional similarity.,Gang Zhao; Jeff Huang,141-151,11,https://doi.org/10.1145/3236024.3236068,,,TRUE
FSE,2018,conf/sigsoft/fse2018,Deep Learning,Deep learning type inference.,Vincent J. Hellendoorn; Christian Bird; Earl T. Barr; Miltiadis Allamanis,152-162,11,https://doi.org/10.1145/3236024.3236051,,,TRUE
FSE,2018,conf/sigsoft/fse2018,Deep Learning,Code vectors: understanding programs through embedded abstracted symbolic traces.,Jordan Henkel; Shuvendu K. Lahiri; Ben Liblit; Thomas W. Reps,163-174,12,https://doi.org/10.1145/3236024.3236085,,,TRUE
FSE,2018,conf/sigsoft/fse2018,Deep Learning,MODE: automated neural network model debugging via state differential analysis and input selection.,Shiqing Ma; Yingqi Liu; Wen-Chuan Lee; Xiangyu Zhang; Ananth Grama,175-186,12,https://doi.org/10.1145/3236024.3236082,,,TRUE
FSE,2018,conf/sigsoft/fse2018,Developer Studies,Towards a theory of software development expertise.,Sebastian Baltes; Stephan Diehl,187-200,14,https://doi.org/10.1145/3236024.3236061,,,TRUE
FSE,2018,conf/sigsoft/fse2018,Developer Studies,What makes a code change easier to review: an empirical investigation on code change reviewability.,Achyudh Ram; Anand Ashok Sawant; Marco Castelluccio; Alberto Bacchelli,201-212,12,https://doi.org/10.1145/3236024.3236080,,,TRUE
FSE,2018,conf/sigsoft/fse2018,Testing I,Singularity: pattern fuzzing for worst case complexity.,Jiayi Wei; Jia Chen; Yu Feng; Kostas Ferles; Isil Dillig,213-223,11,https://doi.org/10.1145/3236024.3236039,,,TRUE
FSE,2018,conf/sigsoft/fse2018,Testing I,Bug synthesis: challenging bug-finding tools with deep faults.,Subhajit Roy; Awanish Pandey; Brendan Dolan-Gavitt; Yu Hu,224-234,11,https://doi.org/10.1145/3236024.3236084,,,TRUE
FSE,2018,conf/sigsoft/fse2018,Testing I,"Modify, enhance, select: co-evolution of combinatorial models and test plans.",Rachel Tzoref-Brill; Shahar Maoz,235-245,11,https://doi.org/10.1145/3236024.3236067,,,TRUE
FSE,2018,conf/sigsoft/fse2018,Security,The impact of regular expression denial of service (ReDoS) in practice: an empirical study at the ecosystem scale.,James C. Davis; Christy A. Coghlan; Francisco Servant; Dongyoon Lee,246-256,11,https://doi.org/10.1145/3236024.3236027,,,TRUE
FSE,2018,conf/sigsoft/fse2018,Security,FraudDroid: automated ad fraud detection for Android apps.,Feng Dong; Haoyu Wang; Li Li; Yao Guo; Tegawendé F. Bissyandé; Tianming Liu; Guoai Xu; Jacques Klein,257-268,12,https://doi.org/10.1145/3236024.3236045,,,TRUE
FSE,2018,conf/sigsoft/fse2018,Mobile Apps,"AppFlow: using machine learning to synthesize robust, reusable UI tests.",Gang Hu; Linjie Zhu; Junfeng Yang,269-282,14,https://doi.org/10.1145/3236024.3236055,,,TRUE
FSE,2018,conf/sigsoft/fse2018,Mobile Apps,Winning the app production rally.,Ehsan Noei; Daniel Alencar da Costa; Ying Zou,283-294,12,https://doi.org/10.1145/3236024.3236044,,,TRUE
FSE,2018,conf/sigsoft/fse2018,Software Maintenance I,One size does not fit all: an empirical study of containerized continuous deployment workflows.,Yang Zhang; Bogdan Vasilescu; Huaimin Wang; Vladimir Filkov,295-306,12,https://doi.org/10.1145/3236024.3236033,,,TRUE
FSE,2018,conf/sigsoft/fse2018,Software Maintenance I,Be careful of when: an empirical study on time-related misuse of issue tracking data.,Feifei Tu; Jiaxin Zhu; Qimu Zheng; Minghui Zhou,307-318,12,https://doi.org/10.1145/3236024.3236054,,,TRUE
FSE,2018,conf/sigsoft/fse2018,Software Maintenance I,Do the dependency conflicts in my project matter?,Ying Wang; Ming Wen; Zhenwei Liu; Rongxin Wu; Rui Wang; Bo Yang; Hai Yu; Zhiliang Zhu; Shing-Chi Cheung,319-330,12,https://doi.org/10.1145/3236024.3236056,,,TRUE
FSE,2018,conf/sigsoft/fse2018,Software Analysis II,Do Android taint analysis tools keep their promises?,Felix Pauck; Eric Bodden; Heike Wehrheim,331-341,11,https://doi.org/10.1145/3236024.3236029,,,TRUE
FSE,2018,conf/sigsoft/fse2018,Software Analysis II,Neural-augmented static analysis of Android communication.,Jinman Zhao; Aws Albarghouthi; Vaibhav Rastogi; Somesh Jha; Damien Octeau,342-353,12,https://doi.org/10.1145/3236024.3236066,,,TRUE
FSE,2018,conf/sigsoft/fse2018,Software Analysis II,Oreo: detection of clones in the twilight zone.,Vaibhav Saini; Farima Farmahinifarahani; Yadong Lu; Pierre Baldi; Cristina V. Lopes,354-365,12,https://doi.org/10.1145/3236024.3236026,,,TRUE
FSE,2018,conf/sigsoft/fse2018,Symbolic Execution and Constraint Solving,Concurrency verification with maximal path causality.,Qiuping Yi; Jeff Huang,366-376,11,https://doi.org/10.1145/3236024.3236048,,,TRUE
FSE,2018,conf/sigsoft/fse2018,Symbolic Execution and Constraint Solving,Adversarial symbolic execution for detecting concurrency-related cache timing leaks.,Shengjian Guo; Meng Wu; Chao Wang,377-388,12,https://doi.org/10.1145/3236024.3236028,,,TRUE
FSE,2018,conf/sigsoft/fse2018,Symbolic Execution and Constraint Solving,Symbolic execution with existential second-order constraints.,Sergey Mechtaev; Alberto Griggio; Alessandro Cimatti; Abhik Roychoudhury,389-399,11,https://doi.org/10.1145/3236024.3236049,,,TRUE
FSE,2018,conf/sigsoft/fse2018,Symbolic Execution and Constraint Solving,Parameterized model counting for string and numeric constraints.,Abdulbaki Aydin; William Eiers; Lucas Bang; Tegan Brennan; Miroslav Gavrilov; Tevfik Bultan; Fang Yu,400-410,11,https://doi.org/10.1145/3236024.3236064,,,TRUE
FSE,2018,conf/sigsoft/fse2018,Mining,NAR-miner: discovering negative association rules from code for bug detection.,Pan Bian; Bin Liang; Wenchang Shi; Jianjun Huang; Yan Cai,411-422,12,https://doi.org/10.1145/3236024.3236032,,,TRUE
FSE,2018,conf/sigsoft/fse2018,Mining,Path-based function embedding and its application to error-handling specification mining.,Daniel DeFreez; Aditya V. Thakur; Cindy Rubio-González,423-433,11,https://doi.org/10.1145/3236024.3236059,,,TRUE
FSE,2018,conf/sigsoft/fse2018,Models,Putback-based bidirectional model transformations.,Xiao He; Zhenjiang Hu,434-444,11,https://doi.org/10.1145/3236024.3236070,,,TRUE
FSE,2018,conf/sigsoft/fse2018,Models,"Model transformation languages under a magnifying glass: a controlled experiment with Xtend, ATL, and QVT.",Regina Hebig; Christoph Seidl; Thorsten Berger; John Kook Pedersen; Andrzej Wasowski,445-455,11,https://doi.org/10.1145/3236024.3236046,,,TRUE
FSE,2018,conf/sigsoft/fse2018,Models,Applications of psychological science for actionable analytics.,Di Chen; Wei Fu; Rahul Krishna; Tim Menzies,456-467,12,https://doi.org/10.1145/3236024.3236050,,,TRUE
FSE,2018,conf/sigsoft/fse2018,Estimation and Prediction,A novel automated approach for software effort estimation based on data augmentation.,Liyan Song; Leandro L. Minku; Xin Yao,468-479,12,https://doi.org/10.1145/3236024.3236052,,,TRUE
FSE,2018,conf/sigsoft/fse2018,Estimation and Prediction,Predicting Node failure in cloud service systems.,Qingwei Lin; Ken Hsieh; Yingnong Dang; Hongyu Zhang; Kaixin Sui; Yong Xu; Jian-Guang Lou; Chenggang Li; Youjiang Wu; Randolph Yao; Murali Chintalapati; Dongmei Zhang,480-490,11,https://doi.org/10.1145/3236024.3236060,,,TRUE
FSE,2018,conf/sigsoft/fse2018,Repair and Synthesis,Detecting speech act types in developer question/answer conversations during bug repair.,Andrew Wood; Paige Rodeghero; Ameer Armaly; Collin McMillan,491-502,12,https://doi.org/10.1145/3236024.3236031,,,TRUE
FSE,2018,conf/sigsoft/fse2018,Repair and Synthesis,Visual web test repair.,Andrea Stocco; Rahulkrishna Yandrapally; Ali Mesbah,503-514,12,https://doi.org/10.1145/3236024.3236063,,,TRUE
FSE,2018,conf/sigsoft/fse2018,Repair and Synthesis,Syntax-guided synthesis of Datalog programs.,Xujie Si; Woosuk Lee; Richard Zhang; Aws Albarghouthi; Paraschos Koutris; Mayur Naik,515-527,13,https://doi.org/10.1145/3236024.3236034,,,TRUE
FSE,2018,conf/sigsoft/fse2018,Software Maintenance II,Large-scale study of substitutability in the presence of effects.,Jackson Maddox; Yuheng Long; Hridesh Rajan,528-538,11,https://doi.org/10.1145/3236024.3236075,,,TRUE
FSE,2018,conf/sigsoft/fse2018,Software Maintenance II,An empirical study on crash recovery bugs in large-scale distributed systems.,Yu Gao; Wensheng Dou; Feng Qin; Chushu Gao; Dong Wang; Jun Wei; Ruirui Huang; Li Zhou; Yongming Wu,539-550,12,https://doi.org/10.1145/3236024.3236030,,,TRUE
FSE,2018,conf/sigsoft/fse2018,Software Maintenance II,Complementing global and local contexts in representing API descriptions to improve API retrieval tasks.,Thanh Van Nguyen; Ngoc M. Tran; Hung Phan; Trong Duc Nguyen; Linh H. Truong; Anh Tuan Nguyen; Hoan Anh Nguyen; Tien N. Nguyen,551-562,12,https://doi.org/10.1145/3236024.3236036,,,TRUE
FSE,2018,conf/sigsoft/fse2018,Probabilistic Reasoning,Phys: probabilistic physical unit assignment and inconsistency detection.,Sayali Kate; John-Paul Ore; Xiangyu Zhang; Sebastian G. Elbaum; Zhaogui Xu,563-573,11,https://doi.org/10.1145/3236024.3236035,,,TRUE
FSE,2018,conf/sigsoft/fse2018,Probabilistic Reasoning,Testing probabilistic programming systems.,Saikat Dutta; Owolabi Legunsen; Zixin Huang; Sasa Misailovic,574-586,13,https://doi.org/10.1145/3236024.3236057,,,TRUE
FSE,2018,conf/sigsoft/fse2018,Probabilistic Reasoning,Verifying the long-run behavior of probabilistic system models in the presence of uncertainty.,Yamilet R. Serrano Llerena; Marcel Böhme; Marc Brünink; Guoxin Su; David S. Rosenblum,587-597,11,https://doi.org/10.1145/3236024.3236078,,,TRUE
FSE,2018,conf/sigsoft/fse2018,Debugging and Bug Localization,Automated patch extraction via syntax- and semantics-aware Delta debugging on source code changes.,Masatomo Hashimoto; Akira Mori; Tomonori Izumida,598-609,12,https://doi.org/10.1145/3236024.3236047,,,TRUE
FSE,2018,conf/sigsoft/fse2018,Debugging and Bug Localization,Feedback-directed differential testing of interactive debuggers.,Daniel Lehmann; Michael Pradel,610-620,11,https://doi.org/10.1145/3236024.3236037,,,TRUE
FSE,2018,conf/sigsoft/fse2018,Debugging and Bug Localization,Improving IR-based bug localization with context-aware query reformulation.,Mohammad Masudur Rahman; Chanchal K. Roy,621-632,12,https://doi.org/10.1145/3236024.3236065,,,TRUE
FSE,2018,conf/sigsoft/fse2018,Debugging and Bug Localization,How should compilers explain problems to developers?,Titus Barik; Denae Ford; Emerson R. Murphy-Hill; Chris Parnin,633-643,11,https://doi.org/10.1145/3236024.3236040,,,TRUE
FSE,2018,conf/sigsoft/fse2018,Ecosystems and Crowdsourcing,Ecosystem-level determinants of sustained activity in open-source projects: a case study of the PyPI ecosystem.,Marat Valiev; Bogdan Vasilescu; James D. Herbsleb,644-655,12,https://doi.org/10.1145/3236024.3236062,,,TRUE
FSE,2018,conf/sigsoft/fse2018,Testing II,Optimizing test prioritization via test distribution analysis.,Junjie Chen; Yiling Lou; Lingming Zhang; Jianyi Zhou; Xiaoleng Wang; Dan Hao; Lu Zhang,656-667,12,https://doi.org/10.1145/3236024.3236053,,,TRUE
FSE,2018,conf/sigsoft/fse2018,Testing II,How well are regular expressions tested in the wild?,Peipei Wang; Kathryn T. Stolee,668-678,11,https://doi.org/10.1145/3236024.3236072,,,TRUE
FSE,2018,conf/sigsoft/fse2018,Testing II,Which generated test failures are fault revealing? prioritizing failures based on inferred precondition violations using PAF.,Mijung Kim; Shing-Chi Cheung; Sunghun Kim,679-690,12,https://doi.org/10.1145/3236024.3236058,,,TRUE
FSE,2018,conf/sigsoft/fse2018,Energy,Detection of energy inefficiencies in Android wear watch faces.,Hailong Zhang; Haowei Wu; Atanas Rountev,691-702,12,https://doi.org/10.1145/3236024.3236073,,,TRUE
FSE,2018,conf/sigsoft/fse2018,Energy,Stochastic energy optimization for mobile GPS applications.,Anthony Canino; Yu David Liu; Hidehiko Masuhara,703-713,11,https://doi.org/10.1145/3236024.3236076,,,TRUE
FSE,2018,conf/sigsoft/fse2018,NIER I,Gamifying static analysis.,Lisa Nguyen Quang Do; Eric Bodden,714-718,5,https://doi.org/10.1145/3236024.3264830,,,FALSE
FSE,2018,conf/sigsoft/fse2018,NIER I,The case for experiment-oriented computing.,Paulo Salem,719-723,5,https://doi.org/10.1145/3236024.3264831,,,FALSE
FSE,2018,conf/sigsoft/fse2018,NIER I,On the naturalness of proofs.,Vincent J. Hellendoorn; Premkumar T. Devanbu; Mohammad Amin Alipour,724-728,5,https://doi.org/10.1145/3236024.3264832,,,FALSE
FSE,2018,conf/sigsoft/fse2018,NIER I,Does ACM's code of ethics change ethical decision making in software development?,Andrew McNamara; Justin Smith; Emerson R. Murphy-Hill,729-733,5,https://doi.org/10.1145/3236024.3264833,,,FALSE
FSE,2018,conf/sigsoft/fse2018,NIER I,How are spreadsheet templates used in practice: a case study on Enron.,Liang Xu; Wensheng Dou; Jiaxin Zhu; Chushu Gao; Jun Wei; Tao Huang,734-738,5,https://doi.org/10.1145/3236024.3264834,,,FALSE
FSE,2018,conf/sigsoft/fse2018,NIER I,DLFuzz: differential fuzzing testing of deep learning systems.,Jianmin Guo; Yu Jiang; Yue Zhao; Quan Chen; Jiaguang Sun,739-743,5,https://doi.org/10.1145/3236024.3264835,,,FALSE
FSE,2018,conf/sigsoft/fse2018,NIER I,Towards data-driven vulnerability prediction for requirements.,Sayem Mohammad Imtiaz; Tanmay Bhowmik,744-748,5,https://doi.org/10.1145/3236024.3264836,,,FALSE
FSE,2018,conf/sigsoft/fse2018,NIER II,Beyond testing configurable systems: applying variational execution to automatic program repair and higher order mutation testing.,Chu-Pan Wong; Jens Meinicke; Christian Kästner,749-753,5,https://doi.org/10.1145/3236024.3264837,,,FALSE
FSE,2018,conf/sigsoft/fse2018,NIER II,Software fairness.,Yuriy Brun; Alexandra Meliou,754-759,6,https://doi.org/10.1145/3236024.3264838,,,FALSE
FSE,2018,conf/sigsoft/fse2018,NIER II,Software engineering collaboratories (SEClabs) and collaboratories as a service (CaaS).,Elena Sherman; Robert Dyer,760-764,5,https://doi.org/10.1145/3236024.3264839,,,FALSE
FSE,2018,conf/sigsoft/fse2018,NIER II,Towards counterexample-guided k-induction for fast bug detection.,Mikhail Y. R. Gadelha; Felipe R. Monteiro; Lucas C. Cordeiro; Denis A. Nicole,765-769,5,https://doi.org/10.1145/3236024.3264840,,,FALSE
FSE,2018,conf/sigsoft/fse2018,NIER II,Salient-class location: help developers understand code change in code review.,Yuan Huang; Nan Jia; Xiangping Chen; Kai Hong; Zibin Zheng,770-774,5,https://doi.org/10.1145/3236024.3264841,,,FALSE
FSE,2018,conf/sigsoft/fse2018,NIER II,Towards quantifying the development value of code contributions.,Jinglei Ren; Hezheng Yin; Qingda Hu; Armando Fox; Wojciech Koszek,775-779,5,https://doi.org/10.1145/3236024.3264842,,,FALSE
FSE,2018,conf/sigsoft/fse2018,NIER II,Operationalizing human values in software: a research roadmap.,Davoud Mougouei; Harsha Perera; Waqar Hussain; Rifat Ara Shams; Jon Whittle,780-784,5,https://doi.org/10.1145/3236024.3264843,,,FALSE
FSE,2018,conf/sigsoft/fse2018,Formal Analysis,Modeling and testing a family of surgical robots: an experience report.,Niloofar Mansoor; Jonathan A. Saddler; Bruno Silva; Hamid Bagheri; Myra B. Cohen; Shane Farritor,785-790,6,https://doi.org/10.1145/3236024.3275534,,,FALSE
FSE,2018,conf/sigsoft/fse2018,Formal Analysis,Efficient static checking of library updates.,Darius Foo; Hendy Chua; Jason Yeo; Ming Yi Ang; Asankhaya Sharma,791-796,6,https://doi.org/10.1145/3236024.3275535,,,FALSE
FSE,2018,conf/sigsoft/fse2018,Security,Are mobile banking apps secure? what can be improved?,Sen Chen; Ting Su; Lingling Fan; Guozhu Meng; Minhui Xue; Yang Liu; Lihua Xu,797-802,6,https://doi.org/10.1145/3236024.3275523,,,FALSE
FSE,2018,conf/sigsoft/fse2018,Security,VulSeeker-pro: enhanced semantic learning based binary vulnerability seeker with emulation.,Jian Gao; Xin Yang; Ying Fu; Yu Jiang; Heyuan Shi; Jiaguang Sun,803-808,6,https://doi.org/10.1145/3236024.3275524,,,FALSE
FSE,2018,conf/sigsoft/fse2018,Security,PAFL: extend fuzzing optimizations of single mode to industrial parallel mode.,Jie Liang; Yu Jiang; Yuanliang Chen; Mingzhe Wang; Chijin Zhou; Jiaguang Sun,809-814,6,https://doi.org/10.1145/3236024.3275525,,,FALSE
FSE,2018,conf/sigsoft/fse2018,Security,Software development challenges with air-gap isolation.,Sunny Wong; Anne Woepse,815-820,6,https://doi.org/10.1145/3236024.3275526,,,FALSE
FSE,2018,conf/sigsoft/fse2018,End User Programming and Financial Applications,Design and validation of precooked developer dashboards.,Vladimir Ivanov; Vladislav Pischulin; Alan Rogers; Giancarlo Succi; Jooyong Yi; Vasilii Zorin,821-826,6,https://doi.org/10.1145/3236024.3275530,,,FALSE
FSE,2018,conf/sigsoft/fse2018,End User Programming and Financial Applications,Testing and validating end user programmed calculated fields.,Víctor A. Braberman; Diego Garbervetsky; Javier Godoy; Sebastián Uchitel; Guido de Caso; Ignacio Perez; Santiago Perez,827-832,6,https://doi.org/10.1145/3236024.3275531,,,FALSE
FSE,2018,conf/sigsoft/fse2018,End User Programming and Financial Applications,Automated refactoring of nested-IF formulae in spreadsheets.,Jie Zhang; Shi Han; Dan Hao; Lu Zhang; Dongmei Zhang,833-838,6,https://doi.org/10.1145/3236024.3275532,,,FALSE
FSE,2018,conf/sigsoft/fse2018,End User Programming and Financial Applications,FACTS: automated black-box testing of FinTech systems.,Qingshun Wang; Lintao Gu; Minhui Xue; Lihua Xu; Wenyu Niu; Liang Dou; Liang He; Tao Xie,839-844,6,https://doi.org/10.1145/3236024.3275533,,,FALSE
FSE,2018,conf/sigsoft/fse2018,Test Automation,Regression test selection for TizenRT.,Ahmet Çelik; Young-Chul Lee; Milos Gligoric,845-850,6,https://doi.org/10.1145/3236024.3275527,,,FALSE
FSE,2018,conf/sigsoft/fse2018,Test Automation,Building lean continuous integration and delivery pipelines by applying DevOps principles: a case study at Varidesk.,Vidroha Debroy; Senecca Miller; Lance Brimble,851-856,6,https://doi.org/10.1145/3236024.3275528,,,FALSE
FSE,2018,conf/sigsoft/fse2018,Test Automation,"The impact of failing, flaky, and high failure tests on the number of crash reports associated with Firefox builds.",Md Tajmilur Rahman; Peter C. Rigby,857-862,6,https://doi.org/10.1145/3236024.3275529,,,FALSE
FSE,2018,conf/sigsoft/fse2018,Testing,BigSift: automated debugging of big data analytics in data-intensive scalable computing.,Muhammad Ali Gulzar; Siman Wang; Miryung Kim,863-866,4,https://doi.org/10.1145/3236024.3264586,,,FALSE
FSE,2018,conf/sigsoft/fse2018,Testing,"FOT: a versatile, configurable, extensible fuzzing framework.",Hongxu Chen; Yuekang Li; Bihuan Chen; Yinxing Xue; Yang Liu,867-870,4,https://doi.org/10.1145/3236024.3264593,,,FALSE
FSE,2018,conf/sigsoft/fse2018,Testing,Themis: automatically testing software for discrimination.,Rico Angell; Brittany Johnson; Yuriy Brun; Alexandra Meliou,871-875,5,https://doi.org/10.1145/3236024.3264590,,,FALSE
FSE,2018,conf/sigsoft/fse2018,Testing,Vista: web test repair using computer vision.,Andrea Stocco; Rahulkrishna Yandrapally; Ali Mesbah,876-879,4,https://doi.org/10.1145/3236024.3264592,,,FALSE
FSE,2018,conf/sigsoft/fse2018,Bugs,Augmenting stack overflow with API usage patterns mined from GitHub.,Anastasia Reinhardt; Tianyi Zhang; Mihir Mathur; Miryung Kim,880-883,4,https://doi.org/10.1145/3236024.3264585,,,FALSE
FSE,2018,conf/sigsoft/fse2018,Bugs,PowerStation: automatically detecting and fixing inefficiencies of database-backed web applications in IDE.,Junwen Yang; Cong Yan; Pranav Subramaniam; Shan Lu; Alvin Cheung,884-887,4,https://doi.org/10.1145/3236024.3264589,,,FALSE
FSE,2018,conf/sigsoft/fse2018,Bugs,SketchFix: a tool for automated program repair approach using lazy candidate generation.,Jinru Hua; Mengshi Zhang; Kaiyuan Wang; Sarfraz Khurshid,888-891,4,https://doi.org/10.1145/3236024.3264600,,,FALSE
FSE,2018,conf/sigsoft/fse2018,Bugs,WarningsGuru: integrating statistical bug models with static analysis to provide timely and specific bug warnings.,Louis-Philippe Querel; Peter C. Rigby,892-895,4,https://doi.org/10.1145/3236024.3264599,,,FALSE
FSE,2018,conf/sigsoft/fse2018,Mining,DSM: a specification mining tool using recurrent neural network based language model.,Tien-Duy B. Le; Lingfeng Bao; David Lo,896-899,4,https://doi.org/10.1145/3236024.3264597,,,FALSE
FSE,2018,conf/sigsoft/fse2018,Mining,EClone: detect semantic clones in Ethereum via symbolic transaction sketch.,Han Liu; Zhiqiang Yang; Chao Liu; Yu Jiang; Wenqi Zhao; Jiaguang Sun,900-903,4,https://doi.org/10.1145/3236024.3264596,,,FALSE
FSE,2018,conf/sigsoft/fse2018,Mining,INFAR: insight extraction from app reviews.,Cuiyun Gao; Jichuan Zeng; David Lo; Chin-Yew Lin; Michael R. Lyu; Irwin King,904-907,4,https://doi.org/10.1145/3236024.3264595,,,FALSE
FSE,2018,conf/sigsoft/fse2018,Mining,PyDriller: Python framework for mining software repositories.,Davide Spadini; Maurício Finavaro Aniche; Alberto Bacchelli,908-911,4,https://doi.org/10.1145/3236024.3264598,,,FALSE
FSE,2018,conf/sigsoft/fse2018,Models,A formal verification tool for Ethereum VM bytecode.,Daejun Park; Yi Zhang; Manasvi Saxena; Philip Daian; Grigore Rosu,912-915,4,https://doi.org/10.1145/3236024.3264591,,,FALSE
FSE,2018,conf/sigsoft/fse2018,Models,ASketch: a sketching framework for Alloy.,Kaiyuan Wang; Allison Sullivan; Darko Marinov; Sarfraz Khurshid,916-919,4,https://doi.org/10.1145/3236024.3264594,,,FALSE
FSE,2018,conf/sigsoft/fse2018,Models,AlloyInEcore: embedding of first-order relational logic into meta-object facility for automated model reasoning.,Ferhat Erata; Arda Goknil; Ivan Kurtev; Bedir Tekinerdogan,920-923,4,https://doi.org/10.1145/3236024.3264588,,,FALSE
FSE,2018,conf/sigsoft/fse2018,Models,VT-revolution: interactive programming tutorials made possible.,Lingfeng Bao; Zhenchang Xing; Xin Xia; David Lo; Shanping Li,924-927,4,https://doi.org/10.1145/3236024.3264587,,,FALSE
FSE,2018,conf/sigsoft/fse2018,Doctorial Symposium,Practices and tools for better software testing.,Davide Spadini,928-931,4,https://doi.org/10.1145/3236024.3275424,,,FALSE
FSE,2018,conf/sigsoft/fse2018,Doctorial Symposium,Automated support for mobile application testing and maintenance.,Mattia Fazzini,932-935,4,https://doi.org/10.1145/3236024.3275425,,,FALSE
FSE,2018,conf/sigsoft/fse2018,Doctorial Symposium,Moving towards objective measures of program comprehension.,Sarah Fakhoury,936-939,4,https://doi.org/10.1145/3236024.3275426,,,FALSE
FSE,2018,conf/sigsoft/fse2018,Doctorial Symposium,Semantic inference from natural language privacy policies and Android code.,Mitra Bokaei Hosseini,940-943,4,https://doi.org/10.1145/3236024.3275427,,,FALSE
FSE,2018,conf/sigsoft/fse2018,Doctorial Symposium,Intelligent bug fixing with software bug knowledge graph.,Cheng Zhou,944-947,4,https://doi.org/10.1145/3236024.3275428,,,FALSE
FSE,2018,conf/sigsoft/fse2018,Doctorial Symposium,Quality assurance automation in autonomous systems.,Afsoon Afzal,948-951,4,https://doi.org/10.1145/3236024.3275429,,,FALSE
FSE,2018,conf/sigsoft/fse2018,Doctorial Symposium,"How do developers resolve merge conflicts? an investigation into the processes, tools, and improvements.",Caius Brindescu,952-955,4,https://doi.org/10.1145/3236024.3275430,,,FALSE
FSE,2018,conf/sigsoft/fse2018,Student Research Competition,Automated scenario-based integration testing of distributed systems.,Bruno Lima,956-958,3,https://doi.org/10.1145/3236024.3275431,,,FALSE
FSE,2018,conf/sigsoft/fse2018,Student Research Competition,Towards learning-augmented languages.,Xinyuan Sun,959-961,3,https://doi.org/10.1145/3236024.3275432,,,FALSE
FSE,2018,conf/sigsoft/fse2018,Student Research Competition,On the adoption of neural networks in modeling software reliability.,Kamill Gusmanov,962-964,3,https://doi.org/10.1145/3236024.3275433,,,FALSE
FSE,2018,conf/sigsoft/fse2018,Student Research Competition,Type migration in large-scale code bases.,Ameya Ketkar,965-967,3,https://doi.org/10.1145/3236024.3275434,,,FALSE
FSE,2018,conf/sigsoft/fse2018,Student Research Competition,Reshaping distributed agile and adaptive development environment.,Francesco Nocera,968-970,3,https://doi.org/10.1145/3236024.3275435,,,FALSE
FSE,2018,conf/sigsoft/fse2018,Student Research Competition,How Dance(Sport) can help to produce better software.,Irina Erofeeva,971-973,3,https://doi.org/10.1145/3236024.3275436,,,FALSE
FSE,2018,conf/sigsoft/fse2018,Student Research Competition,Feature-interaction aware configuration prioritization.,Son Nguyen,974-976,3,https://doi.org/10.1145/3236024.3275437,,,FALSE
FSE,2018,conf/sigsoft/fse2018,Student Research Competition,Dara: hybrid model checking of distributed systems.,Vaastav Anand,977-979,3,https://doi.org/10.1145/3236024.3275438,,,FALSE
FSE,2018,conf/sigsoft/fse2018,Student Research Competition,Bugs in the wild: examining the effectiveness of static analyzers at finding real-world bugs.,David A. Tomassi,980-982,3,https://doi.org/10.1145/3236024.3275439,,,FALSE
FSE,2018,conf/sigsoft/fse2018,Student Research Competition,Mining error-handling specifications for systems software.,Daniel DeFreez,983-985,3,https://doi.org/10.1145/3236024.3275440,,,FALSE
FSE,2018,conf/sigsoft/fse2018,Student Research Competition,Diversity and decorum in open source communities.,Neill Robson,986-987,2,https://doi.org/10.1145/3236024.3275441,,,FALSE
TOSEM,2014,journals/tosem/tosem23,"Volume 23, Number 1, February 2014",Editorial.,David S. Rosenblum,1:1-1:2,2,https://doi.org/10.1145/2559939,,,FALSE
TOSEM,2014,journals/tosem/tosem23,"Volume 23, Number 1, February 2014",Architecture-centric support for adaptive service collaborations.,Robrecht Haesevoets; Danny Weyns; Tom Holvoet,2:1-2:40,40,https://doi.org/10.1145/2559937,,,TRUE
TOSEM,2014,journals/tosem/tosem23,"Volume 23, Number 1, February 2014",Automated cookie collection testing.,Andrew F. Tappenden; James Miller,3:1-3:40,40,https://doi.org/10.1145/2559936,,,TRUE
TOSEM,2014,journals/tosem/tosem23,"Volume 23, Number 1, February 2014",Improving software modularization via automated analysis of latent topics and dependencies.,Gabriele Bavota; Malcom Gethers; Rocco Oliveto; Denys Poshyvanyk; Andrea De Lucia,4:1-4:33,33,https://doi.org/10.1145/2559935,,,TRUE
TOSEM,2014,journals/tosem/tosem23,"Volume 23, Number 1, February 2014",Do we need to handle every temporal violation in scientific workflow systems?,Xiao Liu; Yun Yang; Dong Yuan; Jinjun Chen,5:1-5:34,34,https://doi.org/10.1145/2559938,,,TRUE
TOSEM,2014,journals/tosem/tosem23,"Volume 23, Number 1, February 2014",Model-based synthesis of control software from system-level formal specifications.,Federico Mari; Igor Melatti; Ivano Salvo; Enrico Tronci,6:1-6:42,42,https://doi.org/10.1145/2559934,,,TRUE
TOSEM,2014,journals/tosem/tosem23,"Volume 23, Number 1, February 2014",Join point interfaces for safe and flexible decoupling of aspects.,Eric Bodden; Éric Tanter; Milton Inostroza,7:1-7:41,41,https://doi.org/10.1145/2559933,,,TRUE
TOSEM,2014,journals/tosem/tosem23,"Volume 23, Number 1, February 2014",Prevalence of coincidental correctness and mitigation of its impact on fault localization.,Wes Masri; Rawad Abou Assi,8:1-8:28,28,https://doi.org/10.1145/2559932,,,TRUE
TOSEM,2014,journals/tosem/tosem23,"Volume 23, Number 1, February 2014",Traceability and SysML design slices to support safety inspections: A controlled experiment.,Lionel C. Briand; Davide Falessi; Shiva Nejati; Mehrdad Sabetzadeh; Tao Yue,9:1-9:43,43,https://doi.org/10.1145/2559978,,,TRUE
TOSEM,2014,journals/tosem/tosem23,"Volume 23, Number 1, February 2014",An in-depth study of the potentially confounding effect of class size in fault prediction.,Yuming Zhou; Baowen Xu; Hareton Leung; Lin Chen,10:1-10:51,51,https://doi.org/10.1145/2556777,,,TRUE
TOSEM,2014,journals/tosem/tosem23,"Volume 23, Number 2, March 2014",Editorial.,David S. Rosenblum,11:1-11:4,4,https://doi.org/10.1145/2581373,,,FALSE
TOSEM,2014,journals/tosem/tosem23,"Volume 23, Number 2, March 2014",Guided test generation for database applications via synthesized database interactions.,Kai Pan; Xintao Wu; Tao Xie,12:1-12:27,27,https://doi.org/10.1145/2491529,,,TRUE
TOSEM,2014,journals/tosem/tosem23,"Volume 23, Number 2, March 2014",On the impact of UML analysis models on source-code comprehensibility and modifiability.,Giuseppe Scanniello; Carmine Gravino; Marcela Genero; José A. Cruz-Lemus; Genoveffa Tortora,13:1-13:26,26,https://doi.org/10.1145/2491912,,,TRUE
TOSEM,2014,journals/tosem/tosem23,"Volume 23, Number 2, March 2014",Degree-of-knowledge: Modeling a developer's knowledge of code.,Thomas Fritz; Gail C. Murphy; Emerson R. Murphy-Hill; Jingwen Ou; Emily Hill,14:1-14:42,42,https://doi.org/10.1145/2512207,,,TRUE
TOSEM,2014,journals/tosem/tosem23,"Volume 23, Number 2, March 2014",Required behavior of sequence diagrams: Semantics and conformance.,Lunjin Lu; Dae-Kyoo Kim,15:1-15:28,28,https://doi.org/10.1145/2523108,,,TRUE
TOSEM,2014,journals/tosem/tosem23,"Volume 23, Number 2, March 2014",A taxonomy for requirements engineering and software test alignment.,Michael Unterkalmsteiner; Robert Feldt; Tony Gorschek,16:1-16:38,38,https://doi.org/10.1145/2523088,,,TRUE
TOSEM,2014,journals/tosem/tosem23,"Volume 23, Number 2, March 2014",ADAM: External dependency-driven architecture discovery and analysis of quality attributes.,Dharmalingam Ganesan; Mikael Lindvall,17:1-17:51,51,https://doi.org/10.1145/2529998,,,TRUE
TOSEM,2014,journals/tosem/tosem23,"Volume 23, Number 2, March 2014",Key factors for adopting inner source.,Klaas-Jan Stol; Paris Avgeriou; Muhammad Ali Babar; Yan Lucas; Brian Fitzgerald,18:1-18:35,35,https://doi.org/10.1145/2533685,,,TRUE
TOSEM,2014,journals/tosem/tosem23,"Volume 23, Number 2, March 2014",Exact scalable sensitivity analysis for the next release problem.,Mark Harman; Jens Krinke; Inmaculada Medina-Bulo; Francisco Palomo-Lozano; Jian Ren; Shin Yoo,19:1-19:31,31,https://doi.org/10.1145/2537853,,,TRUE
TOSEM,2014,journals/tosem/tosem23,"Volume 23, Number 2, March 2014",Dynamite: A tool for the verification of alloy models based on PVS.,Mariano M. Moscato; Carlos López Pombo; Marcelo F. Frias,20:1-20:37,37,https://doi.org/10.1145/2544136,,,TRUE
TOSEM,2014,journals/tosem/tosem23,"Volume 23, Number 3, May 2014",Generating Test Cases for Programs that Are Coded against Interfaces and Annotations.,Mainul Islam; Christoph Csallner,21:1-21:38,38,https://doi.org/10.1145/2544135,,,TRUE
TOSEM,2014,journals/tosem/tosem23,"Volume 23, Number 3, May 2014",A Methodology for Exposing Risk in Achieving Emergent System Properties.,Lucas Layman; Victor R. Basili; Marvin V. Zelkowitz,22:1-22:28,28,https://doi.org/10.1145/2560048,,,TRUE
TOSEM,2014,journals/tosem/tosem23,"Volume 23, Number 3, May 2014",Scalable Runtime Bloat Detection Using Abstract Dynamic Slicing.,Guoqing (Harry) Xu; Nick Mitchell; Matthew Arnold; Atanas Rountev; Edith Schonberg; Gary Sevitsky,23:1-23:50,50,https://doi.org/10.1145/2560047,,,TRUE
TOSEM,2014,journals/tosem/tosem23,"Volume 23, Number 3, May 2014","GreASE: A Tool for Efficient ""Nonequivalence"" Checking.",Nicoletta De Francesco; Giuseppe Lettieri; Antonella Santone; Gigliola Vaglini,24:1-24:26,26,https://doi.org/10.1145/2560563,,,TRUE
TOSEM,2014,journals/tosem/tosem23,"Volume 23, Number 3, May 2014",Architecture-Level Configuration of Large-Scale Embedded Software Systems.,Razieh Behjati; Shiva Nejati; Lionel C. Briand,25:1-25:43,43,https://doi.org/10.1145/2581376,,,TRUE
TOSEM,2014,journals/tosem/tosem23,"Volume 23, Number 3, May 2014",Solving the Search for Source Code.,Kathryn T. Stolee; Sebastian G. Elbaum; Daniel Dobos,26:1-26:45,45,https://doi.org/10.1145/2581377,,,TRUE
TOSEM,2014,journals/tosem/tosem23,"Volume 23, Number 4, August 2014",Editorial.,David S. Rosenblum,27:1,1,https://doi.org/10.1145/2656368,,,FALSE
TOSEM,2014,journals/tosem/tosem23,"Volume 23, Number 4, August 2014",Introduction to the Special Issue International Conference on Software Engineering (ICSE 2012).,Gail C. Murphy; Mauro Pezzè,28:1-28:2,2,https://doi.org/10.1145/2658849,,,FALSE
TOSEM,2014,journals/tosem/tosem23,"Volume 23, Number 4, August 2014",Automated Detection of Client-State Manipulation Vulnerabilities.,Anders Møller; Mathias Schwarz,29:1-29:30,30,https://doi.org/10.1145/2531921,,,TRUE
TOSEM,2014,journals/tosem/tosem23,"Volume 23, Number 4, August 2014",DIG: A Dynamic Invariant Generator for Polynomial and Array Invariants.,ThanhVu Nguyen; Deepak Kapur; Westley Weimer; Stephanie Forrest,30:1-30:30,30,https://doi.org/10.1145/2556782,,,TRUE
TOSEM,2014,journals/tosem/tosem23,"Volume 23, Number 4, August 2014",On the Comprehension of Program Comprehension.,Walid Maalej; Rebecca Tiarks; Tobias Roehm; Rainer Koschke,31:1-31:37,37,https://doi.org/10.1145/2622669,,,TRUE
TOSEM,2014,journals/tosem/tosem23,"Volume 23, Number 4, August 2014",Amplifying Tests to Validate Exception Handling Code: An Extended Study in the Mobile Application Domain.,Pingyu Zhang; Sebastian G. Elbaum,32:1-32:28,28,https://doi.org/10.1145/2652483,,,TRUE
TOSEM,2014,journals/tosem/tosem23,"Volume 23, Number 4, August 2014",Some Code Smells Have a Significant but Small Effect on Faults.,Tracy Hall; Min Zhang; David Bowes; Yi Sun,33:1-33:39,39,https://doi.org/10.1145/2629648,,,TRUE
TOSEM,2014,journals/tosem/tosem23,"Volume 23, Number 4, August 2014",Scaling Up Symbolic Analysis by Removing Z-Equivalent States.,Yueqi Li; Shing-Chi Cheung; Xiangyu Zhang; Yepang Liu,34:1-34:32,32,https://doi.org/10.1145/2652484,,,TRUE
TOSEM,2014,journals/tosem/tosem23,"Volume 23, Number 4, August 2014","Peer Review on Open-Source Software Projects: Parameters, Statistical Models, and Theory.",Peter C. Rigby; Daniel M. Germán; Laura Cowen; Margaret-Anne D. Storey,35:1-35:33,33,https://doi.org/10.1145/2594458,,,TRUE
TOSEM,2015,journals/tosem/tosem24,"Volume 24, Number 1, September 2014",Assessing the Effect of Screen Mockups on the Comprehension of Functional Requirements.,Filippo Ricca; Giuseppe Scanniello; Marco Torchiano; Gianna Reggio; Egidio Astesiano,1:1-1:38,38,https://doi.org/10.1145/2629457,,,TRUE
TOSEM,2015,journals/tosem/tosem24,"Volume 24, Number 1, September 2014",A Continuous ASM Modelling Approach to Pacemaker Sensing.,Richard Banach; Huibiao Zhu; Wen Su; Xiaofeng Wu,2:1-2:40,40,https://doi.org/10.1145/2610375,,,TRUE
TOSEM,2015,journals/tosem/tosem24,"Volume 24, Number 1, September 2014",Directed Incremental Symbolic Execution.,Guowei Yang; Suzette Person; Neha Rungta; Sarfraz Khurshid,3:1-3:42,42,https://doi.org/10.1145/2629536,,,TRUE
TOSEM,2015,journals/tosem/tosem24,"Volume 24, Number 1, September 2014",Mining Unit Tests for Discovery and Migration of Math APIs.,Anirudh Santhiar; Omesh Pandita; Aditya Kanade,4:1-4:33,33,https://doi.org/10.1145/2629506,,,TRUE
TOSEM,2015,journals/tosem/tosem24,"Volume 24, Number 1, September 2014",Combining Centralised and Distributed Testing.,Robert M. Hierons,5:1-5:29,29,https://doi.org/10.1145/2661296,,,TRUE
TOSEM,2015,journals/tosem/tosem24,"Volume 24, Number 1, September 2014",Code-Smell Detection as a Bilevel Problem.,Dilan Sahin; Marouane Kessentini; Slim Bechikh; Kalyanmoy Deb,6:1-6:44,44,https://doi.org/10.1145/2675067,,,TRUE
TOSEM,2015,journals/tosem/tosem24,"Volume 24, Number 2, December 2014",Residual Investigation: Predictive and Precise Bug Detection.,Kaituo Li; Christoph Reichenbach; Christoph Csallner; Yannis Smaragdakis,7:1-7:32,32,https://doi.org/10.1145/2656201,,,TRUE
TOSEM,2015,journals/tosem/tosem24,"Volume 24, Number 2, December 2014",A Large-Scale Evaluation of Automated Unit Test Generation Using EvoSuite.,Gordon Fraser; Andrea Arcuri,8:1-8:42,42,https://doi.org/10.1145/2685612,,,TRUE
TOSEM,2015,journals/tosem/tosem24,"Volume 24, Number 2, December 2014",Conditional Commitments: Reasoning and Model Checking.,Warda El Kholy; Jamal Bentahar; Mohamed El-Menshawy; Hongyang Qu; Rachida Dssouli,9:1-9:49,49,https://doi.org/10.1145/2685613,,,TRUE
TOSEM,2015,journals/tosem/tosem24,"Volume 24, Number 2, December 2014",A Unified Test Case Prioritization Approach.,Dan Hao; Lingming Zhang; Lu Zhang; Gregg Rothermel; Hong Mei,10:1-10:31,31,https://doi.org/10.1145/2685614,,,TRUE
TOSEM,2015,journals/tosem/tosem24,"Volume 24, Number 2, December 2014",Formal Verification of Software Countermeasures against Side-Channel Attacks.,Hassan Eldib; Chao Wang; Patrick Schaumont,11:1-11:24,24,https://doi.org/10.1145/2685616,,,TRUE
TOSEM,2015,journals/tosem/tosem24,"Volume 24, Number 2, December 2014",When and How to Use Multilevel Modelling.,Juan de Lara; Esther Guerra; Jesús Sánchez Cuadrado,12:1-12:46,46,https://doi.org/10.1145/2685615,,,TRUE
TOSEM,2015,journals/tosem/tosem24,"Volume 24, Number 3, May 2015",aToucan: An Automated Framework to Derive UML Analysis Models from Use Case Models.,Tao Yue; Lionel C. Briand; Yvan Labiche,13:1-13:52,52,https://doi.org/10.1145/2699697,,,TRUE
TOSEM,2015,journals/tosem/tosem24,"Volume 24, Number 3, May 2015",Documenting Design-Pattern Instances: A Family of Experiments on Source-Code Comprehensibility.,Giuseppe Scanniello; Carmine Gravino; Michele Risi; Genoveffa Tortora; Gabriella Dodero,14:1-14:35,35,https://doi.org/10.1145/2699696,,,TRUE
TOSEM,2015,journals/tosem/tosem24,"Volume 24, Number 3, May 2015",Deciding Type-Based Partial-Order Constraints for Path-Sensitive Analysis.,Elena Sherman; Brady J. Garvin; Matthew B. Dwyer,15:1-15:33,33,https://doi.org/10.1145/2755971,,,TRUE
TOSEM,2015,journals/tosem/tosem24,"Volume 24, Number 3, May 2015",Automatic Workarounds: Exploiting the Intrinsic Redundancy of Web Applications.,Antonio Carzaniga; Alessandra Gorla; Nicolò Perino; Mauro Pezzè,16:1-16:42,42,https://doi.org/10.1145/2755970,,,TRUE
TOSEM,2015,journals/tosem/tosem24,"Volume 24, Number 3, May 2015",Many-Objective Software Remodularization Using NSGA-III.,Wiem Mkaouer; Marouane Kessentini; Adnan Shaout; Patrice Koligheu; Slim Bechikh; Kalyanmoy Deb; Ali Ouni,17:1-17:45,45,https://doi.org/10.1145/2729974,,,TRUE
TOSEM,2015,journals/tosem/tosem24,"Volume 24, Number 3, May 2015",Software Change Contracts.,Jooyong Yi; Dawei Qi; Shin Hwei Tan; Abhik Roychoudhury,18:1-18:43,43,https://doi.org/10.1145/2729973,,,TRUE
TOSEM,2015,journals/tosem/tosem24,"Volume 24, Number 3, May 2015",Platys: An Active Learning Framework for Place-Aware Application Development and Its Evaluation.,Pradeep K. Murukannaiah; Munindar P. Singh,19:1-19:32,32,https://doi.org/10.1145/2729976,,,TRUE
TOSEM,2015,journals/tosem/tosem24,"Volume 24, Number 3, May 2015",A Baseline Model for Software Effort Estimation.,Peter A. Whigham; Caitlin A. Owen; Stephen G. MacDonell,20:1-20:11,11,https://doi.org/10.1145/2738037,,,TRUE
TOSEM,2015,journals/tosem/tosem24,"Volume 24, Number 4, August 2015",Introduction to the Special Issue on ISSTA 2013.,Mark Harman; Mauro Pezzè,21:1-21:3,3,https://doi.org/10.1145/2809789,,,FALSE
TOSEM,2015,journals/tosem/tosem24,"Volume 24, Number 4, August 2015",Guidelines for Coverage-Based Comparisons of Non-Adequate Test Suites.,Milos Gligoric; Alex Groce; Chaoqiang Zhang; Rohan Sharma; Mohammad Amin Alipour; Darko Marinov,22:1-22:33,33,https://doi.org/10.1145/2660767,,,TRUE
TOSEM,2015,journals/tosem/tosem24,"Volume 24, Number 4, August 2015",Does Automated Unit Test Generation Really Help Software Testers? A Controlled Empirical Study.,Gordon Fraser; Matt Staats; Phil McMinn; Andrea Arcuri; Frank Padberg,23:1-23:49,49,https://doi.org/10.1145/2699688,,,TRUE
TOSEM,2015,journals/tosem/tosem24,"Volume 24, Number 4, August 2015",Effective Techniques for Static Race Detection in Java Parallel Loops.,Cosmin Radoi; Danny Dig,24:1-24:30,30,https://doi.org/10.1145/2729975,,,TRUE
TOSEM,2015,journals/tosem/tosem24,"Volume 24, Number 4, August 2015","Data Model Property Inference, Verification, and Repair for Web Applications.",Jaideep Nijjar; Ivan Bocic; Tevfik Bultan,25:1-25:27,27,https://doi.org/10.1145/2699691,,,TRUE
TOSEM,2015,journals/tosem/tosem24,"Volume 24, Number 4, August 2015",Automated Support for Reproducing and Debugging Field Failures.,Wei Jin; Alessandro Orso,26:1-26:35,35,https://doi.org/10.1145/2774218,,,TRUE
TOSEM,2016,journals/tosem/tosem25,"Volume 25, Number 1, December 2015",Editorial Journal-First Publication for the Software Engineering Community.,Matthew B. Dwyer; David S. Rosenblum,1:1-1:2,2,https://doi.org/10.1145/2837717,,,FALSE
TOSEM,2016,journals/tosem/tosem25,"Volume 25, Number 1, December 2015",Understanding Integer Overflow in C/C++.,Will Dietz; Peng Li; John Regehr; Vikram S. Adve,2:1-2:29,29,https://doi.org/10.1145/2743019,,,TRUE
TOSEM,2016,journals/tosem/tosem25,"Volume 25, Number 1, December 2015",Intelligent Code Completion with Bayesian Networks.,Sebastian Proksch; Johannes Lerch; Mira Mezini,3:1-3:31,31,https://doi.org/10.1145/2744200,,,TRUE
TOSEM,2016,journals/tosem/tosem25,"Volume 25, Number 1, December 2015",Combining Genetic Algorithms and Constraint Programming to Support Stress Testing of Task Deadlines.,Stefano Di Alesio; Lionel C. Briand; Shiva Nejati; Arnaud Gotlieb,4:1-4:37,37,https://doi.org/10.1145/2818640,,,TRUE
TOSEM,2016,journals/tosem/tosem25,"Volume 25, Number 1, December 2015",Do Automatically Generated Test Cases Make Debugging Easier? An Experimental Assessment of Debugging Effectiveness and Efficiency.,Mariano Ceccato; Alessandro Marchetto; Leonardo Mariani; Cu D. Nguyen; Paolo Tonella,5:1-5:38,38,https://doi.org/10.1145/2768829,,,TRUE
TOSEM,2016,journals/tosem/tosem25,"Volume 25, Number 1, December 2015",Test Case Prioritization Using Extended Digraphs.,Seyedeh Sepideh Emam; James Miller,6:1-6:41,41,https://doi.org/10.1145/2789209,,,TRUE
TOSEM,2016,journals/tosem/tosem25,"Volume 25, Number 1, December 2015",Boa: Ultra-Large-Scale Software Repository and Source-Code Mining.,Robert Dyer; Hoan Anh Nguyen; Hridesh Rajan; Tien N. Nguyen,7:1-7:34,34,https://doi.org/10.1145/2803171,,,TRUE
TOSEM,2016,journals/tosem/tosem25,"Volume 25, Number 1, December 2015",The Effectiveness of Test Coverage Criteria for Relational Database Schema Integrity Constraints.,Phil McMinn; Chris J. Wright; Gregory M. Kapfhammer,8:1-8:49,49,https://doi.org/10.1145/2818639,,,TRUE
TOSEM,2016,journals/tosem/tosem25,"Volume 25, Number 1, December 2015",Type-Based Call Graph Construction Algorithms for Scala.,Karim Ali; Marianna Rapoport; Ondrej Lhoták; Julian Dolby; Frank Tip,9:1-9:43,43,https://doi.org/10.1145/2824234,,,TRUE
TOSEM,2016,journals/tosem/tosem25,"Volume 25, Number 1, December 2015",Estimating Semantic Relatedness in Source Code.,Anas Mahmoud; Gary Bradshaw,10:1-10:35,35,https://doi.org/10.1145/2824251,,,TRUE
TOSEM,2016,journals/tosem/tosem25,"Volume 25, Number 2, May 2016",Editorial.,David S. Rosenblum,11:1-11:2,2,https://doi.org/10.1145/2904898,,,FALSE
TOSEM,2016,journals/tosem/tosem25,"Volume 25, Number 2, May 2016",Understanding JavaScript Event-Based Interactions with Clematis.,Saba Alimadadi; Sheldon Sequeira; Ali Mesbah; Karthik Pattabiraman,12:1-12:38,38,https://doi.org/10.1145/2876441,,,TRUE
TOSEM,2016,journals/tosem/tosem25,"Volume 25, Number 2, May 2016",Inflow and Retention in OSS Communities with Commercial Involvement: A Case Study of Three Hybrid Projects.,Minghui Zhou; Audris Mockus; Xiujuan Ma; Lu Zhang; Hong Mei,13:1-13:29,29,https://doi.org/10.1145/2876443,,,TRUE
TOSEM,2016,journals/tosem/tosem25,"Volume 25, Number 2, May 2016",Concurrency Debugging with Differential Schedule Projections.,Nuno Machado; Daniel Quinta; Brandon Lucia; Luís E. T. Rodrigues,14:1-14:37,37,https://doi.org/10.1145/2885495,,,TRUE
TOSEM,2016,journals/tosem/tosem25,"Volume 25, Number 2, May 2016",Control Explicit-Data Symbolic Model Checking.,Petr Bauch; Vojtech Havel; Jiri Barnat,15:1-15:48,48,https://doi.org/10.1145/2888393,,,TRUE
TOSEM,2016,journals/tosem/tosem25,"Volume 25, Number 2, May 2016",Less is More: Estimating Probabilistic Rewards over Partial System Explorations.,Esteban Pavese; Víctor A. Braberman; Sebastián Uchitel,16:1-16:47,47,https://doi.org/10.1145/2890494,,,TRUE
TOSEM,2016,journals/tosem/tosem25,"Volume 25, Number 2, May 2016",SIP: Optimal Product Selection from Feature Models Using Many-Objective Evolutionary Optimization.,Robert M. Hierons; Miqing Li; Xiaohui Liu; Sergio Segura; Wei Zheng,17:1-17:39,39,https://doi.org/10.1145/2897760,,,TRUE
TOSEM,2016,journals/tosem/tosem25,"Volume 25, Number 2, May 2016",DiaPro: Unifying Dynamic Impact Analyses for Improved and Variable Cost-Effectiveness.,Haipeng Cai; Raúl A. Santelices; Douglas Thain,18:1-18:50,50,https://doi.org/10.1145/2894751,,,TRUE
TOSEM,2016,journals/tosem/tosem25,"Volume 25, Number 2, May 2016",A Stack Memory Abstraction and Symbolic Analysis Framework for Executables.,Kapil Anand; Khaled Elwazeer; Aparna Kotha; Matthew Smithson; Rajeev Barua; Angelos D. Keromytis,19:1-19:38,38,https://doi.org/10.1145/2897511,,,TRUE
TOSEM,2016,journals/tosem/tosem25,"Volume 25, Number 3, August 2016",Multi-Step Learning and Adaptive Search for Learning Complex Model Transformations from Examples.,Islem Baki; Houari A. Sahraoui,20:1-20:37,37,https://doi.org/10.1145/2904904,,,TRUE
TOSEM,2016,journals/tosem/tosem25,"Volume 25, Number 3, August 2016",Learning Weighted Assumptions for Compositional Verification of Markov Decision Processes.,Fei He; Xiaowei Gao; Miaofei Wang; Bow-Yaw Wang; Lijun Zhang,21:1-21:39,39,https://doi.org/10.1145/2907943,,,TRUE
TOSEM,2016,journals/tosem/tosem25,"Volume 25, Number 3, August 2016",Mining Privacy Goals from Privacy Policies Using Hybridized Task Recomposition.,Jaspreet Bhatia; Travis D. Breaux; Florian Schaub,22:1-22:24,24,https://doi.org/10.1145/2907942,,,TRUE
TOSEM,2016,journals/tosem/tosem25,"Volume 25, Number 3, August 2016",Multi-Criteria Code Refactoring Using Search-Based Software Engineering: An Industrial Case Study.,Ali Ouni; Marouane Kessentini; Houari A. Sahraoui; Katsuro Inoue; Kalyanmoy Deb,23:1-23:53,53,https://doi.org/10.1145/2932631,,,TRUE
TOSEM,2016,journals/tosem/tosem25,"Volume 25, Number 3, August 2016",Using Cohesion and Coupling for Software Remodularization: Is It Enough?,Ivan Candela; Gabriele Bavota; Barbara Russo; Rocco Oliveto,24:1-24:28,28,https://doi.org/10.1145/2928268,,,TRUE
TOSEM,2016,journals/tosem/tosem25,"Volume 25, Number 3, August 2016",The Effect of Program and Model Structure on the Effectiveness of MC/DC Test Adequacy Coverage.,Gregory Gay; Ajitha Rajan; Matt Staats; Michael W. Whalen; Mats Per Erik Heimdahl,25:1-25:34,34,https://doi.org/10.1145/2934672,,,TRUE
TOSEM,2016,journals/tosem/tosem25,"Volume 25, Number 3, August 2016",Stochastic Performance Analysis of Global Software Development Teams.,Ricardo M. Czekster; Paulo Fernandes; Lucelene Lopes; Afonso Sales; Alan R. Santos; Thais Webber,26:1-26:32,32,https://doi.org/10.1145/2955093,,,TRUE
TOSEM,2016,journals/tosem/tosem25,"Volume 25, Number 3, August 2016",Hierarchical Program Paths.,Chunbai Yang; Shangru Wu; W. K. Chan,27:1-27:44,44,https://doi.org/10.1145/2963094,,,TRUE
TOSEM,2016,journals/tosem/tosem25,"Volume 25, Number 4, May 2017",Impact-Driven Process Model Repair.,Artem Polyvyanyy; Wil M. P. van der Aalst; Arthur H. M. ter Hofstede; Moe Thandar Wynn,28:1-28:60,60,https://doi.org/10.1145/2980764,,,TRUE
TOSEM,2016,journals/tosem/tosem25,"Volume 25, Number 4, May 2017",Generating API Call Rules from Version History and Stack Overflow Posts.,Shams Azad; Peter C. Rigby; Latifa Guerrouj,29:1-29:22,22,https://doi.org/10.1145/2990497,,,TRUE
TOSEM,2016,journals/tosem/tosem25,"Volume 25, Number 4, May 2017",Dynamic Dependence Summaries.,Vijay Krishna Palepu; Guoqing (Harry) Xu; James A. Jones,30:1-30:41,41,https://doi.org/10.1145/2968444,,,TRUE
TOSEM,2016,journals/tosem/tosem25,"Volume 25, Number 4, May 2017"," Typing for Model-Driven Engineering: Concepts, Analysis, and Applications.",Juan de Lara; Esther Guerra,31:1-31:60,60,https://doi.org/10.1145/3063384,,,TRUE
TOSEM,2017,journals/tosem/tosem26,"Volume 26, Number 2, October 2017",Editorial.,David S. Rosenblum,6e:1-6e:2,2,https://doi.org/10.1145/3136621,empty_page_range,fixed,FALSE
TOSEM,2017,journals/tosem/tosem26,"Volume 26, Number 1, July 2017",Augmenting Field Data for Testing Systems Subject to Incremental Requirements Changes.,Daniel Di Nardo; Fabrizio Pastore; Lionel C. Briand,1:1-1:40,40,https://doi.org/10.1145/3053430,,,TRUE
TOSEM,2017,journals/tosem/tosem26,"Volume 26, Number 1, July 2017",Ensuring the Consistency of Adaptation through Inter- and Intra-Component Dependency Analysis.,Alireza Sadeghi; Naeem Esfahani; Sam Malek,2:1-2:27,27,https://doi.org/10.1145/3063385,,,TRUE
TOSEM,2017,journals/tosem/tosem26,"Volume 26, Number 1, July 2017",Predicting Query Quality for Applications of Text Retrieval to Software Engineering Tasks.,Chris Mills; Gabriele Bavota; Sonia Haiduc; Rocco Oliveto; Andrian Marcus; Andrea De Lucia,3:1-3:45,45,https://doi.org/10.1145/3078841,,,TRUE
TOSEM,2017,journals/tosem/tosem26,"Volume 26, Number 1, July 2017",Human Competitiveness of Genetic Programming in Spectrum-Based Fault Localisation: Theoretical and Empirical Analysis.,Shin Yoo; Xiaoyuan Xie; Fei-Ching Kuo; Tsong Yueh Chen; Mark Harman,4:1-4:30,30,https://doi.org/10.1145/3078840,,,TRUE
TOSEM,2017,journals/tosem/tosem26,"Volume 26, Number 1, July 2017",Parallel Algorithms for Generating Distinguishing Sequences for Observable Non-deterministic FSMs.,Robert M. Hierons; Uraz Cengiz Türker,5:1-5:34,34,https://doi.org/10.1145/3051121,,,TRUE
TOSEM,2017,journals/tosem/tosem26,"Volume 26, Number 2, October 2017",Fixing Faults in C and Java Source Code: Abbreviated vs. Full-Word Identifier Names.,Giuseppe Scanniello; Michele Risi; Porfirio Tramontana; Simone Romano,6:1-6:43,43,https://doi.org/10.1145/3104029,,,TRUE
TOSEM,2017,journals/tosem/tosem26,"Volume 26, Number 2, October 2017",A Logic-Based Approach for the Verification of UML Timed Models.,Luciano Baresi; Angelo Morzenti; Alfredo Motta; Mohammad Mehdi Pourhashem Kallehbasti; Matteo Rossi,7:1-7:47,47,https://doi.org/10.1145/3106411,,,TRUE
TOSEM,2017,journals/tosem/tosem26,"Volume 26, Number 2, October 2017",Early Evaluation of Implementation Alternatives of Composite Data Structures Toward Maintainability.,Chris Karanikolas; Grigoris Dimitroulakos; Konstantinos Masselos,8:1-8:44,44,https://doi.org/10.1145/3132731,,,TRUE
TOSEM,2017,journals/tosem/tosem26,"Volume 26, Number 3, January 2018",Global and Local Deadlock Freedom in BIP.,Paul C. Attie; Saddek Bensalem; Marius Bozga; Mohamad Jaber; Joseph Sifakis; Fadi A. Zaraket,9:1-9:48,48,https://doi.org/10.1145/3152910,,,TRUE
TOSEM,2017,journals/tosem/tosem26,"Volume 26, Number 3, January 2018",Variability Bugs in Highly Configurable Systems: A Qualitative Analysis.,Iago Abal; Jean Melo; Stefan Stanciulescu; Claus Brabrand; Márcio Ribeiro; Andrzej Wasowski,10:1-10:34,34,https://doi.org/10.1145/3149119,,,TRUE
TOSEM,2017,journals/tosem/tosem26,"Volume 26, Number 3, January 2018","Lightweight, Obfuscation-Resilient Detection and Family Identification of Android Malware.",Joshua Garcia; Mahmoud Hammad; Sam Malek,11:1-11:29,29,https://doi.org/10.1145/3162625,,,TRUE
TOSEM,2017,journals/tosem/tosem26,"Volume 26, Number 4, February 2018",Understanding and Combating Memory Bloat in Managed Data-Intensive Systems.,Khanh Nguyen; Kai Wang; Yingyi Bu; Lu Fang; Guoqing (Harry) Xu,12:1-12:41,41,https://doi.org/10.1145/3162626,,,TRUE
TOSEM,2017,journals/tosem/tosem26,"Volume 26, Number 4, February 2018",Detecting the Behavior of Design Patterns through Model Checking and Dynamic Analysis.,Andrea De Lucia; Vincenzo Deufemia; Carmine Gravino; Michele Risi,13:1-13:41,41,https://doi.org/10.1145/3176643,,,TRUE
TOSEM,2017,journals/tosem/tosem26,"Volume 26, Number 4, February 2018",Configuring Software Product Lines by Combining Many-Objective Optimization and SAT Solvers.,Yi Xiang; Yuren Zhou; Zibin Zheng; Miqing Li,14:1-14:46,46,https://doi.org/10.1145/3176644,,,TRUE
TOSEM,2018,journals/tosem/tosem27,"Volume 27, Number 1, June 2018",Editorial.,David S. Rosenblum,1e:1-1e:2,2,https://doi.org/10.1145/3205909,empty_page_range,fixed,FALSE
TOSEM,2018,journals/tosem/tosem27,"Volume 27, Number 1, June 2018",How Far We Have Progressed in the Journey? An Examination of Cross-Project Defect Prediction.,Yuming Zhou; Yibiao Yang; Hongmin Lu; Lin Chen; Yanhui Li; Yangyang Zhao; Junyan Qian; Baowen Xu,1:1-1:51,51,https://doi.org/10.1145/3183339,,,TRUE
TOSEM,2018,journals/tosem/tosem27,"Volume 27, Number 1, June 2018",Assessing the Refactoring of Brain Methods.,Santiago A. Vidal; Iñaki berra; Santiago Zulliani; Claudia Marcos; J. Andrés Díaz Pace,2:1-2:43,43,https://doi.org/10.1145/3191314,,,TRUE
TOSEM,2018,journals/tosem/tosem27,"Volume 27, Number 1, June 2018",An Empirical Study of Meta- and Hyper-Heuristic Search for Multi-Objective Release Planning.,Yuanyuan Zhang; Mark Harman; Gabriela Ochoa; Guenther Ruhe; Sjaak Brinkkemper,3:1-3:32,32,https://doi.org/10.1145/3196831,,,TRUE
TOSEM,2018,journals/tosem/tosem27,"Volume 27, Number 1, June 2018",Inferring Extended Probabilistic Finite-State Automaton Models from Software Executions.,Seyedeh Sepideh Emam; James Miller,4:1-4:39,39,https://doi.org/10.1145/3196883,,,TRUE
TOSEM,2018,journals/tosem/tosem27,"Volume 27, Number 2, July 2018",FEMOSAA: Feature-Guided and Knee-Driven Multi-Objective Optimization for Self-Adaptive Software.,Tao Chen; Ke Li; Rami Bahsoon; Xin Yao,5:1-5:50,50,https://doi.org/10.1145/3204459,,,TRUE
TOSEM,2018,journals/tosem/tosem27,"Volume 27, Number 2, July 2018",Prove it! Inferring Formal Proof Scripts from CafeOBJ Proof Scores.,Adrián Riesco; Kazuhiro Ogata,6:1-6:32,32,https://doi.org/10.1145/3208951,,,TRUE
TOSEM,2018,journals/tosem/tosem27,"Volume 27, Number 2, July 2018",STADS: Software Testing as Species Discovery.,Marcel Böhme,7:1-7:52,52,https://doi.org/10.1145/3210309,,,TRUE
TOSEM,2018,journals/tosem/tosem27,"Volume 27, Number 2, July 2018",Maintaining Architecture-Implementation Conformance to Support Architecture Centrality: From Single System to Product Line Development.,Yongjie Zheng; Cuong Cu; Richard N. Taylor,8:1-8:52,52,https://doi.org/10.1145/3229048,,,TRUE
TOSEM,2018,journals/tosem/tosem27,"Volume 27, Number 3, October 2018",Editorial.,David S. Rosenblum,9:1-9:2,2,https://doi.org/10.1145/3264424,,,FALSE
TOSEM,2018,journals/tosem/tosem27,"Volume 27, Number 3, October 2018",Shadow Symbolic Execution for Testing Software Patches.,Tomasz Kuchta; Hristina Palikareva; Cristian Cadar,10:1-10:32,32,https://doi.org/10.1145/3208952,,,TRUE
TOSEM,2018,journals/tosem/tosem27,"Volume 27, Number 3, October 2018",The ABC of Software Engineering Research.,Klaas-Jan Stol; Brian Fitzgerald,11:1-11:51,51,https://doi.org/10.1145/3241743,,,TRUE
TOSEM,2018,journals/tosem/tosem27,"Volume 27, Number 3, October 2018",Linear Programming as a Baseline for Software Effort Estimation.,Federica Sarro; Alessio Petrozziello,12:1-12:28,28,https://doi.org/10.1145/3234940,,,TRUE
TOSEM,2018,journals/tosem/tosem27,"Volume 27, Number 3, October 2018",Spectrum-Based Fault Localization in Model Transformations.,Javier Troya; Sergio Segura; José Antonio Parejo; Antonio Ruiz Cortés,13:1-13:50,50,https://doi.org/10.1145/3241744,,,TRUE
TOSEM,2018,journals/tosem/tosem27,"Volume 27, Number 3, October 2018",Multi-Objective Optimization of Energy Consumption of GUIs in Android Apps.,Mario Linares-Vásquez; Gabriele Bavota; Carlos Bernal-Cárdenas; Massimiliano Di Penta; Rocco Oliveto; Denys Poshyvanyk,14:1-14:47,47,https://doi.org/10.1145/3241742,,,TRUE
TOSEM,2018,journals/tosem/tosem27,"Volume 27, Number 4, November 2018",Test-Equivalence Analysis for Automatic Patch Generation.,Sergey Mechtaev; Xiang Gao; Shin Hwei Tan; Abhik Roychoudhury,15:1-15:37,37,https://dl.acm.org/citation.cfm?id=3241980,,,TRUE
TOSEM,2018,journals/tosem/tosem27,"Volume 27, Number 4, November 2018",Recommending Who to Follow in the Software Engineering Twitter Space.,Abhishek Sharma; Yuan Tian; Agus Sulistya; Dinusha Wijedasa; David Lo,16:1-16:33,33,https://dl.acm.org/citation.cfm?id=3266426,,,TRUE
TOSEM,2018,journals/tosem/tosem27,"Volume 27, Number 4, November 2018",Refactoring Multi-Level Models.,Juan de Lara; Esther Guerra,17:1-17:56,56,https://dl.acm.org/citation.cfm?id=3280985,,,TRUE
TOSEM,2018,journals/tosem/tosem27,"Volume 27, Number 4, November 2018",Variability-Aware Static Analysis at Scale: An Empirical Study.,Alexander von Rhein; Jörg Liebig; Andreas Janker; Christian Kästner; Sven Apel,18:1-18:33,33,https://dl.acm.org/citation.cfm?id=3280986,,,TRUE
